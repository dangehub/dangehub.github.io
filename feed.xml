<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://blog.qudange.top">
    <title>阿曲的荒原</title>
    <link href="https://blog.qudange.top/feed.xml" rel="self" //>
    <link href="https://blog.qudange.top" //>
    <updated>2025-10-03T09:44:05Z</updated>
    <id>https://blog.qudange.top</id>
        <entry>
            <title>
                README
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/</id>
            <content type="html">
                &lt;h1 id=&quot;十分冷淡存知己 一曲微茫度余生&quot; tabindex=&quot;-1&quot;&gt;十分冷淡存知己 一曲微茫度余生&lt;/h1&gt;
&lt;p&gt;你好，欢迎来到独属于我的罅隙。&lt;/p&gt;
&lt;p&gt;我是一个重度笔记爱好者，从早期的印象笔记，到后来换用 onenote、notability、goodnotes、思源笔记、为知笔记、notion、obsidian……&lt;/p&gt;
&lt;p&gt;最后我选择长期使用 obsidian，从 21 年到现在，也积累了上千条笔记了。我并不觉得我的笔记做的有多好，但是做笔记让我感觉快乐。&lt;/p&gt;
&lt;p&gt;在探索笔记组织方式的过程中，我也产生了很多疑惑，感谢互联网上先驱者们的无私分享，因此我也在这里分享我自己的经验，如果能帮到茫茫人海中的你就最好了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!如果你想说点什么]&lt;br /&gt;
本博客支持评论功能，浏览至网页最下方时懒加载（此主页除外），欢迎留言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;在哪能找到我&quot; tabindex=&quot;-1&quot;&gt;在哪能找到我&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在 Vercel 查看我的博客（中国大陆网络可正常访问）：&lt;a href=&quot;https://blog.qudange.top/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;blog.qudange.top&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 Github page 上查看我的博客：&lt;a href=&quot;https://dangehub.github.io/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;dangehub.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用 RSS 关注我的博客：&lt;a href=&quot;https://blog.qudange.top/feed.xml&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;blog.qudange.top/feed.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用 follow 关注我的博客：&lt;a href=&quot;https://app.follow.is/share/feeds/105271225522095104&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;app.follow.is/share/feeds/105271225522095104&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;我还运营着以下平台&quot; tabindex=&quot;-1&quot;&gt;我还运营着以下平台&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Bilibili&lt;/strong&gt;：&lt;a href=&quot;https://space.bilibili.com/479855734&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;三花猫曲奇&lt;/a&gt;&lt;br /&gt;
我会在这里分享我的个人知识管理总结，视频和文字是一种截然不同的体验，或许你可以来看看。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小红书&lt;/strong&gt;：&lt;a href=&quot;https://www.xiaohongshu.com/user/profile/677e4a0d000000000403fb35&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;曲淡歌 - 小红书&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;联系方式&quot; tabindex=&quot;-1&quot;&gt;联系方式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;邮箱&lt;/strong&gt;：&lt;code&gt;wanyy314@foxmail.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Discord：&lt;code&gt;qudange&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;个人微博&quot; tabindex=&quot;-1&quot;&gt;个人微博&lt;/h2&gt;
&lt;p&gt;Mastodon、Misskey 等兼容联邦宇宙的平台关注 &lt;code&gt;qudange@blogs.qudange.top&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;文章时间轴&quot; tabindex=&quot;-1&quot;&gt;文章时间轴&lt;/h1&gt;
&lt;p&gt;此时间轴用 &lt;code&gt;dataview&lt;/code&gt; 自动生成：&lt;/p&gt;
&lt;table class=&quot;block-language-dataview&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标题&lt;/th&gt;
&lt;th&gt;发布时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Thino%E4%B8%8EMac%E8%BD%AF%E4%BB%B6popclip%E8%81%94%E5%8A%A8-%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E7%BA%A7%E5%85%A8%E5%B1%80%E5%88%92%E8%AF%8D%E6%91%98%E5%BD%95/&quot;&gt;Thino与Mac软件popclip联动-实现系统级全局划词摘录&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-02-07&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/ollama%E7%A6%BB%E7%BA%BF%E8%BF%90%E8%A1%8CAI%E6%A8%A1%E5%9E%8B-%E5%8F%8D%E6%80%9D%E7%BF%BB%E8%AF%91%E6%B3%95-%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%BF%BB%E8%AF%91-%E5%85%8D%E8%B4%B9%E5%8F%88%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BF%BB%E8%AF%91/&quot;&gt;ollama离线运行AI模型-反思翻译法-沉浸式翻译-免费又好用的翻译&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-02-03&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://blog.qudange.top/404&quot; target=&quot;&quot;&gt;如何在在多个邮箱里阅读外语邮件？最好的电子邮件聚合客户端thunderbird+最好的翻译软件沉浸式翻译&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/%E8%AE%A9Obsidian%E7%9A%84%E5%85%89%E6%A0%87%E4%B8%9D%E6%BB%91%E7%A7%BB%E5%8A%A8/&quot;&gt;让Obsidian的光标丝滑移动&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://blog.qudange.top/404&quot; target=&quot;&quot;&gt;在移动端设备上管理Obsidian待办的方法探讨&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/follow%E8%AE%A4%E8%AF%81%E6%96%87%E4%BB%B6/&quot;&gt;follow认证文件&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84-i18n-%E6%B1%89%E5%8C%96%E6%8F%92%E4%BB%B6%E3%80%81%E7%BF%BB%E8%AF%91%E8%AF%8D%E5%85%B8%E7%BC%96%E8%BE%91%E5%99%A8%E3%80%81%E4%BA%91%E7%AB%AF%E5%85%B1%E4%BA%AB%E8%AF%8D%E5%85%B8%E3%80%81%E5%86%85%E7%BD%AE%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%BF%BB%E8%AF%91/&quot;&gt;Obsidian插件测评-i18n-汉化插件、翻译词典编辑器、云端共享词典、内置沉浸式翻译&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84-BetterPluginsManager-%E6%8F%92%E4%BB%B6%E5%88%86%E7%BB%84%E3%80%81%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86%EF%BC%8C%E6%8F%92%E4%BB%B6%E5%A4%87%E6%B3%A8%EF%BC%8C%E5%BB%B6%E8%BF%9F%E5%90%AF%E5%8A%A8/&quot;&gt;Obsidian插件测评-BetterPluginsManager-插件分组、标签管理，插件备注，延迟启动&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-09&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/%E7%94%A8css%E8%AE%A9obsidian%E4%B8%AD%E7%9A%84%E6%89%AB%E6%8F%8F%E9%BB%91%E7%99%BD%E6%96%87%E6%A1%A3%E8%9E%8D%E5%85%A5%E7%AC%94%E8%AE%B0%E8%83%8C%E6%99%AF/&quot;&gt;用css让obsidian中的扫描黑白文档融入笔记背景&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-06&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Obsidian%E8%BD%BB%E9%87%8F%E7%BA%A7PPT%E6%95%99%E7%A8%8B/&quot;&gt;Obsidian轻量级PPT教程&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://blog.qudange.top/404&quot; target=&quot;&quot;&gt;优化macOS的触摸板体验&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2025-01-03&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/%E6%8A%8AObsidian%E5%8F%91%E5%B8%83%E4%B8%BA%E7%BD%91%E9%A1%B5%E7%9A%84%E5%90%84%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%8E%A2%E7%B4%A2/&quot;&gt;把Obsidian发布为网页的各种方式探索&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/%E6%88%91%E7%BB%B4%E6%8A%A4%E4%BA%86%E4%B8%80%E4%B8%AAobsidian%E7%A4%BA%E4%BE%8B%E5%BA%93%EF%BC%8C%E5%88%86%E4%BA%AB%E4%BA%86%E6%88%91%E7%9A%84obsidian%E5%B7%A5%E4%BD%9C%E6%B5%81/&quot;&gt;我维护了一个obsidian示例库，分享了我的obsidian工作流&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%88%B6%E4%BD%9C/%E5%8F%A3%E6%92%AD%E5%89%AA%E8%BE%91%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%8E%A2%E7%B4%A2/&quot;&gt;口播剪辑工作流探索&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/%E7%94%A8%E5%8F%8D%E6%80%9D%E7%BF%BB%E8%AF%91%E6%B3%95%E6%8F%90%E5%8D%87%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BF%BB%E8%AF%91%E7%9A%84%E8%B4%A8%E9%87%8F/&quot;&gt;用反思翻译法提升大语言模型翻译的质量&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/%E5%9C%A8wordpress%E9%80%9A%E8%BF%87RSS%E6%9D%A5%E5%A4%87%E4%BB%BD%E4%BB%BB%E4%BD%95%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%BF%A1%E6%81%AF%EF%BC%8C%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E5%AA%92%E4%BD%93%E6%9E%A2%E7%BA%BD/&quot;&gt;在wordpress通过RSS来备份任何平台的信息，打造个人媒体枢纽&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%9A%E4%BB%8Ebitwarden%E8%BF%81%E7%A7%BB%E5%88%B0keepass/&quot;&gt;密码管理器：从bitwarden迁移到keepass&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E8%BF%88%E5%90%91%E7%88%B1%E6%8A%98%E8%85%BE%E7%9A%84geek%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5%E2%80%94%E2%80%94%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE%E3%80%81%E5%AD%A6%E4%BC%9A%E6%9F%A5%E8%B5%84%E6%96%99/&quot;&gt;迈向爱折腾的geek的第一步——学会提问、学会查资料&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Obsidian%E6%8A%80%E5%B7%A7%E4%B9%8B%E7%94%A8maoxian%E6%8F%92%E4%BB%B6%E5%89%AA%E8%97%8F%E7%BD%91%E7%BB%9C%E6%96%87%E7%AB%A0%EF%BC%8C%E5%90%8C%E6%97%B6%E6%8A%8A%E5%9B%BE%E7%89%87%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/&quot;&gt;Obsidian技巧之用maoxian插件剪藏网络文章，同时把图片下载到本地&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/%E4%B8%80%E9%94%AE%E6%8A%8Aexcalidraw%E7%9A%84%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4%E8%BE%93%E5%87%BA%E4%B8%BA%E7%BA%BF%E6%80%A7%E6%96%87%E7%AB%A0/&quot;&gt;一键把excalidraw的头脑风暴输出为线性文章&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Obsidian%E5%AE%9E%E7%8E%B0%E5%A4%8D%E5%88%B6%E6%97%B6%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E5%9B%BE%E5%BA%8A/&quot;&gt;Obsidian实现复制时自动上传图片到图床&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Anyblock%E6%8F%92%E4%BB%B6%E5%85%A5%E9%97%A8/&quot;&gt;Anyblock插件入门&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://blog.qudange.top/404&quot; target=&quot;&quot;&gt;Obcsapi-赋予Obsidian在线api能力-拓宽OB的能力边界&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/%E7%94%A8n8n%E5%AE%9E%E7%8E%B0%E5%8F%8D%E6%80%9D%E7%BF%BB%E8%AF%91/&quot;&gt;用n8n实现反思翻译&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2024-12-30&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;本网站的实现方式&quot; tabindex=&quot;-1&quot;&gt;本网站的实现方式&lt;/h1&gt;
&lt;p&gt;这是一个使用 obsidian-digital-garden 实现的博客，我很推荐这个插件，如果你对这种实现方式感兴趣的话，可以查看这个链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dg-docs.ole.dev/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;数字花园 - 免费发布黑曜石笔记 --- Digital Garden - Publish Obsidian Notes For Free&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

            </content>
            <link href="https://blog.qudange.top/" //>
        </entry>
        <entry>
            <title>
                迈向爱折腾的geek的第一步——学会提问、学会查资料
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/迈向爱折腾的geek的第一步——学会提问、学会查资料/</id>
            <content type="html">
                &lt;h1 id=&quot;geek&quot; tabindex=&quot;-1&quot;&gt;迈向爱折腾的 geek 的第一步：学会提问、学会查资料&lt;/h1&gt;
&lt;h2 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;软路由、NAS、虚拟机、群晖、qnap、unraid、PVE、esxi、proxmox、truenas、OMV、PT、刷流、保种、docker、k8s、podman、chatgpt、LLM、self-hosted、自托管、vps、typora、obsidian、思源笔记、memos、joplin、logseq、notion、heptabase、tasker、macrodroid、快捷指令、shotcuts、少数派、v2ex、穿越机、fpv、树莓派、autohotkey、Manim、github……&lt;/p&gt;
&lt;p&gt;这些词语有没有你熟悉的？有没有你正在关注或者学习的？如果你是一个爱折腾计算机相关的东西的人，早晚会和这些东西打交道。但是想要入门这些圈子，有门槛。这门槛说低不低，说高不高，如果你是一个爱思考、爱学习的人，相信你一定可以在这些事物中找到属于自己的乐趣。当然，如果你不具备上述特质，但是有一颗谦虚的心，也是完全 ok 的。&lt;/p&gt;
&lt;p&gt;或许你注意到了，本文的标题中有一个词叫“Geek”，这个词在中文里也被译为“极客”，这里我们引用一段来自百度百科的话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“极客是美国俚语 Geek 音标 [ɡiːk] 的音译。随着互联网文化的兴起，这个词含有智力超群和努力的意思，又被用于形容对计算机和网络技术有狂热兴趣并投入大量时间钻研的人。现代的 Geek 含义虽然与过去有所不同，但大多仍相似，Geek 更多是指在互联网时代创造全新的商业模式、尖端技术与时尚潮流的人。总之，是一群以创新、技术和时尚为生命意义的人，这群人共同地战斗在新经济、尖端技术和世界时尚风潮的前线，共同为现代的电子化社会文化做出自己的贡献。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在早些年，二次元文化中也常常提到一个词叫“技术宅”，它们也是有相似之处的。&lt;/p&gt;
&lt;p&gt;而今天我就想探讨一下，如何成为一个 Geek。&lt;/p&gt;
&lt;p&gt;我相信当你看到这篇文章的时候，已经不是一个完全的门外汉，很有可能你已经一只脚迈入了门槛，但是苦于找不到真正入门的办法。或许，你会觉得这个圈子里的人多少有点装逼，小白问问题经常得不到回答，老鸟们态度都很差。这里我不做价值评判，但是我可以从两个角度来分析这个问题。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;小白世界线 1: 我听说这个东西很有意思，于是我开始尝试，很有可能我是在 bilibili 刷到了一个视频，然后我开始跟着视频做，但是即便我按照视频的方法操作了，还是遇见了意外的问题。这个时候我开始在评论区问问题，终于，有人回答了我，但是他的回答很简略，不能解答我的问题。于是我费尽千辛万苦，终于找到了一个 QQ 群，加群的时候需要回答问题，这个问题好难啊，我也是在网上找了很久。终于我加到了 QQ 群里，一进来就弹出一个群公告，要求新人把自己的昵称改成“设备 - 型号”，什么东西？直接叉掉。然后我开始在群里问问题，一开始大家很热心，但是不知道为什么，他们越来越不耐烦，很多时候我提问，根本没有人回复。我只好隔一会儿就问一次一样的问题，然后突然有一个人开始嘲讽我，我很生气。你不就是比我多玩了几天吗？怎么这么欺负新人？我忍不住骂了他两句，然后我就被踢出群了。&lt;/p&gt;
&lt;p&gt;小白世界线 2:（到加群前面都一样）我加到群里，按照公告要求改好了备注，很礼貌的问了一个我刚刚遇见的问题，被一个看上去是老人的嘲讽“这也不懂还玩 xx？”&lt;/p&gt;
&lt;p&gt;老鸟世界线 1: 我在群里遇见一个新人，进群不看群公告，上来就问公告里写了的问题，提问不带日志，群文件里的新手入门必看都不看，但是我也能理解，毕竟大家都是从新手过来的，于是我好心的耐心的回答了他的问题。然后他开始了颐指气使，要求我帮他做这做那，我们群里几个比较热心的老哥花了一晚上的时间帮他搞定了，最后他一句谢谢都没说。大家都沉默了，之后再也没有人理过他。然后他还在接着问问题，见没人回答，他在群里破口大骂：“一群傻 *，会玩 xx 了不起啊”，骂完之后他退了群&lt;/p&gt;
&lt;p&gt;老鸟世界线 2: 今天打开 qq，上来就看到一个傻 x 菜鸟问个傻 x 问题，给他喷烂，哈哈真爽&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;以上情况我都遇见过，只能说人的多样性是难以想象的。希望萌新可以保持礼貌和好学，不要做一个让人唾弃的伸手党，而在这条路上稍微先行一步的老鸟也能保持谦虚与友好，让一个圈子可以越来越繁荣，而不是故步自封，自绝于群众。&lt;/p&gt;
&lt;p&gt;因此我写下这篇文章，想以一个比较放松的形式来给新手一点建议，如果你想入门这些折腾的东西。那么你需要有基本的相关能力，但我也知道人和人是不一样的，可能对于一个人来说是常识的东西，在另一个人眼中都是超纲的知识。所以我们需要先建立一些共识，而这篇文章就是想抛砖引玉，企图找到这个“共识”。&lt;/p&gt;
&lt;p&gt;下面，就让我们探讨一下成为一个 Geek 需要的能力与素质.&lt;/p&gt;
&lt;h2 id=&quot;信息检索能力&quot; tabindex=&quot;-1&quot;&gt;信息检索能力&lt;/h2&gt;
&lt;p&gt;“好消息!好消息! 本群成功与百度、bing、google 等知名搜索引擎达成合作关系,以后新手有什么想问的的问题可以直接搜索,不需要在问群友了，可以省下大家很多时间!”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/assets/Pasted%20image%2020241219154140.png&quot; alt=&quot;assets/Pasted image 20241219154140.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这是一个早年间就流传在 qq 群、贴吧的表情包文案，它也反应出一个问题：很多人喜欢把群友当搜索引擎，问一些网上一搜就能搜出来的问题。这种行为在几乎所有圈子里都会引起反感，做出这种行为的人往往也会被称为“伸手党”，恰似俗话说的“衣来伸手，饭来张口”，可见古人也很讨厌这种人。&lt;/p&gt;
&lt;p&gt;那么如何避免成为伸手党呢？首先要摈弃思维上的惰性，遇见问题不要总想马上依赖他人，不妨先去搜索一下。要知道生在互联网时代，信息的获取几乎是免费的，如果连动动小手去搜索一下都不愿意的话， 建议别玩！&lt;/p&gt;
&lt;p&gt;我相信愿意听我啰嗦到这里的朋友，肯定不是上面这种人，但是很多时候还是会问出一些让人笑话的问题，这一般是因为你不会搜索。&lt;/p&gt;
&lt;p&gt;现代互联网社会，搜索是一门技术，现代的文盲几乎可以定义为不会使用计算机进行学习、交流的人。因此成为 Geek 第一步就是先学会如何使用搜索引擎。&lt;/p&gt;
&lt;h3 id=&quot;搜索引擎入门&quot; tabindex=&quot;-1&quot;&gt;搜索引擎入门&lt;/h3&gt;
&lt;h4 id=&quot;选对搜索引擎&quot; tabindex=&quot;-1&quot;&gt;选对搜索引擎&lt;/h4&gt;
&lt;p&gt;鉴于我的的能力有限，我会分享一点搜索的小技巧，希望能帮助到你。&lt;/p&gt;
&lt;p&gt;第一步：选对搜索引擎。不要用百度，不要用百度，不要用百度！现在百度搜索出来的结果有太多废物与广告，会让你迷失在互联网糟粕的海洋中。&lt;/p&gt;
&lt;p&gt;一般人建议就用必应，即 bing，这是微软推出的一个搜索引擎，网址为 &lt;a href=&quot;http://cn.bing.com/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;cn.bing.com&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你具备相关能力，在检索非中文信息的时候可以用 google。&lt;/p&gt;
&lt;p&gt;这里也要说一句题外话，当你发现在中文社区难以找到有价值的资料，不妨试一试英文。不要害怕看不懂，现在的翻译工具已经非常完善了，一个沉浸式翻译插件就能让你畅游外文社区。而外文社区的资料丰富度与质量还是要高不少的。&lt;/p&gt;
&lt;p&gt;这里也可以推荐一个视频，讲为什么要用英语：&lt;a href=&quot;https://www.bilibili.com/video/BV17N4y1p7rB&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;英语才是最好的计算机语言【让编程再次伟大#3】&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;关键词的选择&quot; tabindex=&quot;-1&quot;&gt;关键词的选择&lt;/h4&gt;
&lt;p&gt;搜索很简单：打开搜索引擎，输入关键词，阅读结果&lt;/p&gt;
&lt;p&gt;搜索很难：用错引擎，选不好关键词，懂不动结果&lt;/p&gt;
&lt;p&gt;最关键的一步就是关键词，毕竟名字中就有“关键”&lt;/p&gt;
&lt;p&gt;用一句话概括如何搜索：放弃说话的方式，转而提炼一句话中不能删除的东西，也就是“关键词”。&lt;/p&gt;
&lt;p&gt;比如用 bing 搜索：“怎么申请 chatgpt 的 api”，得到的第一条叫“&lt;/p&gt;
&lt;p&gt;chatGPT 国内怎么用？答案全在这里！3 种方法随你选择”&lt;/p&gt;
&lt;p&gt;但如果搜索：“chatgpt api 申请”，得到的第一条结果则是“ChatGPT 初体验：注册、API Key 获取与 ChatAPI 调用”&lt;/p&gt;
&lt;p&gt;很明显自己在搜索前手动拆分好关键词，会比让搜索引擎自己去揣摩你想要什么要好的多，要记住你面对的是一个不懂人心的机器，而不是另一个人，因此应该由人去揣摩机器。&lt;/p&gt;
&lt;p&gt;当然搜索引擎的关键词有很多讲究，比如引号、加减号、site 等技巧，但这不是重点，感兴趣的大家可以自己去搜索一下。&lt;/p&gt;
&lt;h4 id=&quot;什么年代了，还在玩传统搜索？&quot; tabindex=&quot;-1&quot;&gt;什么年代了，还在玩传统搜索？&lt;/h4&gt;
&lt;p&gt;你说你不会搜索，那不妨试试 AI。自 ChatGPT 之后，大语言模型已经让搜索变得简单多了，如果你想尝试 AI 搜索，可以试试这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;秘塔搜索&lt;/li&gt;
&lt;li&gt;天工 AI 搜索&lt;/li&gt;
&lt;li&gt;KIMI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我推荐了三个国内的 AI 搜索引擎，主要是便于新手接触，不代表能力优劣，当你对这个领域熟悉后，会找到适合你自己的选择。&lt;/p&gt;
&lt;p&gt;对于 AI 搜索来说，关键词就是反着来，你怎么想的就怎么问，不要自己去拆分关键词，AI 会主动揣摩你的意图。同时记住，AI 是有无限耐心的，你可以不断的调整自己的问题来获取答案。&lt;/p&gt;
&lt;p&gt;比如我在写这篇文章的时候，突然发现我的 obsidian 悬浮大纲插件不见了，可能是因为刚刚我更新了客户端，于是我去秘塔 AI 搜索“obsidian 怎么在主界面悬浮显示大纲 需要什么插件？”，它很快就给我找到了那个我忘记了名字的插件——floating-toc。但是它也犯错了，AI 说这个插件是核心插件，不需要下载。但实际上这是一个第三方插件，因此大家在使用 AI 的时候一定要注意，AI 是会编造谎话的，需要自己再去交叉信源确认真假。&lt;/p&gt;
&lt;h4 id=&quot;论坛信息检索&quot; tabindex=&quot;-1&quot;&gt;论坛信息检索&lt;/h4&gt;
&lt;p&gt;很多论坛不支持免登录搜索，甚至查看都需要注册，这个时候可以使用搜索引擎技巧之“关键词 site:xx.com”和页面快照来快速查看论坛信息&lt;/p&gt;
&lt;h3 id=&quot;qq&quot; tabindex=&quot;-1&quot;&gt;私域流量时代，绕不开的社群 （以 QQ 群为例）&lt;/h3&gt;
&lt;p&gt;首先我很讨厌用通讯软件做知识分享，因为不具备可复用性，前人问过的问题被淹没在聊天记录中，后人又要问一样的问题。但是架不住大环境又如此，所以我们只能尽量去适应它。&lt;/p&gt;
&lt;p&gt;新加入一个群，&lt;font color=&quot;#ff0000&quot;&gt;先看群公告&lt;/font&gt;，再看群文件里有没有类似新手入门的东西，看完之后再说话是一种礼貌。&lt;/p&gt;
&lt;p&gt;提问之前先搜索群聊天记录，一般来说刚加群可以看到最近几天的聊天记录。&lt;/p&gt;
&lt;p&gt;以上方法都解答不了问题之后，嘴巴甜一点提问题。不要觉得别人的义务劳动是理所当然，毕竟，别人回答你的问题，又没收一分钱。&lt;/p&gt;
&lt;p&gt;当然 QQ 群里总是有一些优越感很强的人，可以使用 QQ 群的屏蔽此人发言功能，能有效改善自己的心情。&lt;/p&gt;
&lt;h4 id=&quot;学会问问题&quot; tabindex=&quot;-1&quot;&gt;学会问问题&lt;/h4&gt;
&lt;p&gt;说到加群提问，就不得不说很多人根本不会问问题。就像文章开头说的菜鸟老鸟之争，很多时候人是被一个又一个弱智问题给逼疯的。&lt;/p&gt;
&lt;p&gt;参考这篇文章：&lt;a href=&quot;https://pkmer.cn/Pkmer-Docs/02-%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%9C%86%E6%A1%8C%E8%AE%A8%E8%AE%BA/os/%E5%A6%82%E4%BD%95%E7%B2%BE%E5%87%86%E8%A1%A8%E8%BE%BE/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;如何精准表达&lt;/a&gt;，新手应该学习如何正确表达自己的问题。&lt;/p&gt;
&lt;p&gt;借用 pkmer 群公告里的一张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/assets/4e650a7b89b72c7be019ab3ce4d09df4.jpeg&quot; alt=&quot;assets/4e650a7b89b72c7be019ab3ce4d09df4.jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;我总结了一些规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不要当伸手党，问人之前先搜索
&lt;ul&gt;
&lt;li&gt;因为我经常遇见“把原问题拿去搜索，第一条就是答案”的那种提问，真的很无语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;直接了当，像写邮件一样提问，一段话说明来意
&lt;ul&gt;
&lt;li&gt;因为总有人喜欢问“有没有用过 xx 软件”，然后双方就要进行很多不必要的对话与沟通，加上聊天软件本身就是异步的，很可能会来回拉扯很久&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;提问方法要有信息量：遇见 bug/疑难杂症，给出复现 bug 的步骤或者日志
&lt;ul&gt;
&lt;li&gt;我也经常遇见有人问“xx 用不了怎么办”，这种没有现象描述、复现流程、报错日志的提问方法看着就让人无语。算命还得要个八字呢！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

            </content>
            <link href="https://blog.qudange.top/迈向爱折腾的geek的第一步——学会提问、学会查资料/" //>
        </entry>
        <entry>
            <title>
                用n8n实现反思翻译
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/自托管折腾/用n8n实现反思翻译/</id>
            <content type="html">
                &lt;p&gt;用 defy 搭建三步翻译老是报错，想自托管发现 defy 的配置要求很高，于是准备先用之前的 n 8 n 试试。&lt;/p&gt;
&lt;p&gt;更新 n 8 n：1.0.4 更新到 1.44.1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/img-20250208161618623.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;采用这样的结构时，会报错 &lt;code&gt;Expected to find the prompt in an input field called &#39;chatInput&#39; (this is what the chat trigger node outputs). To use something else, change the &#39;Prompt&#39; parameter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;感觉像是个 bug，明明已经能读取前两个节点的输出，但是 n 8 n 还是提示无法读取到上上个节点。然后细查日志发现报错&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NodeOperationError: No prompt specified at getPromptInputByType (/usr/local/lib/node_modules/n8n/node_modules/@n8n/n8n-nodes-langchain/dist/utils/helpers.js:71:15) at Object.execute (/usr/local/lib/node_modules/n8n/node_modules/@n8n/n8n-nodes-langchain/dist/nodes/chains/ChainLLM/ChainLlm.node.js:412:65) at Workflow.runNode (/usr/local/lib/node_modules/n8n/node_modules/n8n-workflow/dist/Workflow.js:728:19) at /usr/local/lib/node_modules/n8n/node_modules/n8n-core/dist/WorkflowExecute.js:673:51 at /usr/local/lib/node_modules/n8n/node_modules/n8n-core/dist/WorkflowExecute.js:1086:20
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后面我发现问题来自于 &lt;code&gt;prompt&lt;/code&gt; 的设置，原来每个 llm chain 一开始就有一个 prompt 设置，而默认是继承自上一个节点，而我的第一个 llm chain 节点就没设置它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/img-20250208161619143.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;搞定后展示一下翻译效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;It’s so creepy and weird. I’ll go back and play DoDS and HL 2 DM etc and it’s still like a chat room while you play, it makes gaming so much more casual and enjoyable. I play this game and try to engage in any way and get literally no response from anyone. Is it just because this is a newer game so it’s full of antisocial teenagers who don’t know how to talk to each other? I just honestly don’t get it. It’s not that you’re obligated to chat, but it seems very weird to pretend that you’re not playing with other human beings.
Edit: I actually think this is why I lose interest in this game so quickly. In the old school games my team could be getting destroyed but it doesn’t bother me because we’re all chatting and having a good time. In this game it’s just silence anyway, doesn’t even feel like I’m playing against actual people so I don’t feel bad leaving in the middle of a match if we’re getting rolled.
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Google 翻译：&lt;br /&gt;
这太令人毛骨悚然和奇怪了。我会回去玩 DoDS 和 HL 2 DM 等游戏，玩的时候它仍然像一个聊天室，它让游戏变得更加休闲和愉快。我玩这个游戏并尝试以任何方式参与，但几乎没有得到任何人的回应。难道只是因为这是一款较新的游戏，所以里面充满了不知道如何与对方交谈的反社会青少年？老实说我不明白。这并不是说你有义务聊天，但假装你没有和其他人一起玩似乎很奇怪。&lt;br /&gt;
编辑：我实际上认为这就是我这么快对这款游戏失去兴趣的原因。在老式的学校比赛中，我的球队可能会被摧毁，但这并不困扰我，因为我们都在聊天，玩得很开心。无论如何，在这款游戏中，一切都是沉默，甚至感觉不到我是在和真人比赛，所以如果我们被淘汰，我不会因为在比赛中途离开而感到难过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;三步翻译：&lt;br /&gt;
实在是太奇怪而且让人有点不舒服了。回想当年玩《DoD:S》和《HL 2 DM》等游戏的时候，那种体验就像是在一间聊天室里面玩游戏，让整个游戏玩起来更加轻松且愉快。但当我玩这款游戏时，不管我怎么试图互动，却几乎得不到任何人的回应。难道仅仅因为这是一款新游戏，所以里面都是些不太愿意交流彼此的社恐少年吗？我真的搞不清楚是怎么回事。我不是说大家必须聊天，但完全假装没有和其他玩家一起玩的感觉总是让人觉得有点别扭。&lt;br /&gt;
编辑：我想这可能是导致我对这款游戏兴趣迅速消退的原因之一吧。在游戏中，即便是我们队伍大败亏输，我也不至于特别沮丧，因为我们那时都在愉快地聊天。但在这款游戏中，整个世界就像是一片寂静，根本感受不到自己是在跟其他玩家对战，所以我们遭受挫败时，我中途退出时也就没有什么内疚感了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面展示一下三步翻译的过程：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;直译：&lt;br /&gt;
真是太诡异又让人不舒服。我回到过去玩 DoDS 和 HL 2 DM 等游戏时，感觉就像在一个聊天室里游戏，这让整个游戏体验变得更加轻松愉快。然而玩这款游戏时，无论我怎样尝试互动，却几乎得不到任何人的回应。难道仅仅因为这是一款新游戏，所以满是那些不懂得彼此交谈的社交恐惧少年？我真的不明白这是怎么回事。我不是说大家非得聊天不可，只是假装没有和其他玩家一起游戏，总让我觉得有些奇怪。&#92;n&#92;n 编辑：我想明白了，这可能就是我迅速对这个游戏失去兴趣的原因。在以前的老游戏中，即使我的队伍被杀得人仰马翻，我也不会感到烦闷，因为我们都在欢快地聊天。而在这款游戏中，四周一片寂静，根本感受不到是在和真人对战，所以我们被碾压时，我中途离开也不会有丝毫的愧疚感。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;然后是用 ai 进行反思：&lt;br /&gt;
&amp;lt;直接翻译&amp;gt;中存在的问题:&#92;n&#92;n 1. &lt;strong&gt;不符合中文的表达习惯:&lt;/strong&gt;&#92;n - &amp;quot; 真是太诡异又让人不舒服 &amp;quot;：中文通常不以 &amp;quot; 真是太...&amp;quot; 这样的句式表达负面强烈的情感。&#92;n &#92;n 2. &lt;strong&gt;句子结构笨拙:&lt;/strong&gt;&#92;n - &amp;quot; 我玩这款游戏时，无论我怎样尝试互动，几乎得不到任何人的回应 &amp;quot;：应改为“当我玩这款游戏时，无论怎样尝试互动，几乎得不到任何人的回应”更加自然流畅。&#92;n &#92;n 3. &lt;strong&gt;表达含糊不清，难以理解：&lt;/strong&gt;&#92;n - &amp;quot; 难道仅仅因为这是一款新游戏, 所以满是那些不懂得彼此交谈的社交恐惧少年?&amp;quot; : 整个句子表达过于生硬，不易于理解其意图。&#92;n - &amp;quot; 而这款游戏中, 四周一片寂静, 根本感受不到是在和真人对战 &amp;quot;: 这里使用“真人”来指代其他在线玩家显得较为突兀且不自然。一般情况下，在这种语境中并不会强调对战的对象是否为真实的人，因为在网络游戏中默认就是与真人对战。&#92;n&#92;n 4. &lt;strong&gt;表达不够地道：&lt;/strong&gt;&#92;n - &amp;quot; 所以, 我们被碾压时, 我中途离开也不会有丝毫的愧疚感 &amp;quot; : 愧疚感的表达在此处显得过于严肃，通常在网络游戏中玩家们会更倾向于用更加随意的语气来描述此类情况。&#92;n&#92;n 注: 以上指出的问题并未提供修改后的版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此处我采用的是通义千问的 qwen-long 模型，它的实力在目前的 llm 中算不上非常强劲，这正好能说明三步翻译的强劲实力。&lt;/p&gt;
&lt;p&gt;2024-09-01 更新 我参考 FastGPT 又做了一个 n8n 三步翻译，同样使用 qwen-long，得到的翻译结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这真是有点怪。我回到老游戏像《战斗要塞》（DoDS）和《半条命2: 死亡竞赛》之类的，游戏里还是像聊天室一样，感觉特别轻松。玩这款游戏我试着跟人互动，却完全没人搭理我。是因为这是款新游戏，里面都是些不会社交的青少年吗？真搞不懂。虽然不是一定要聊天，但在游戏里忽略其他人存在也很古怪。

补充：我想，这才是我对这游戏兴致全无的原因了。以前玩老游戏时，哪怕队伍输得很惨，大家说说笑笑也觉得开心。在这新游戏里基本没人说话，感觉就像和机器对打，输了也不觉得可惜，想退随时能走。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这段翻译的效果整体来说比上一个版本还要好，就是最后一句话有点问题，感觉这句话的原意是“因为大家很糟糕，所以我中途退赛也不会有心理压力”&lt;/p&gt;
&lt;h1 id=&quot;api&quot; tabindex=&quot;-1&quot;&gt;做成 api 来配合划词翻译&lt;/h1&gt;
&lt;p&gt;先启动 n 8 n 的测试模式，然后用划词翻译发送一次，得到划词翻译的发包格式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;body&amp;quot;: {

&amp;quot;model&amp;quot;: &amp;quot;qwen-long&amp;quot;,

&amp;quot;messages&amp;quot;: [

{

&amp;quot;role&amp;quot;: &amp;quot;user&amp;quot;,

&amp;quot;content&amp;quot;: &amp;quot;This is an embeddable Chat widget for n8n. It allows the execution of AI-Powered Workflows through a Chat window.&amp;quot;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后需要根据格式调整 n8n&lt;/p&gt;
&lt;p&gt;n8n 自动翻译完之后的输出为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
[

{

&amp;quot;text&amp;quot;: &amp;quot;&amp;lt;改进翻译&amp;gt;&#92;n&#92;n这是一款专为 n8n 设计的、可嵌入式的聊天工具，它使用户能够在聊天窗口内执行由人工智能驱动的工作流程。&#92;n&#92;n在这个版本里解决了以下问题：&#92;n1. 调整了“可嵌入式”的位置，使之更符合中文的语言习惯。&#92;n2. 简化并调整了句子结构，将“它能让用户通过聊天窗口来运行由人工智能驱动的工作流程”改写为更贴合中文表达习惯和流畅度的表述：“它使用户能够在聊天窗口内执行由人工智能驱动的工作流程”。&#92;n3. 增强了句子之间逻辑关系的连贯性。&amp;quot;

}

]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而划词翻译需要接受来自 openai 格式的 json，因此需要把上面 n8n 的输出转换一下。&lt;/p&gt;
&lt;p&gt;openai 格式参考为:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;id&amp;quot;: &amp;quot;b3e86c70-bd28-995b-a6e9-c47ab55c6495&amp;quot;,
  &amp;quot;model&amp;quot;: &amp;quot;qwen&amp;quot;,
  &amp;quot;object&amp;quot;: &amp;quot;chat.completion&amp;quot;,
  &amp;quot;created&amp;quot;: 1722959731,
  &amp;quot;choices&amp;quot;: [
    {
      &amp;quot;index&amp;quot;: 0,
      &amp;quot;message&amp;quot;: {
        &amp;quot;role&amp;quot;: &amp;quot;assistant&amp;quot;,
        &amp;quot;content&amp;quot;: &amp;quot;Hello! How can I assist you today?&amp;quot;
      },
      &amp;quot;finish_reason&amp;quot;: &amp;quot;stop&amp;quot;
    }
  ],
  &amp;quot;usage&amp;quot;: {
    &amp;quot;prompt_tokens&amp;quot;: 1,
    &amp;quot;completion_tokens&amp;quot;: 9,
    &amp;quot;total_tokens&amp;quot;: 10
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意，在 http request 中不能使用引号和换行。&lt;/p&gt;
&lt;p&gt;在 prompt 中要求不要使用引号，然后用节点来处理换行符，最后得到效果如下：&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/img-20250208161619429.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到这个效果已经相当好了。&lt;/p&gt;
&lt;p&gt;不要相信 ai 的效果，引号与换行符都要用正则直接去掉。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ $json.text.replace(/(?:&#92;&amp;quot;|(?:&#92;r&#92;n|&#92;&#92;r|&#92;&#92;n|&#92;n))/g, &#39;&#39;)}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2025-01-01 更新：&lt;/p&gt;
&lt;p&gt;在 mac 上使用 bob，但是发现它也不能自己做三步翻译，只能用 chatgpt 直接翻译，这次我再做一个对比：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/img-20250208161620022.png&quot; alt=&quot;assets/img-20250208161620022.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/img-20250208161620426.png&quot; alt=&quot;assets/img-20250208161620426.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/img-20250208161620658.png&quot; alt=&quot;assets/img-20250208161620658.png&quot; /&gt;&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/自托管折腾/用n8n实现反思翻译/" //>
        </entry>
        <entry>
            <title>
                follow认证文件
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/自托管折腾/follow认证文件/</id>
            <content type="html">
                &lt;p&gt;This message is used to verify that this feed (feedId:105271225522095104) belongs to me (userId:72208719763571712). Join me in enjoying the next generation information browser &lt;a href=&quot;https://follow.is/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://follow.is&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;![[assets/obsidian-icon-ico.ico]]&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/assets/obsidian-icon-png.png&quot; alt=&quot;assets/obsidian-icon-png.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;svg id=&quot;custom-logo&quot; width=&quot;512&quot; height=&quot;512&quot; viewBox=&quot;0 0 512 512&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:100%;width:100%;&quot;&gt;  &lt;defs&gt;    &lt;radialGradient id=&quot;b&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(-48 -185 123 -32 179 429.7)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.4&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-opacity=&quot;.1&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;c&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(41 -310 229 30 341.6 351.3)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.6&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.1&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;d&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(57 -261 178 39 190.5 296.3)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.8&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.4&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;e&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(-79 -133 153 -90 321.4 464.2)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.3&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-opacity=&quot;.3&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;f&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(-29 136 -92 -20 300.7 149.9)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;0&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.2&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;g&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(72 73 -155 153 137.8 225.2)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.2&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.4&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;h&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(20 118 -251 43 215.1 273.7)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.1&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.3&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;radialGradient id=&quot;i&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;1&quot; gradientUnits=&quot;userSpaceOnUse&quot; gradientTransform=&quot;matrix(-162 -85 268 -510 374.4 371.7)&quot;&gt;      &lt;stop stop-color=&quot;#fff&quot; stop-opacity=&quot;.2&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;.5&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.2&quot;&gt;&lt;/stop&gt;      &lt;stop offset=&quot;1&quot; stop-color=&quot;#fff&quot; stop-opacity=&quot;.3&quot;&gt;&lt;/stop&gt;    &lt;/radialGradient&gt;    &lt;filter id=&quot;a&quot; x=&quot;80.1&quot; y=&quot;37&quot; width=&quot;351.1&quot; height=&quot;443.2&quot; filterUnits=&quot;userSpaceOnUse&quot; color-interpolation-filters=&quot;sRGB&quot;&gt;      &lt;feFlood flood-opacity=&quot;0&quot; result=&quot;BackgroundImageFix&quot;&gt;&lt;/feFlood&gt;      &lt;feBlend in=&quot;SourceGraphic&quot; in2=&quot;BackgroundImageFix&quot; result=&quot;shape&quot;&gt;&lt;/feBlend&gt;      &lt;feGaussianBlur stdDeviation=&quot;6.5&quot; result=&quot;effect1_foregroundBlur_744_9191&quot;&gt;&lt;/feGaussianBlur&gt;    &lt;/filter&gt;  &lt;/defs&gt;  &lt;rect id=&quot;logo-bg&quot; fill=&quot;#262626&quot; width=&quot;512&quot; height=&quot;512&quot; rx=&quot;100&quot;&gt;&lt;/rect&gt;  &lt;g filter=&quot;url(#a)&quot;&gt;    &lt;path d=&quot;M359.2 437.5c-2.6 19-21.3 33.9-40 28.7-26.5-7.2-57.2-18.6-84.8-20.7l-42.4-3.2a28 28 0 0 1-18-8.3l-73-74.8a27.7 27.7 0 0 1-5.4-30.7s45-98.6 46.8-103.7c1.6-5.1 7.8-49.9 11.4-73.9a28 28 0 0 1 9-16.5L249 57.2a28 28 0 0 1 40.6 3.4l72.6 91.6a29.5 29.5 0 0 1 6.2 18.3c0 17.3 1.5 53 11.2 76a301.3 301.3 0 0 0 35.6 58.2 14 14 0 0 1 1 15.6c-6.3 10.7-18.9 31.3-36.6 57.6a142.2 142.2 0 0 0-20.5 59.6Z&quot; fill=&quot;#000&quot; fill-opacity=&quot;.3&quot;&gt;&lt;/path&gt;  &lt;/g&gt;  &lt;path id=&quot;arrow&quot; d=&quot;M359.9 434.3c-2.6 19.1-21.3 34-40 28.9-26.4-7.3-57-18.7-84.7-20.8l-42.3-3.2a27.9 27.9 0 0 1-18-8.4l-73-75a27.9 27.9 0 0 1-5.4-31s45.1-99 46.8-104.2c1.7-5.1 7.8-50 11.4-74.2a28 28 0 0 1 9-16.6l86.2-77.5a28 28 0 0 1 40.6 3.5l72.5 92a29.7 29.7 0 0 1 6.2 18.3c0 17.4 1.5 53.2 11.1 76.3a303 303 0 0 0 35.6 58.5 14 14 0 0 1 1.1 15.7c-6.4 10.8-18.9 31.4-36.7 57.9a143.3 143.3 0 0 0-20.4 59.8Z&quot; fill=&quot;#6C31E3&quot;&gt;&lt;/path&gt;  &lt;path d=&quot;M182.7 436.4c33.9-68.7 33-118 18.5-153-13.2-32.4-37.9-52.8-57.3-65.5-.4 1.9-1 3.7-1.8 5.4L96.5 324.8a27.9 27.9 0 0 0 5.5 31l72.9 75c2.3 2.3 5 4.2 7.8 5.6Z&quot; fill=&quot;url(#b)&quot;&gt;&lt;/path&gt;  &lt;path d=&quot;M274.9 297c9.1.9 18 2.9 26.8 6.1 27.8 10.4 53.1 33.8 74 78.9 1.5-2.6 3-5.1 4.6-7.5a1222 1222 0 0 0 36.7-57.9 14 14 0 0 0-1-15.7 303 303 0 0 1-35.7-58.5c-9.6-23-11-58.9-11.1-76.3 0-6.6-2.1-13.1-6.2-18.3l-72.5-92-1.2-1.5c5.3 17.5 5 31.5 1.7 44.2-3 11.8-8.6 22.5-14.5 33.8-2 3.8-4 7.7-5.9 11.7a140 140 0 0 0-15.8 58c-1 24.2 3.9 54.5 20 95Z&quot; fill=&quot;url(#c)&quot;&gt;&lt;/path&gt;  &lt;path d=&quot;M274.8 297c-16.1-40.5-21-70.8-20-95 1-24 8-42 15.8-58l6-11.7c5.8-11.3 11.3-22 14.4-33.8a78.5 78.5 0 0 0-1.7-44.2 28 28 0 0 0-39.4-2l-86.2 77.5a28 28 0 0 0-9 16.6L144.2 216c0 .7-.2 1.3-.3 2 19.4 12.6 44 33 57.3 65.3 2.6 6.4 4.8 13.1 6.4 20.4a200 200 0 0 1 67.2-6.8Z&quot; fill=&quot;url(#d)&quot;&gt;&lt;/path&gt;  &lt;path d=&quot;M320 463.2c18.6 5.1 37.3-9.8 39.9-29a153 153 0 0 1 15.9-52.2c-21-45.1-46.3-68.5-74-78.9-29.5-11-61.6-7.3-94.2.6 7.3 33.1 3 76.4-24.8 132.7 3.1 1.6 6.6 2.5 10.1 2.8l43.9 3.3c23.8 1.7 59.3 14 83.2 20.7Z&quot; fill=&quot;url(#e)&quot;&gt;&lt;/path&gt;  &lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M255 200.5c-1.1 24 1.9 51.4 18 91.8l-5-.5c-14.5-42.1-17.7-63.7-16.6-88 1-24.3 8.9-43 16.7-59 2-4 6.6-11.5 8.6-15.3 5.8-11.3 9.7-17.2 13-27.5 4.8-14.4 3.8-21.2 3.2-28 3.7 24.5-10.4 45.8-21 67.5a145 145 0 0 0-17 59Z&quot; fill=&quot;url(#f)&quot;&gt;&lt;/path&gt;  &lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M206 285.1c2 4.4 3.7 8 4.9 13.5l-4.3 1c-1.7-6.4-3-11-5.5-16.5-14.6-34.3-38-52-57-65 23 12.4 46.7 31.9 61.9 67Z&quot; fill=&quot;url(#g)&quot;&gt;&lt;/path&gt;  &lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M211.1 303c8 37.5-1 85.2-27.5 131.6 22.2-46 33-90.1 24-131l3.5-.7Z&quot; fill=&quot;url(#h)&quot;&gt;&lt;/path&gt;  &lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M302.7 299.5c43.5 16.3 60.3 52 72.8 81.9-15.5-31.2-37-65.7-74.4-78.5-28.4-9.8-52.4-8.6-93.5.7l-.9-4c43.6-10 66.4-11.2 96 0Z&quot; fill=&quot;url(#i)&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/自托管折腾/follow认证文件/" //>
        </entry>
        <entry>
            <title>
                用反思翻译法提升大语言模型翻译的质量
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/效率工具/用反思翻译法提升大语言模型翻译的质量/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;反思翻译法，又称三步翻译法、多轮翻译法；具体实现方法就是让大语言模型（LLM）按照如下步骤进行翻译：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初步翻译：让 AI 进行初步翻译&lt;/li&gt;
&lt;li&gt;自我审视：让 AI 自己检查译文并提出修改建议&lt;/li&gt;
&lt;li&gt;再次翻译：根据第二步的建议来优化第一步的翻译&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样往往能获得更好的翻译效果。&lt;/p&gt;
&lt;p&gt;反思翻译法的本质就是大语言模型智能体（LLM-agent），是负反馈调节与自动化。如果你对理论与学术研究感兴趣，可以阅读文末的 &lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/%E7%94%A8%E5%8F%8D%E6%80%9D%E7%BF%BB%E8%AF%91%E6%B3%95%E6%8F%90%E5%8D%87%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BF%BB%E8%AF%91%E7%9A%84%E8%B4%A8%E9%87%8F/#%E5%AD%A6%E6%9C%AF%E7%95%8C%E7%9A%84%E7%9B%B8%E5%85%B3%E7%A0%94%E7%A9%B6%E6%88%90%E6%9E%9C&quot;&gt;学术成果&lt;/a&gt; 章节，但是这里我们优先讲如何应用它。&lt;/p&gt;
&lt;h1 id=&quot;效果展示&quot; tabindex=&quot;-1&quot;&gt;效果展示&lt;/h1&gt;
&lt;p&gt;为了让你直观的感受反思翻译法的效果，下面我将提供七份翻译，请你选择你认为翻译得最好的两个选项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/assets/img-20250208161613150.jpeg&quot; alt=&quot;assets/img-20250208161613150.jpeg&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!5 号翻译]&lt;br /&gt;
英国即将禁止在本地开办法律硕士课程？&lt;/p&gt;
&lt;p&gt;英国政府正在打击利用人工智能生成非法图像的行为，这当然是件好事，但从措辞上看，似乎任何一种在本地运行的人工智能工具都可以被视为非法，因为它有&lt;em&gt;可能&lt;/em&gt;生成有问题的内容。以下是新闻中的一段话：&lt;/p&gt;
&lt;p&gt;“内政部表示，为了更好地保护儿童，英国将成为世界上第一个规定拥有、创建或分发旨在创建儿童性虐待材料（CSAM）的人工智能工具为非法的国家，最高可判处五年监禁。” 他们还提到了一些关于教他人如何为这些目的使用人工智能的手册。&lt;/p&gt;
&lt;p&gt;在我看来，无论用户是否愿意，在本地运行的任何未经审查的 LLM 都可以用来生成非法内容，因此可以根据该法律进行起诉。还是我理解错了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[!6 号翻译]&lt;br /&gt;
英国政府正在打击利用人工智能生成非法图像的行为，这当然是件好事，但措辞似乎暗示任何本地运行的 AI 工具都可能被视为非法，因为它们有&lt;em&gt;潜在&lt;/em&gt;生成不良内容的可能。&lt;/p&gt;
&lt;p&gt;以下是新闻中的一段引述：&lt;/p&gt;
&lt;p&gt;“内政部表示，为了更好地保护儿童，英国将成为世界上第一个将拥有、创建或分发旨在制作儿童性虐待材料（CSAM）的 AI 工具定为非法的国家，最高可判处五年监禁。”他们还提到了一些关于教别人如何使用 AI 进行这些目的的指南。&lt;/p&gt;
&lt;p&gt;在我看来，任何未经审查的本地运行的大型语言模型都可以用来生成非法内容，无论用户是否有意为之，因此可能会根据这项法律被起诉。还是我理解错了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[!7 号翻译]&lt;br /&gt;
英国政府正在针对使用人工智能生成非法图像的行为进行打击，这当然是件好事，但措辞似乎暗示任何本地运行的 AI 工具都可能被视为非法，因为它们有生成可疑内容的&lt;em&gt;潜力&lt;/em&gt;。以下是新闻中的一段引述：&lt;/p&gt;
&lt;p&gt;内政部表示，为了更好地保护儿童，英国将成为世界上第一个将拥有、创建或分发旨在创建儿童性虐待材料（CSAM）的 AI 工具定为非法的国家，最高可判处五年监禁。他们还提到了一些关于教别人如何使用 AI 达到这些目的的手册。&lt;/p&gt;
&lt;p&gt;在我看来，任何本地运行的未经审查的大型语言模型（LLM）都可能被用来生成非法内容，无论用户是否有意，因此可能会根据这项法律被起诉。或者我理解错了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面揭晓谜底，1-7 号翻译来源依次为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微软翻译&lt;/li&gt;
&lt;li&gt;google 翻译&lt;/li&gt;
&lt;li&gt;gemma2:2b 使用沉浸式翻译&lt;/li&gt;
&lt;li&gt;deepseek-v3 使用沉浸式翻译&lt;/li&gt;
&lt;li&gt;deepL 翻译&lt;/li&gt;
&lt;li&gt;反思翻译法 +deepseek-v3（单次 prompt）&lt;/li&gt;
&lt;li&gt;反思翻译 +deepseek-v3 （langchain）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我邀请了几名群友进行盲测，他们分别选择了 37，64，36。&lt;/p&gt;
&lt;p&gt;虽然因为翻译与评价的样本量太小，不具备统计学意义，但我相信你也能感受到 LLM 在翻译领域的优势。&lt;/p&gt;
&lt;p&gt;如果你还有疑惑的话，不妨自己亲手试试吧。下面我会讲解多种实现路径，你可以根据自己的使用场景与动手能力选择适合的方法。&lt;/p&gt;
&lt;h1 id=&quot;实现方法&quot; tabindex=&quot;-1&quot;&gt;实现方法&lt;/h1&gt;
&lt;h2 id=&quot;prompt&quot; tabindex=&quot;-1&quot;&gt;单次 prompt 实现&lt;/h2&gt;
&lt;p&gt;“单次 prompt 实现”是我自创的一个词，它强调以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;单轮推理（Single-turn Inference）&lt;br /&gt;
这是最基础的形式，即 LLM 直接基于一个 prompt 进行回答，没有额外的上下文记忆或复杂逻辑。例如：&lt;/p&gt;
&lt;p&gt;输入：&amp;quot;请解释量子纠缠的概念。&amp;quot;&lt;br /&gt;
输出：&amp;quot;量子纠缠是指两个或多个粒子之间存在的一种特殊的量子关联......&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端到端推理（End-to-End Inference）&lt;br /&gt;
这个概念强调的是模型一次性完成整个任务，而不是拆解成多个步骤。例如：&lt;/p&gt;
&lt;p&gt;输入：&amp;quot;帮我写一封道歉信，主题是迟到。&amp;quot;&lt;br /&gt;
输出：&amp;quot;亲爱的 XXX，很抱歉我今天迟到了......&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;零样本学习（Zero-shot Learning）/ 一次性推理&lt;br /&gt;
指的是 LLM 直接处理任务，而不需要提供示例。例如：&lt;/p&gt;
&lt;p&gt;输入：&amp;quot;将 &#39;I love programming&#39; 翻译成法语。&amp;quot;&lt;br /&gt;
输出：&amp;quot;J&#39;aime la programmation.&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提示工程（Prompt Engineering）&lt;br /&gt;
在单个 prompt 中优化提示词的方式，使得 LLM 能够高效输出正确结果。例如：&lt;/p&gt;
&lt;p&gt;输入：&amp;quot;用简单易懂的方式解释黑洞。&amp;quot;&lt;br /&gt;
输出：&amp;quot;黑洞是一个引力极强的天体，连光都无法逃脱......&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相对而言，LangChain 的多步骤任务涉及 Memory（记忆）、Chains（链式推理）、Agents（智能体决策）等，而单个 prompt 的任务一般就是一次性完成，无需分步执行。&lt;/p&gt;
&lt;h3 id=&quot;bob&quot; tabindex=&quot;-1&quot;&gt;bob&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;bob&lt;/code&gt; 是 macos 上的一款划词翻译软件。&lt;/p&gt;
&lt;p&gt;安装 &lt;a href=&quot;https://github.com/openai-translator/bob-plugin-openai-translator&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;bob-plugin-openai-translator&lt;/a&gt; 插件，然后参考如下配置：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统指令&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;现在我要写一个将$sourceLang翻译成$targetLang的GPT，请参照以下Prompt制作：


## 角色
你是一位经验丰富的同声翻译大师，擅长以日常口语风格翻译。请你帮我准确且通俗地将以下$sourceLang翻译成$targetLang，风格与$targetLang日常口语保持一致。


## 规则：
- 输入格式为 Markdown 格式，输出格式也必须保留原始 Markdown 格式
	•	只输出意译的结果，其他内容不需要返回给用户
- 以下是常见的相关术语词汇对应表（中文 -&amp;gt; English）：
* 零样本 -&amp;gt; Zero-shot
* 少样本 -&amp;gt; Few-shot

## 策略：

分三步进行翻译工作，但请你只打印第三步的结果，并且不要包含“## 意译”标题（即只输出反思翻译后的译文）：
15. 根据$sourceLang内容直译成$targetLang，保持原有格式，不要遗漏任何信息

16. 根据第一步直译的结果，指出其中存在的具体问题，要准确描述，不宜笼统的表示，也不需要增加原文不存在的内容或格式，包括不仅限于：
- 不符合$targetLang表达习惯，明确指出不符合的地方

- 语句不通顺，指出位置，不需要给出修改意见，意译时修复
- 晦涩难懂，模棱两可，不易理解，可以尝试给出解释
17. 根据第一步直译的结果和第二步指出的问题，重新进行意译，保证内容的原意的基础上，使其更易于理解，更符合$targetLang日常用语的表达习惯，同时保持原有的格式不变
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;用户指令&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$text
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置页面截图&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/assets/img-20250208161613744.png&quot; alt=&quot;assets/img-20250208161613744.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;浏览器插件：划词翻译&quot; tabindex=&quot;-1&quot;&gt;浏览器插件：划词翻译&lt;/h3&gt;
&lt;p&gt;如果你不想使用 bob，并且只是在浏览器中使用划词翻译，你可以使用 &lt;a href=&quot;https://hcfy.ai/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;划词翻译&lt;/a&gt; 插件&lt;/p&gt;
&lt;p&gt;根据上面的 prompt，把里面的变量替换为划词翻译规定的变量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!划词翻译变量]&lt;br /&gt;
{{text}} 会被替换为你划选 / 输入的文本。此参数必须要包含进翻译命令中&lt;br /&gt;
{{target}} 会被替换为目标语种，例如”中文 (简体)”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;沉浸式翻译&quot; tabindex=&quot;-1&quot;&gt;沉浸式翻译&lt;/h3&gt;
&lt;p&gt;无需自行配置，打开沉浸式翻译设置 -【AI 专家】-【意译大师】，在使用 LLM 类翻译服务（不想折腾的可以用免费的智谱 GLM 翻译）时选择意译大师即可。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/assets/img-20250208161614191.png&quot; alt=&quot;assets/img-20250208161614191.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/assets/img-20250208161614540.png&quot; alt=&quot;assets/img-20250208161614540.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;langchain&quot; tabindex=&quot;-1&quot;&gt;langchain 实现&lt;/h2&gt;
&lt;p&gt;“langchain 实现”与上述的“单次 prompt”相对应，看上去似乎只是把“与 LLM 沟通”这个行为从一次询问变成了多次询问，但是在使用类似的 prompt 的前提下，我发现 langchain 实现的效果往往比单次 prompt 的好。这可能与 LLM 的上下文注意力机制等因素相关，这里我们不作讨论。&lt;/p&gt;
&lt;h3 id=&quot;fastgpt&quot; tabindex=&quot;-1&quot;&gt;fastgpt&lt;/h3&gt;
&lt;p&gt;fastgpt 是一个开源的低代码自动化工具，他们的工程师写了一篇的文章，详细讲解了反思翻译法的具体实现步骤，我建议直接阅读此文：&lt;a href=&quot;https://doc.fastgpt.cn/docs/use-cases/app-cases/multi_turn_translation_bot/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;多轮翻译机器人 | FastGPT&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;defy&quot; tabindex=&quot;-1&quot;&gt;defy&lt;/h3&gt;
&lt;p&gt;defy 类似 fastgpt，功能大同小异。&lt;/p&gt;
&lt;h3 id=&quot;n8n&quot; tabindex=&quot;-1&quot;&gt;n8n&lt;/h3&gt;
&lt;p&gt;n8n 是一个开源的低代码自动化工具，相比于 fastgpt 与 defy 那种专注于 LLM 的自动化工具，n8n 追求的更全面。与它类似的，举一个国人更耳熟能详的例子，就是影刀 RPA。&lt;/p&gt;
&lt;p&gt;n8n 是众多开源的低代码平台中，免费版限制最少的那个，因此我比较推荐使用它。&lt;/p&gt;
&lt;p&gt;如果你对具体实现感兴趣，可以看我的这篇文章：&lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E8%87%AA%E6%89%98%E7%AE%A1%E6%8A%98%E8%85%BE/%E7%94%A8n8n%E5%AE%9E%E7%8E%B0%E5%8F%8D%E6%80%9D%E7%BF%BB%E8%AF%91/&quot;&gt;用n8n实现反思翻译&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;n8n-1&quot; tabindex=&quot;-1&quot;&gt;n8n + 划词翻译&lt;/h4&gt;
&lt;p&gt;如果你想在划词翻译中使用 langchain 实现的反思翻译，可以在 n8n 中模拟 openai 格式的 api 或者采用 &lt;a href=&quot;https://hcfy.ai/docs/services/custom-api&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;划词翻译自定义翻译源格式的api&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我把我自己制作的两个 n8n 流程分享到 GitHub 了，导入后配置 LLM 地址就好，我默认使用的 deepseek。&lt;/p&gt;
&lt;p&gt;分享工作流文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/dangehub/95dfa0c934165cd0af199f683490a123&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;openai格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/dangehub/08da7d942d702153ed3b2f6854fbeba9&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;划词翻译自定义格式&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;学术界的相关研究成果&quot; tabindex=&quot;-1&quot;&gt;学术界的相关研究成果&lt;/h1&gt;
&lt;h2 id=&quot;translation-agent&quot; tabindex=&quot;-1&quot;&gt;吴恩达团队开源的翻译智能体 Translation-agent&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;项目地址&lt;/strong&gt;： &lt;a href=&quot;https://github.com/andrewyng/translation-agent&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;andrewyng/translation-agent&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;哈工大与鹏城实验室的论文&quot; tabindex=&quot;-1&quot;&gt;哈工大与鹏城实验室的论文&lt;/h2&gt;
&lt;p&gt;在查资料的时候找到一篇论文 &lt;a href=&quot;https://aclanthology.org/2024.acl-short.64.pdf&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;DUAL-REFLECT: Enhancing Large Language Models for Reflective Translation through Dual Learning Feedback Mechanisms&lt;/a&gt;，在反思翻译法的基础上增加了 &lt;code&gt;回译&lt;/code&gt; 的步骤，下面是我用 chatgpt 生成的论文总结。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!NOTE]&lt;/p&gt;
&lt;h1 id=&quot;dual-reflect&quot; tabindex=&quot;-1&quot;&gt;论文总结 ：DUAL-REFLECT：基于双向学习反馈机制增强大语言模型的反思性翻译能力&lt;/h1&gt;
&lt;h1 id=&quot;论文背景&quot; tabindex=&quot;-1&quot;&gt;论文背景&lt;/h1&gt;
&lt;p&gt;近年来，大语言模型（LLMs）在机器翻译领域表现突出，尤其是通过自我反思（self-reflection）来改进翻译质量。然而，现有的反思机制存在反馈信息不足的问题，导致翻译质量提升有限。为此，本文提出 DUAL-REFLECT 框架，该框架利用 双向学习（dual learning） 机制提供有效反馈，从而增强 LLMs 的自我反思能力，提高翻译质量，特别是在低资源语言翻译任务中的表现。&lt;/p&gt;
&lt;h1 id=&quot;dual-reflect-1&quot; tabindex=&quot;-1&quot;&gt;DUAL-REFLECT 方法&lt;/h1&gt;
&lt;p&gt;DUAL-REFLECT 由 五个关键阶段 组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初稿翻译（Draft Translation）： LLM 生成初始翻译。&lt;/li&gt;
&lt;li&gt;回译（Back Translation）： LLM 将目标语言翻译回源语言。&lt;/li&gt;
&lt;li&gt;过程评估（Process Assessment）： 评估回译结果是否与源文本一致，决定是否进入下一步反思。&lt;/li&gt;
&lt;li&gt;双向反思（Dual Reflection）： LLM 比较回译结果与原始文本的差异，并分析改进建议。&lt;/li&gt;
&lt;li&gt;自动修正（Auto Revision）： 结合反思反馈，对初稿翻译进行优化。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;实验与评估&quot; tabindex=&quot;-1&quot;&gt;实验与评估&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;数据集： 使用 WMT22、WMT23 以及 Commonsense Reasoning MT 数据集进行评测。&lt;/li&gt;
&lt;li&gt;对比方法： 包括 ChatGPT、GPT-4、Self-Reflect、MAPS 和 MAD 等现有方法。&lt;/li&gt;
&lt;li&gt;评测指标： 采用 COMET 和 BLEURT 自动评价指标，以及人工评测。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实验结果表明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 WMT22 和 Commonsense MT 基准测试中，DUAL-REFLECT 在 多个语言对上均取得最佳成绩，相比 ChatGPT 平均提升 +1.18 COMET，相比 Self-Reflect 提升 +0.75 COMET。&lt;/li&gt;
&lt;li&gt;在 低资源语言对（如 Cs→Uk） 上，DUAL-REFLECT 超越 ChatGPT +2.2 COMET，超越 MAPS +1.4 COMET，表明该方法在低资源环境下的优越性。&lt;/li&gt;
&lt;li&gt;在 常识推理翻译任务 中，DUAL-REFLECT 超越 GPT-4，展现了更强的逻辑推理能力。&lt;/li&gt;
&lt;li&gt;人工评测结果 进一步表明，DUAL-REFLECT 在 消除翻译歧义 方面表现更优。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;结论&quot; tabindex=&quot;-1&quot;&gt;结论&lt;/h1&gt;
&lt;p&gt;本文提出的 DUAL-REFLECT 框架 通过 双向学习反馈机制，增强 LLMs 的自我反思能力，从而提高翻译质量。该方法在不同资源条件下均表现良好，特别是在低资源语言翻译和常识推理翻译方面超越现有方法。实验和人工评测均证明了该方法的有效性。&lt;/p&gt;
&lt;h2 id=&quot;局限性&quot; tabindex=&quot;-1&quot;&gt;局限性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;计算资源需求高： 由于涉及多轮回译和反思修正，该方法计算开销较大。&lt;/li&gt;
&lt;li&gt;依赖回译质量： 若回译质量较差，反思机制可能会受限，影响最终翻译质量。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;贡献&quot; tabindex=&quot;-1&quot;&gt;贡献&lt;/h2&gt;
&lt;p&gt;DUAL-REFLECT 通过引入 双向学习机制，为机器翻译提供了更强的自我优化能力，尤其适用于 低资源语言翻译和复杂推理任务，对未来 LLMs 在翻译领域的应用具有重要意义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;总结&quot; tabindex=&quot;-1&quot;&gt;总结&lt;/h1&gt;
&lt;p&gt;LLM 在文字领域是一块巨大的璞玉，而反思翻译法则起到雕琢的作用，我相信在不久的将来，不同语言之间的隔阂会越来越小，阅读外语不再令人望而生畏。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/效率工具/用反思翻译法提升大语言模型翻译的质量/" //>
        </entry>
        <entry>
            <title>
                ollama离线运行AI模型-反思翻译法-沉浸式翻译-免费又好用的翻译
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/效率工具/ollama离线运行AI模型-反思翻译法-沉浸式翻译-免费又好用的翻译/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;h2 id=&quot;设备需求与劝退&quot; tabindex=&quot;-1&quot;&gt;设备需求与劝退&lt;/h2&gt;
&lt;p&gt;本文中我使用的设备是 &lt;code&gt;2020 M1 macbook pro 16g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你想学习本文的操作，建议先检查自己的设备是否满足以下任一要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mac 平台：M 系芯片的 mac，内存 16g 起步&lt;/li&gt;
&lt;li&gt;windows 平台：使用显存大于 8g 的显卡&lt;/li&gt;
&lt;li&gt;linux 平台：都用 linux 了，不用我教&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;起因&quot; tabindex=&quot;-1&quot;&gt;起因&lt;/h2&gt;
&lt;p&gt;我们不能回避的一个现状是：大部分领域的英文语料都是相当有价值的，因此阅读英文依然是我们的必修课。但所幸我们已经有很多工具来减轻英语阅读的负担，以我个人为例，我最常用的两个工具是 &lt;code&gt;沉浸式翻译&lt;/code&gt; 和 &lt;code&gt;bob&lt;/code&gt; （macos 上的一个全局划词翻译软件）。&lt;/p&gt;
&lt;p&gt;其中沉浸式翻译是我在 mac、win、ios、android 四端都在使用的插件。一般我会先用沉浸式翻译的机翻来粗读文章，遇见低质翻译或长难句等需要精读英文时会使用划词翻译 + &lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/%E7%94%A8%E5%8F%8D%E6%80%9D%E7%BF%BB%E8%AF%91%E6%B3%95%E6%8F%90%E5%8D%87%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BF%BB%E8%AF%91%E7%9A%84%E8%B4%A8%E9%87%8F/&quot;&gt;反思翻译法&lt;/a&gt;。因为现在 LLM api 的价格、并发限制与延迟，我一般不会在全局使用 LLM 翻译。粗读时往往会在沉浸式翻译自带的、开箱即用的微软翻译与 google 翻译里来回切换（因为频繁翻译会被限制，需要二者切换使用）。&lt;/p&gt;
&lt;p&gt;最近因为 deepseek 的开源，又开始折腾起本地部署 LLM，突然又萌生起使用本地 LLM 来做翻译的想法，测试了一下，发现 2b 的小模型做段落级翻译居然也相当不错，于是写下本文。&lt;/p&gt;
&lt;h1 id=&quot;配置教程&quot; tabindex=&quot;-1&quot;&gt;配置教程&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;安装 ollama&lt;/li&gt;
&lt;li&gt;（保证网络畅通）拉取模型 &lt;code&gt;ollama run gemma2:2b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在沉浸式翻译中增加一个 LLM 服务，接口为 &lt;code&gt;http://127.0.0.1:11434/v1/chat/completions&lt;/code&gt; ，key 为 &lt;code&gt;ollama&lt;/code&gt; ，模型为 &lt;code&gt;gemma2:2b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enjoy it&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;效果展示&quot; tabindex=&quot;-1&quot;&gt;效果展示&lt;/h1&gt;
&lt;p&gt;因为发现 2b 的模型其实翻译效果也还可以，比机翻要好一点。而使用在线 LLM api 既不稳定还贵。下面我们做一下对比。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/assets/img-20250208161613150.jpeg&quot; alt=&quot;assets/img-20250208161613150.jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;依次分别为微软翻译、google 翻译、gemma2:2b、deepseek-v3（在线 api）&lt;/p&gt;
&lt;p&gt;为了未来对比效果，我也把原文放在这里&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Is the UK about to ban running LLMs locally?

The UK government is targetting the use of AI to generate illegal imagery, which of course is a good thing, but the wording seems like any kind of AI tool run locally can be considered illegal, as it has the *potential* of generating questionable content. Here&#39;s a quote from the news:

&amp;quot;The Home Office says that, to better protect children, the UK will be the first country in the world to make it illegal to possess, create or distribute AI tools designed to create child sexual abuse material (CSAM), with a punishment of up to five years in prison.&amp;quot; They also mention something about manuals that teach others how to use AI for these purposes.

It seems to me that any uncensored LLM run locally can be used to generate illegal content, whether the user wants to or not, and therefore could be prosecuted under this law. Or am I reading this incorrectly?

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到在线的 deepseek 确实爆杀了，但是 api 是要额外花钱的，还需要时间来反应。而在我的 mac 上跑 2b 的小模型，速度比在线 api 快一点，效果介于机翻和 api 之间。而机翻使用的太频繁也会触发限制，相比之下我用 ollama 跑一个 2b 的小模型，电脑也不卡，翻译速度也能接受，还不收费，岂不美哉？&lt;/p&gt;
&lt;p&gt;（单个网页用本地 LLM 是可以的，但是如果快速翻页 or 多个网页，本地 LLM 的速度还是不够，需要更强的配置，另外可能还要再配置一下 ollama 的同时加载模型数与单模型的并发处理数）&lt;/p&gt;
&lt;p&gt;因此我还是很推荐的这样做的。&lt;/p&gt;
&lt;p&gt;最后放上更多翻译工具的结果：&lt;/p&gt;
&lt;p&gt;DeepL 翻译：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!DeepL 翻译]&lt;br /&gt;
英国即将禁止在本地开办法律硕士课程？&lt;/p&gt;
&lt;p&gt;英国政府正在打击利用人工智能生成非法图像的行为，这当然是件好事，但从措辞上看，似乎任何一种在本地运行的人工智能工具都可以被视为非法，因为它有&lt;em&gt;可能&lt;/em&gt;生成有问题的内容。以下是新闻中的一段话：&lt;/p&gt;
&lt;p&gt;“内政部表示，为了更好地保护儿童，英国将成为世界上第一个规定拥有、创建或分发旨在创建儿童性虐待材料（CSAM）的人工智能工具为非法的国家，最高可判处五年监禁。” 他们还提到了一些关于教他人如何为这些目的使用人工智能的手册。&lt;/p&gt;
&lt;p&gt;在我看来，无论用户是否愿意，在本地运行的任何未经审查的 LLM 都可以用来生成非法内容，因此可以根据该法律进行起诉。还是我理解错了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用反思翻译法 +deepseek-v3 得到的翻译：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!使用反思翻译法 +deepseek-v3 得到的翻译]&lt;br /&gt;
英国政府正在打击利用人工智能生成非法图像的行为，这当然是件好事，但措辞似乎暗示任何本地运行的 AI 工具都可能被视为非法，因为它们有&lt;em&gt;潜在&lt;/em&gt;生成不良内容的可能。&lt;/p&gt;
&lt;p&gt;以下是新闻中的一段引述：&lt;/p&gt;
&lt;p&gt;“内政部表示，为了更好地保护儿童，英国将成为世界上第一个将拥有、创建或分发旨在制作儿童性虐待材料（CSAM）的 AI 工具定为非法的国家，最高可判处五年监禁。”他们还提到了一些关于教别人如何使用 AI 进行这些目的的指南。&lt;/p&gt;
&lt;p&gt;在我看来，任何未经审查的本地运行的大型语言模型都可以用来生成非法内容，无论用户是否有意为之，因此可能会根据这项法律被起诉。还是我理解错了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 n8n 中的 AI-agent 使用反思翻译法 +deepseek-v3 得到的翻译：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!在 n8n 中的 AI-agent 使用反思翻译法 +deepseek-v3 得到的翻译]&lt;br /&gt;
英国政府正在针对使用人工智能生成非法图像的行为进行打击，这当然是件好事，但措辞似乎暗示任何本地运行的 AI 工具都可能被视为非法，因为它们有生成可疑内容的&lt;em&gt;潜力&lt;/em&gt;。以下是新闻中的一段引述：&lt;/p&gt;
&lt;p&gt;内政部表示，为了更好地保护儿童，英国将成为世界上第一个将拥有、创建或分发旨在创建儿童性虐待材料（CSAM）的 AI 工具定为非法的国家，最高可判处五年监禁。他们还提到了一些关于教别人如何使用 AI 达到这些目的的手册。&lt;/p&gt;
&lt;p&gt;在我看来，任何本地运行的未经审查的大型语言模型（LLM）都可能被用来生成非法内容，无论用户是否有意，因此可能会根据这项法律被起诉。或者我理解错了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看到传统机器翻译的天花板 DeepL 的翻译结果也不尽人意，LLM 具备的上下文感知功能在翻译领域真的太强了。另外同样使用 deepseek-v3 ，不同的 prompt 也会产生不同的效果，因此 prompt 工程也很重要。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/效率工具/ollama离线运行AI模型-反思翻译法-沉浸式翻译-免费又好用的翻译/" //>
        </entry>
        <entry>
            <title>
                让Obsidian的光标丝滑移动
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/让Obsidian的光标丝滑移动/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;本文参考自 &lt;a href=&quot;https://forum.obsidian.md/t/cursor-smooth-caret-animation/31068/25&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;光标平滑插入动画 - 插件创意|Cursor Smooth Caret Animation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;效果展示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/PixPin_2025-01-24_13-14-53.gif&quot; alt=&quot;assets/PixPin_2025-01-24_13-14-53.gif&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用方法&quot; tabindex=&quot;-1&quot;&gt;使用方法&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;在插件市场安装 &lt;code&gt;ninja cursor&lt;/code&gt; 插件&lt;/li&gt;
&lt;li&gt;在 Obsidian 内添加并开启以下 css&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;enjoy it！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前这个方案&lt;strong&gt;有一定缺陷&lt;/strong&gt;：在部分插件/样式中，光标的显示位置会错位，不过实际位置是正确的&lt;/p&gt;
&lt;h1 id=&quot;附录&quot; tabindex=&quot;-1&quot;&gt;附录&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;/* Customization for the Ninja Cursor */ 
.x-cursor {
  position: inline block;
  background: var(--caret-color); /* Sets the Ninja Cursor Colour. */
  width: 1px; /* Sets the width of the Ninja Cursor. */ 
  transition: all 80ms !important; /* Sets the animation delay of the Ninja Cursor. Fast typers should use a higher delay to maintain the effect. */ 
  top: calc(0px - var(--header-height)); /* Ensures the cursor is inline with selected line. */ 
  --cursor-height: calc(var(font-size) - 2px); /* Sets Ninja Cursor Height. Font-Height variable used to ensure height matches current body text input. For a taller/shorter cursor alter the px. */ 
  max-height: calc(var(--font-ui-large) * 2); /* Caps the height of the Ninja Cursor to the span of two lines. Stops Ninja Cursor spanning several lines by capping it at two. It can be capped at one but the cursor is unable to change height to match headings. */ 
}

/* Hides the Default Cursor */
body:has(.x-cursor) * {
  caret-color: transparent;
}
.cm-cursorLayer {
  animation: none !important;
  display: none; 
}

/* Hides the Default Ninja Cursor Dashing Effect */ 
.cursorWrapper .x-cursor::after {
  display: none;
}

/* Applies the Caret Blinking Effect */
.cursorWrapper .x-cursor0 {
  animation: blink0 1s 1s both infinite;
}
.cursorWrapper .x-cursor1 {
  animation: blink1 1s 1s both infinite;
}

/* Keyframes for the Caret Blinking Effect */ 
@keyframes blink1 {
  0%   { opacity: 1; }
  45%  { opacity: 1; }
  50%  { opacity: 1;}
  95%  { opacity: 1; }
  100% { opacity: 1; }
}

@keyframes blink0 {
  0%   { opacity: 1; }
  45%  { opacity: 1; }
  50%  { opacity: 1;}
  95%  { opacity: 1; }
  100% { opacity: 1; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr class=&quot;footnotes-sep&quot; /&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
&lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;新建文件 &lt;code&gt;丝滑光标.css&lt;/code&gt; 并粘贴上面的代码，然后把文件放入 Obsidian 的 css 文件夹中并在 Obsidian 启用 &lt;a href=&quot;https://blog.qudange.top/#fnref1&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/让Obsidian的光标丝滑移动/" //>
        </entry>
        <entry>
            <title>
                在移动端设备上管理Obsidian待办的方法探讨
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/在移动端设备上管理Obsidian待办的方法探讨/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;虽然我不提倡 all in one，但是我一直希望能使用 Obsidian 管理我的待办。虽然可以用 tasks、reminder 之类的插件来实现 Obsidian 内部的待办管理，但是对于普通人来说，手机才是真正有提醒功能的终端，而移动端 Obsidian 不能调用系统级的通知，即便它能，也会受到启动缓慢且无法常驻后台的短板的制约，因此我们需要更轻量而稳定的实现方法。&lt;/p&gt;
&lt;p&gt;好在 Obsidian 是基于 md 开放格式的软件，我们完全可以用其他软件来读取笔记，然后按照对应规则来解析笔记的待办。除了自行实现外，我也发现了一些应用在努力完成这样的目标。后文会介绍现有的第三方应用与自行实现的方法，宥于个人能力与精力的有限，难以做到全面准确，如有错漏，欢迎批评指正。&lt;/p&gt;
&lt;h1 id=&quot;自行实现&quot; tabindex=&quot;-1&quot;&gt;自行实现&lt;/h1&gt;
&lt;h2 id=&quot;原理分析&quot; tabindex=&quot;-1&quot;&gt;原理分析&lt;/h2&gt;
&lt;p&gt;首先我们要知道自行实现的原理：用 markdown 格式记录的待办就如同你用纸笔在便签上写下“明天记得买菜”，只需要让软件把“明天”和“买菜”这两个信息分别读取为时间与事项内容就好了。&lt;/p&gt;
&lt;h1 id=&quot;第三方应用&quot; tabindex=&quot;-1&quot;&gt;第三方应用&lt;/h1&gt;
&lt;h2 id=&quot;notifian-2025-01-17&quot; tabindex=&quot;-1&quot;&gt;notifian（2025-01-17 更新）&lt;/h2&gt;
&lt;p&gt;支持平台：android&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.notifian&amp;amp;hl=en&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Google play 商店&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;功能介绍：扫描本地的 Obsidian 库，提取其中的待办提醒，然后在对应时间点发起提醒。&lt;/p&gt;
&lt;p&gt;[fold]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/101-%E6%97%A5%E8%AE%B0/assets/Pasted%20image%2020250117193514.png&quot; alt=&quot;assets/Pasted image 20250117193514.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持两种待办格式
&lt;ul&gt;
&lt;li&gt;frontmatter
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;remind at&lt;/code&gt; 为提醒时间，支持精确到分钟&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repeat&lt;/code&gt; 为重复规则，支持
&lt;ul&gt;
&lt;li&gt;每月的第 x 天&lt;/li&gt;
&lt;li&gt;每 x 分钟/小时/天/周&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;兼容 tasks 语法（因此只支持到按天提醒，不能精确到小时分钟）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;obsi-2025-01-17&quot; tabindex=&quot;-1&quot;&gt;obsi（2025-01-17 更新）&lt;/h2&gt;
&lt;p&gt;支持平台 ：android&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.scanworks.obsi&amp;amp;hl=en&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Google play商店&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;功能介绍：扫描本地的 Obsidian 库，提取其中的待办提醒，将其渲染为可视化 todo，同时可以用图形 UI 创建新的待办，支持设置截止日期、属性和种类。&lt;/p&gt;
&lt;p&gt;[fold]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/101-%E6%97%A5%E8%AE%B0/assets/Pasted%20image%2020250117193049.png&quot; alt=&quot;assets/Pasted image 20250117193049.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 &lt;code&gt;obsi&lt;/code&gt; app 创建的待办都会被放到 &lt;code&gt;obsi.md&lt;/code&gt; 文件中，目前无法分散保存待办&lt;/li&gt;
&lt;li&gt;目前无法发出提醒，只能由用户自行查看&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;obsidian-android-widget&quot; tabindex=&quot;-1&quot;&gt;ObsidianAndroidWidget&lt;/h2&gt;
&lt;p&gt;支持平台：android&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://github.com/Irony95/ObsidianAndroidWidget&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;GitHub仓库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;功能介绍：&lt;/p&gt;
&lt;p&gt;细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能手动选定链接的文件，无法按照一定的规则自动切换文件（比如根据当天日期切换当天的日记）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;quick-md-capture&quot; tabindex=&quot;-1&quot;&gt;QuickMDCapture&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/ObsidianMD/comments/1flev91/adding_notes_through_a_widget_on_the_android_home/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;通过 Android 主屏幕上的小部件添加注释：r/ObsidianMD --- Adding notes through a widget on the Android home screen : r/ObsidianMD&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;kvaesitso&quot; tabindex=&quot;-1&quot;&gt;Kvaesitso&lt;/h2&gt;
&lt;p&gt;支持平台：android&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://github.com/MM2-0/Kvaesitso&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;GitHub仓库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;功能介绍：这是一个开源的安卓桌面 app，它有一个自带的小组件，可以链接到一个 md 文件，然后就可以在桌面编辑这个 md 文件&lt;/p&gt;
&lt;p&gt;[fold]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/101-%E6%97%A5%E8%AE%B0/assets/Screenshot_20250117_234412_Kvaesitso.jpg&quot; alt=&quot;assets/Screenshot_20250117_234412_Kvaesitso.jpg&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;细节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能手动选定链接的文件，而且这个文件必须由这 app 新建（当然可以手动替换）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;自行实现-1&quot; tabindex=&quot;-1&quot;&gt;自行实现&lt;/h1&gt;
&lt;h2 id=&quot;tasker&quot; tabindex=&quot;-1&quot;&gt;使用 tasker&lt;/h2&gt;
&lt;h3 id=&quot;网友分享的思路&quot; tabindex=&quot;-1&quot;&gt;网友分享的思路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/ObsidianMD/comments/qj7nct/quick_add_note_from_android/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;来自 Android 的快速添加注释：r/ObsidianMD --- Quick add note from Android : r/ObsidianMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Guy-92/QuickNote&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Guy-92/QuickNote: A way to take Quick Notes in Obsidian on Android&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;另一个网友以此为基础进行了修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/ObsidianMD/comments/1h9tgqh/using_tasker_to_create_an_instant_note_widget_for/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;使用 Tasker 为 Android 创建“即时笔记”小部件：r/ObsidianMD --- Using Tasker To Create An &amp;quot;Instant Note&amp;quot; Widget For Android : r/ObsidianMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一个网友分享的 tasker 创建的思路，但是没有分享具体文件 &lt;a href=&quot;https://www.reddit.com/r/ObsidianMD/comments/1h9tgqh/using_tasker_to_create_an_instant_note_widget_for/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;使用 Tasker 为 Android 创建“即时笔记”小部件：r/ObsidianMD --- Using Tasker To Create An &amp;quot;Instant Note&amp;quot; Widget For Android : r/ObsidianMD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tasker-widget&quot; tabindex=&quot;-1&quot;&gt;我的 tasker widget&lt;/h3&gt;
&lt;h2 id=&quot;ios&quot; tabindex=&quot;-1&quot;&gt;使用 ios 捷径&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/ObsidianMD/comments/1i4zpom/ios_shortcut/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;iOS 快捷方式 ： r/ObsidianMD --- iOS Shortcut : r/ObsidianMD&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;fv&quot; tabindex=&quot;-1&quot;&gt;fv 悬浮球记笔记（偏题）&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://forum-zh.obsidian.md/t/topic/5687/2&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;安卓利用FV悬浮球实现不打开ob进行文本快捷输入（包括图片自动上传图床后的外链） - 经验分享 - Obsidian 中文论坛&lt;/a&gt;&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/在移动端设备上管理Obsidian待办的方法探讨/" //>
        </entry>
        <entry>
            <title>
                一键把excalidraw的头脑风暴输出为线性文章
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/一键把excalidraw的头脑风暴输出为线性文章/</id>
            <content type="html">
                &lt;h1 id=&quot;发散性思考与线性输出&quot; tabindex=&quot;-1&quot;&gt;发散性思考与线性输出&lt;/h1&gt;
&lt;p&gt;我以前一直都是采用传统的笔记方法，从上往下写。&lt;/p&gt;
&lt;p&gt;这种线性似乎是理所应当、浑然天成的，但是人在想问题的时候又喜欢在草稿上写写画画，这个时候思维的组织方式却是非线性的。&lt;/p&gt;
&lt;p&gt;接近的概念就是头脑风暴之类的思考组织方式，无意掉书袋，因此本文不再就此概念做过多讨论，我们姑且定义两种方式，不再深究其描述是否准确：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从上往下的一维：线性&lt;/li&gt;
&lt;li&gt;上下左右都有：发散性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里就会引入一个问题，当你的大脑在发散性思考的时候，用线性的笔记辅助思考，就会出现脑子和手打架的窘境。&lt;/p&gt;
&lt;p&gt;举例来说：我在写某个主题的时候，会突然联想到一个分支想法，它不适合放进当前的正文，但是与之又有关联。如果是传统的笔记方法，这里可以使用便签（callout），但这样终究不太适合内容组织。因此类似 mindmap 的工具都会提供二维的内容输出方式。&lt;/p&gt;
&lt;p&gt;但是这会引入一个新问题——发散思考之后，如何输出高可读性的内容。&lt;/p&gt;
&lt;p&gt;不知道大家有没有这样的体验：自己做的思维导图再烂也能看懂，而别人做的再好也看得很晕。&lt;/p&gt;
&lt;p&gt;这就是非线性（发散性）内容的弊端，除非是自己生产（即已完成内化）的内容，否则非线性内容先天就更难理解。&lt;/p&gt;
&lt;p&gt;因此我们需要找到一个允许我们发散性思考，但是又能快捷的输出线性内容的的方法。&lt;/p&gt;
&lt;h1 id=&quot;线性输出脚本的前身&quot; tabindex=&quot;-1&quot;&gt;线性输出脚本的前身&lt;/h1&gt;
&lt;p&gt;当我产生了这个需求的时候，我先是尝试用 obsidian 的引用功能来实现它，因为 excalidraw 本身是支持对外提供内容的嵌入的。但是很难做到方便快捷。&lt;/p&gt;
&lt;p&gt;于是我在网上查询资料，了解到两位先驱者的探索：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1D44y1P7uD/?p=1&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Note必利阀：从excalidraw视觉笔记到obsidian线性输出&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%88%B6%E4%BD%9Cexcalidraw%E6%82%AC%E6%B5%AE%E5%A4%A7%E7%BA%B2%E4%BB%A5%E5%8F%8A%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E7%BA%BF%E5%9E%8B%E7%AC%94%E8%AE%B0/#:~:text=%E8%87%AA%E5%AE%9A%E4%B9%89%20Excali&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;熊猫别熬夜：PKMer_自定义 Excalidraw 脚本 - 制作 Excalidraw 悬浮大纲以及一键生成线型笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学习了两位网友关于 excalidraw 笔记如何实现线性输出的思考，其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;Note 必利阀&lt;/u&gt;制作了一个脚本，可以把 excalidraw 中选中的文本和图像按编辑的时间顺序输出为文字与图像的引用，最终复制到剪贴板，我们只需要把这个粘贴到想要用的地方就行&lt;/li&gt;
&lt;li&gt;&lt;u&gt;熊猫别熬夜&lt;/u&gt;制作了一套脚本，要求使用者在 excalidraw 编写好符合一定格式的标题，然后通过脚本把标题与对应的内容引用出来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前者的优势是输出的内容为文字与图片链接，是可以被标准 md 识别的，但缺少了 excalidraw 的强大图形能力（因为它要求把 freedraw 转成图片，后续再编辑也是很麻烦的）。另外因为 excalidraw 的 Frame 和 Group 还不支持嵌套，所以如果有画中画这样的展现形式，则无法用后者的脚本实现。&lt;/p&gt;
&lt;p&gt;后者直接把 excalidraw 中的图形引用过来，能更好的保留 excalidraw 的功能，不过这样也导致如果有发布文章的需求，后续可能需要再手动去把 excalidraw 引用转换为图片。&lt;/p&gt;
&lt;p&gt;在学习两位的过程中，我厘清了 &lt;code&gt;发散性思考&lt;/code&gt; 、&lt;code&gt;线性输出&lt;/code&gt; 的概念，同时基于我自己的日记工作流，对熊猫别熬夜的脚本进行了修改，最终我的线性输出脚本诞生了。&lt;/p&gt;
&lt;h1 id=&quot;线性输出脚本&quot; tabindex=&quot;-1&quot;&gt;线性输出脚本&lt;/h1&gt;
&lt;h2 id=&quot;脚本介绍&quot; tabindex=&quot;-1&quot;&gt;脚本介绍&lt;/h2&gt;
&lt;p&gt;本脚本的全名应该叫 &lt;code&gt;excalidraw线性输出到同名笔记&lt;/code&gt;，它的功能也很简单，一言以蔽之：通过识别规定格式的文本，把与文本组合的内容以 excalidraw 的嵌入链接形式输出到对应笔记的指定标题下。&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/assets/Pasted%20image%2020240910102034.png&quot; alt=&quot;assets/Pasted image 20240910102034.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;本脚本通过识别形如 &lt;code&gt;&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#1&quot;&gt;#1&lt;/a&gt; 标题&lt;/code&gt; 的文本，解析为 &lt;code&gt;标题&lt;/code&gt;，并将该文本所属的组合（优先级分别为：Frame&amp;gt;Group&amp;gt;Element）引用链接插入到标题之后。&lt;/p&gt;
&lt;p&gt;脚本的优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保留了 excalidraw 的图形能力&lt;/li&gt;
&lt;li&gt;将内容输出到指定文件并生成逐级标题，让思考输出的内容可以与文件本身融合，大纲可识别&lt;/li&gt;
&lt;li&gt;支持自定义在哪个标题后插入，并且会根据设置标题动态调整生成标题的层级（比如设置在 &lt;code&gt;&lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#灵感&quot;&gt;#灵感&lt;/a&gt;&lt;/code&gt; 后插入，则从二级标题开始生成，如果设置为 &lt;code&gt;##灵感&lt;/code&gt;，则会从三级标题开始生成，确保生成内容为子内容）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;脚本使用说明&quot; tabindex=&quot;-1&quot;&gt;脚本使用说明&lt;/h2&gt;
&lt;h3 id=&quot;下载&quot; tabindex=&quot;-1&quot;&gt;下载&lt;/h3&gt;
&lt;p&gt;你可以在我的 Github 下载：&lt;a href=&quot;https://github.com/dangehub/aqu_ob_share&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;dangehub/aqu_ob_share: Share my Obsidian techniques&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者在文末直接复制源代码，自己新建一个 md 文件粘贴进去就好。&lt;/p&gt;
&lt;h3 id=&quot;安装使用&quot; tabindex=&quot;-1&quot;&gt;安装使用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;把脚本放到 excalidraw 的 script 目录下&lt;/li&gt;
&lt;li&gt;前往 excalidraw 插件设置，在最后一项 &lt;code&gt;已安装脚本设置&lt;/code&gt; 中修改 &lt;code&gt;Custom Misc Header&lt;/code&gt;，设置为自己想要插入在哪个标题后，默认值 &lt;code&gt;## 1.3 杂记&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击脚本按钮 or 使用命令工具&lt;/li&gt;
&lt;li&gt;文件 &lt;code&gt;1.excalidraw&lt;/code&gt; 的线性内容会被输出到文件 &lt;code&gt;1&lt;/code&gt; 中的 &lt;code&gt;## 1.3 杂记&lt;/code&gt; 标题下&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;视频教程见：&lt;a href=&quot;https://www.bilibili.com/video/BV1X3pteUEU1/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;obsidian+excalidraw+线性输出脚本=快乐日记&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;附脚本源代码&quot; tabindex=&quot;-1&quot;&gt;附脚本源代码&lt;/h1&gt;
&lt;p&gt;[fold]&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 鸣谢：本脚本在 `熊猫别熬夜` 网友的脚本上进行修改，并受到 `Note必利阀` 网友的启发

// 更新日志

// 2024-09-06 1.0版本发布，支持输出标题设置

// 2024-09-08 1.0.1 新增嵌入画板宽度设置

  

// 获取脚本设置

  

let settings = ea.getScriptSettings();

  

// 设置默认值（如果是首次运行）

  

if (!settings[&amp;quot;Custom Misc Header&amp;quot;] || !settings[&amp;quot;Image Width&amp;quot;]) {

  

    settings = {

  

        ...settings,  // 保留现有设置

  

        &amp;quot;Custom Misc Header&amp;quot;: {

  

            value: &amp;quot;## 1.3 杂记&amp;quot;,

  

            description: &amp;quot;自定义杂记标题，用于插入 Excalidraw 内容&amp;quot;

  

        },

  

        &amp;quot;Image Width&amp;quot;: {

  

            value: 10000,

  

            description: &amp;quot;设置嵌入画板的宽度，默认值保证画板最大&amp;quot;

  

        }

  

    };

  

    ea.setScriptSettings(settings);

  

}

  

  

// 使用设置中的自定义杂记标题和图片宽度

  

const customMiscHeader = settings[&amp;quot;Custom Misc Header&amp;quot;].value;

  

const imageWidth = settings[&amp;quot;Image Width&amp;quot;].value;

  

// 计算customMiscHeader中的 &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#数量&quot;&gt;#数量&lt;/a&gt;

  

const customHeaderLevel = (customMiscHeader.match(/^#+/) || [&#39;&#39;])[0].length;

  

// 获取笔记的基本路径和笔记名

  

const currentFile = app.workspace.getActiveFile();

  

if (!currentFile) {

  

    new Notice(&amp;quot;❌ 无法获取当前文件&amp;quot;, 3000);

  

    return;

  

}

  

// 获取excalidraw文件路径、文件名，准备生成对应笔记

const filePath = currentFile.path;

  

const fileName = currentFile.name;

  

const fileBaseName = fileName.replace(&#39;.excalidraw&#39;, &#39;&#39;);

  

  

// 初始化变量

  

let frameIds = [];

  

let extrTexts = &#39;&#39;;

  

  

// 获取所有以&#39;#&#39;开头的文本元素（即标题）

  

let allEls = ea.getViewElements().filter(el =&amp;gt; el.type === &amp;quot;text&amp;quot; &amp;amp;&amp;amp; el.text.startsWith(&#39;#&#39;));

  

  

// 对标题进行排序

  

allEls.sort((a, b) =&amp;gt; {

  

    let aMatch = a.text.match(/^#([&#92;d.]+)/);

  

    let bMatch = b.text.match(/^#([&#92;d.]+)/);

  

    if (!aMatch || !bMatch) return 0;

  

    let aParts = aMatch[1].split(&#39;.&#39;).map(Number);

  

    let bParts = bMatch[1].split(&#39;.&#39;).map(Number);

  

    for (let i = 0; i &amp;lt; Math.max(aParts.length, bParts.length); i++) {

  

        if (aParts[i] === undefined) return -1;

  

        if (bParts[i] === undefined) return 1;

  

        if (aParts[i] !== bParts[i]) return aParts[i] - bParts[i];

  

    }

  

    return 0;

  

});

  

  

for (let i of allEls) {

  

    let elText = i.rawText.trim(); // 使用 rawText 而不是 text，以规避换行符问题

  

    let elID = i.id;

  

  

    let match = elText.match(/^#([&#92;d.]+)&#92;s+(.*)/);

  

    if (!match) continue;

  

  

    let numberPart = match[1];

  

    let titlePart = match[2];

  

    // 计算标题级别

    let levels = numberPart.split(&#39;.&#39;).length;

    let headLevel = Math.min(levels + customHeaderLevel, 6);  // 根据customMiscHeader的级别调整

  

  

    let heads = &#39;#&#39;.repeat(headLevel);

  

    let titleText = &amp;quot;&amp;quot;;

  

    let titleLink = &amp;quot;&amp;quot;;

  

    let embedlinks = [];

  

    let nums = 99;

  

  

    // 处理excalidraw中的Frame、Group

  

    if (i.frameId &amp;amp;&amp;amp; !frameIds.includes(i.frameId)) {

  

        elID = i.frameId;

  

        frameIds.push(elID);

  

        titleLink = `${fileName}#^frame=${elID}`;

  

        for (let j of ea.getViewElements().filter(el =&amp;gt; el.type === &amp;quot;embeddable&amp;quot;)) {

  

            if (j.frameId == elID) {

  

                embedlinks.push(`&#92;n!${j.link} `)

  

                let objectFrame = ea.getViewElements().filter(el =&amp;gt; el.frameId === elID);

  

                nums = objectFrame.length;

  

            }

  

        }

  

    } else if (i.groupIds) {

  

        titleLink = `${fileName}#^group=${elID}`;

  

        for (let j of ea.getViewElements().filter(el =&amp;gt; el.type === &amp;quot;embeddable&amp;quot;)) {

  

            if (j.groupIds.some(groupId =&amp;gt; i.groupIds.includes(groupId))) {

  

                embedlinks.push(`&#92;n!${j.link} `)

  

                let objectFrame = ea.getViewElements().filter(el =&amp;gt; el.groupIds.some(groupId =&amp;gt; i.groupIds.includes(groupId)));

  

                nums = objectFrame.length;

  

            }

  

        }

  

    } else {

  

        titleLink = `${fileName}#^${elID}`;

  

    }

  

  

    // 生成标题文本

  

    if (embedlinks.length &amp;gt; 0) {

  

        let extrEmbedlinks = embedlinks.join(&#39;&#92;r&#92;n&#39;);

  

        titleText = `${heads} ${titlePart}&#92;n${extrEmbedlinks}&#92;n`;

  

        if (nums &amp;gt; 3) {

  

            titleText += `!&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://blog.qudange.top/404&quot; target=&quot;&quot;&gt;${imageWidth}&lt;/a&gt;&#92;n`;

  

        }

  

    } else {

  

        titleText = `${heads} ${titlePart}&#92;n`;

  

        if (nums &amp;gt; 2) {

  

            titleText += `!&lt;a class=&quot;internal-link is-unresolved&quot; href=&quot;https://blog.qudange.top/404&quot; target=&quot;&quot;&gt;${imageWidth}&lt;/a&gt;&#92;n`;

  

        }

  

    }

  

  

    extrTexts += titleText;

  

}

  

  

// 构建输出文件路径

  

let outputFileName = `${fileBaseName}.md`;

  

let outputPath = filePath.replace(&#39;.excalidraw&#39;, &#39;&#39;);

  

  

// 检查输出文件是否存在

  

let outputFile = app.vault.getAbstractFileByPath(outputPath);

  

if (!outputFile) {

  

    new Notice(`❌ 输出文件不存在：${outputPath}`, 3000);

  

    // 尝试创建文件

  

    try {

  

        await app.vault.create(outputPath, &#39;&#39;);

  

        outputFile = app.vault.getAbstractFileByPath(outputPath);

  

        new Notice(`✅ 已创建新文件：${outputPath}`, 2000);

  

    } catch (error) {

  

        new Notice(`❌ 无法创建文件：${outputPath}`, 3000);

  

        return;

  

    }

  

}

  

  

// 读取输出文件内容

  

let outputContent = await app.vault.read(outputFile);

  
  
  

  

// 创建唯一标识符

  

let excalidrawIdentifier = `EXCALIDRAW_CONTENT_${fileName.replace(/[^a-zA-Z0-9]/g, &amp;quot;_&amp;quot;)}`;

  

  

// 构建新的 Excalidraw 内容

  

let newExcalidrawContent = `&amp;lt;!-- BEGIN ${excalidrawIdentifier} --&amp;gt;&#92;n${extrTexts}&#92;n&amp;lt;!-- END ${excalidrawIdentifier} --&amp;gt;`;

  

  

// 检查是否已存在 Excalidraw 内容

  

let startMarker = `&amp;lt;!-- BEGIN ${excalidrawIdentifier} --&amp;gt;`;

  

let endMarker = `&amp;lt;!-- END ${excalidrawIdentifier} --&amp;gt;`;

  

let startIndex = outputContent.indexOf(startMarker);

  

let endIndex = outputContent.indexOf(endMarker);

  

  

// 辅助函数：获取标题级别

  

function getHeaderLevel(header) {

  

    return header.match(/^#+/)[0].length;

  

}

  

  

// 辅助函数：查找下一个相同或更高级别的标题

  

function findNextHeader(content, startIndex, currentLevel) {

  

    const headerRegex = /^#{1,6}&#92;s/gm;

  

    headerRegex.lastIndex = startIndex;

  

    let match;

  

    while ((match = headerRegex.exec(content)) !== null) {

  

        if (getHeaderLevel(match[0]) &amp;lt;= currentLevel) {

  

            return match.index;

  

        }

  

    }

  

    return content.length;

  

}

  

  

if (startIndex !== -1 &amp;amp;&amp;amp; endIndex !== -1) {

  

    // 如果存在，更新现有内容

  

    outputContent = outputContent.substring(0, startIndex) +

  

                    newExcalidrawContent +

  

                    outputContent.substring(endIndex + endMarker.length);

  

} else {

  

    // 如果不存在，在自定义杂记标题后插入新内容

  

    let miscIndex = outputContent.indexOf(customMiscHeader);

  

    if (miscIndex !== -1) {

  

        let currentHeaderLevel = getHeaderLevel(customMiscHeader);

  

        // 找到下一个相同或更高级别的标题或文件末尾

  

        let nextHeaderIndex = findNextHeader(outputContent, miscIndex + customMiscHeader.length, currentHeaderLevel);

  

        // 在自定义杂记标题和下一个标题之间插入新内容

  

        outputContent = outputContent.substring(0, nextHeaderIndex) +

  

                        &amp;quot;&#92;n&#92;n&amp;quot; + newExcalidrawContent + &amp;quot;&#92;n&#92;n&amp;quot; +

  

                        outputContent.substring(nextHeaderIndex);

  

    } else {

  

        // 如果没有找到自定义杂记标题，则在文件末尾添加

  

        outputContent += `&#92;n&#92;n${customMiscHeader}&#92;n&#92;n` + newExcalidrawContent;

  

    }

  

}

  

  

// 更新输出文件

  

await app.vault.modify(outputFile, outputContent);

  

  

new Notice(`✅ Excalidraw 内容已更新到文件：${outputPath}`, 2000);
&lt;/code&gt;&lt;/pre&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/一键把excalidraw的头脑风暴输出为线性文章/" //>
        </entry>
        <entry>
            <title>
                Thino与Mac软件popclip联动-实现系统级全局划词摘录
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/Thino与Mac软件popclip联动-实现系统级全局划词摘录/</id>
            <content type="html">
                &lt;p&gt;简单介绍一下 popclip：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PopClip 是一款 macOS 效率工具，选中文本后弹出快捷工具栏，支持复制、粘贴、搜索等操作，并可通过扩展插件实现翻译、格式化、笔记保存等功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;popclip 有一个插件可以把选中的文本发送到 Obsidian 中，如果是在浏览器中选中文本，还可以用 md 格式把标题与链接插入到笔记中，很适合摘录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Clipboard-20250207-121434-348.gif&quot; alt=&quot;assets/Clipboard-20250207-121434-348.gif&quot; /&gt;&lt;/p&gt;
&lt;p&gt;但是原有插件不支持插入当前时间戳，也就是 thino 需要的那个 &lt;code&gt;- 18:34 &lt;/code&gt; 前缀，因此我修改了插件，并且提交了 PR，现在可以在插件市场下载&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;1.在 Obsidian 中安装 &lt;code&gt;advanced url&lt;/code&gt; 插件，启用后无需任何设置&lt;/p&gt;
&lt;p&gt;2.在 popclip 中安装 &lt;a href=&quot;https://www.popclip.app/extensions/x/wfhk0x&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;黑曜石 - popclip扩展 --- Obsidian — PopClip Extensions&lt;/a&gt; 插件&lt;/p&gt;
&lt;p&gt;3.在 popclip 中设置库名称&lt;/p&gt;
&lt;p&gt;4.勾选 &lt;code&gt;include timestamp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020250207201859.png&quot; alt=&quot;assets/Pasted image 20250207201859.png&quot; /&gt;&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Thino与Mac软件popclip联动-实现系统级全局划词摘录/" //>
        </entry>
        <entry>
            <title>
                Obsidian轻量级PPT教程
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/Obsidian轻量级PPT教程/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;不论是学习还是工作，我们总有需要展示内容的时候，一般会用幻灯片 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; 来完成。PPT 相较于传统文稿，可以更直观地将信息传递给观众，通过图文结合的方式展现内容，同时利用动画效果引导视线，减轻演讲者的压力。&lt;/p&gt;
&lt;p&gt;随着我们在 Obsidian（后文简称 ob）笔记系统中的应用日渐深入，用 ob 制作 PPT 的需求变得自然而然。本文将介绍几种在 ob 中制作 PPT 的常见方式，包括 ob 自带的幻灯片与白板核心插件，以及第三方插件 Slides Extend、Advanced Canvas 和 Excalidraw。&lt;/p&gt;
&lt;p&gt;当然，Obsidian 在制作 PPT 领域无法与专业软件相提并论，因此建议大家结合自己的实际需求和 Obsidian 的功能限制，选择最适合的方式进行尝试。&lt;/p&gt;
&lt;p&gt;本文配套示例库：&lt;a href=&quot;https://github.com/dangehub/aqu_ob_share/releases/tag/ob-ppt&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Release Obsidian轻量级PPT教程配套示例库 · dangehub/aqu_ob_share&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文配套视频：&lt;a href=&quot;https://www.bilibili.com/video/BV1BAcAeaEsQ/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;如何炫酷的展示你的笔记 —— Obsidian PPT 的三种方法_哔哩哔哩_bilibili&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;核心插件：幻灯片&quot; tabindex=&quot;-1&quot;&gt;核心插件：幻灯片&lt;/h1&gt;
&lt;h2 id=&quot;相关资料&quot; tabindex=&quot;-1&quot;&gt;相关资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;https://publish.obsidian.md/help-zh/%E6%A0%B8%E5%BF%83%E6%8F%92%E4%BB%B6/%E5%B9%BB%E7%81%AF%E7%89%87&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;幻灯片 - Obsidian 中文帮助 - Obsidian Publish&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用教程&quot; tabindex=&quot;-1&quot;&gt;使用教程&lt;/h2&gt;
&lt;p&gt;Ob 提供了一个原生的幻灯片核心插件。启用插件后，可以右键任意文件选择 开始演示，或按下快捷键 Ctrl+P 输入命令 幻灯片：开始演示 来激活模式。&lt;/p&gt;
&lt;p&gt;在演示模式下，当前文档会以幻灯片形式播放，并以 --- 分隔符将文档内容划分为多页。通过键盘左右箭头可以控制翻页。&lt;/p&gt;
&lt;h2 id=&quot;优点/推荐使用场景&quot; tabindex=&quot;-1&quot;&gt;优点/推荐使用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;完美支持 Ob 的所有语法&lt;/li&gt;
&lt;li&gt;对已有笔记的改动最小，能快速将笔记转换为演示内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;缺点/局限性分析&quot; tabindex=&quot;-1&quot;&gt;缺点/局限性分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;功能简单，缺少动画等高级功能&lt;/li&gt;
&lt;li&gt;单页内容超出限制时，额外内容会被直接截断，无法滚动查看&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;slides-extend&quot; tabindex=&quot;-1&quot;&gt;第三方插件：slides extend&lt;/h1&gt;
&lt;p&gt;Slides Extend 插件 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn2&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; 是 Ob 原生幻灯片插件的功能扩展版本，由 Reveal.js 提供支持。&lt;/p&gt;
&lt;h2 id=&quot;相关资料-1&quot; tabindex=&quot;-1&quot;&gt;相关资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;项目开源地址：&lt;a href=&quot;https://github.com/ebullient/obsidian-slides-extended&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;ebullient/obsidian-slides-extended&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;项目文档：见 GitHub 仓库的 &lt;code&gt;docs&lt;/code&gt; 目录（ps：吐槽一下 readme 里也不放链接，需要自己找）&lt;/li&gt;
&lt;li&gt;此插件由 Reveal.js 驱动，因此可以参考 Reveal.js 的文档：&lt;a href=&quot;https://revealjs.com/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;The HTML presentation framework | reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用教程-1&quot; tabindex=&quot;-1&quot;&gt;使用教程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基本的操作逻辑与核心插件幻灯片一致，&lt;code&gt;---&lt;/code&gt; 作为分页符&lt;/li&gt;
&lt;li&gt;支持动画，参考文档：&lt;a href=&quot;https://revealjs.com/auto-animate/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;自动动画 | Reveal.js --- Auto-Animate | reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;支持嵌入 Excalidraw 图形，需开启 Excalidraw 的自动导出功能或通过 Frontmatter 配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中为了支持 excalidraw 嵌入，需要让 excalidraw 自动生成对应的图片，并且编辑后自动修改图片，下面设置二选一：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开【嵌入到 Markdown 文档中的绘图】— 【导出】— 【导出设置】— 【自动导出 SVG 副本】或【自动导出 PNG 副本】&lt;/li&gt;
&lt;li&gt;把 excalidraw 文件以 md 视图打开（编辑器右上角三个点或者命令搜索”excalidraw 切换“），手动添加 frontmatter &lt;code&gt;excalidraw-autoexport:svg&lt;/code&gt; （值也可以设置为 png/both），这种方法只会让被设置的文件自动生成对应图片。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;优点/推荐使用场景-1&quot; tabindex=&quot;-1&quot;&gt;优点/推荐使用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;代码编辑与 Ob 的笔记系统无缝衔接，可快速将笔记转换为 PPT&lt;/li&gt;
&lt;li&gt;易于实现自动化流程，例如针对固定格式的笔记（如日记）自动生成 PPT&lt;/li&gt;
&lt;li&gt;内置 web 服务器，可用浏览器播放 PPT&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;缺点/局限性分析-1&quot; tabindex=&quot;-1&quot;&gt;缺点/局限性分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;缺少可视化界面，学习成本较高&lt;/li&gt;
&lt;li&gt;编辑过程中容易因代码错误导致演示失效&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;advanced-canvas&quot; tabindex=&quot;-1&quot;&gt;核心插件：白板 + 第三方插件 advanced canvas&lt;/h1&gt;
&lt;p&gt;Ob 自带的白板插件虽无演示功能，但可通过 Advanced Canvas 插件实现扩展。这种方法尤其适合以白板形式记录笔记的场景，如头脑风暴或碎片知识整理，能帮助理清分散的思路&lt;/p&gt;
&lt;h2 id=&quot;相关资料-2&quot; tabindex=&quot;-1&quot;&gt;相关资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;白板的官方文档：&lt;a href=&quot;https://publish.obsidian.md/help-zh/%E6%A0%B8%E5%BF%83%E6%8F%92%E4%BB%B6/%E7%99%BD%E6%9D%BF&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;白板 - Obsidian 中文帮助 - Obsidian Publish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;advanced canvas 项目开源地址：&lt;a href=&quot;https://github.com/Developer-Mike/obsidian-advanced-canvas&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Developer-Mike/obsidian-advanced-canvas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用教程-2&quot; tabindex=&quot;-1&quot;&gt;使用教程&lt;/h2&gt;
&lt;p&gt;安装好 advanced canvas 插件，无需任何配置，在 ob 里新建一个白板文件，然后在正下方能看到在原有白板的基础上多出来两个按钮，点击或拖拽 &lt;code&gt;Drag to add slide&lt;/code&gt; 按钮即可新增 PPT 分页区域。&lt;/p&gt;
&lt;p&gt;每一个区域就是一页 PPT，第一次创建的 PPT 分页就是整个 PPT 的封面，右上角有一个 &lt;code&gt;start&lt;/code&gt; 标识。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/obsidian%E5%81%9Appt/assets/Pasted%20image%2020250101134306.png&quot; alt=&quot;../../../../105-极客/写作工具/Obsidian/obsidian做ppt/assets/Pasted image 20250101134306.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;在创建了 PPT 分页后，按 &lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt; 输入命令 &lt;code&gt;Advanced Canvas:Start presentation&lt;/code&gt; 即可开始 PPT 展示。&lt;/p&gt;
&lt;p&gt;这种方式制作的 PPT 的展示顺序由 PPT 分页的箭头控制，如果只是添加了多个分页，但是没有使用箭头将 PPT 分页连接起来，播放时则只展示 start 分页。&lt;/p&gt;
&lt;p&gt;可以通过箭头实现 PPT 的复杂跳转逻辑，比如 1--&amp;gt;2--&amp;gt;3--&amp;gt;2--&amp;gt;4--&amp;gt;5，但需要注意，start 分页只能连接一个后续节点，如果连接多个，则只有第一个连接的分页会被识别。&lt;/p&gt;
&lt;h2 id=&quot;优点/推荐使用场景-2&quot; tabindex=&quot;-1&quot;&gt;优点/推荐使用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;充分利用 Ob 原生白板功能，可直接嵌入笔记内容&lt;/li&gt;
&lt;li&gt;制作过程中白板的布局即完成了排版，减少了 PPT 制作的额外工作量&lt;/li&gt;
&lt;li&gt;通过箭头控制分页跳转逻辑，轻松实现复杂的 PPT 演示路径&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;缺点/局限性分析-2&quot; tabindex=&quot;-1&quot;&gt;缺点/局限性分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如果原笔记以文字为主，需手动将内容转换为白板形式，工作量较大&lt;/li&gt;
&lt;li&gt;动画效果有限，仅支持页面切换&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;excalidraw&quot; tabindex=&quot;-1&quot;&gt;第三方插件：excalidraw&lt;/h1&gt;
&lt;h2 id=&quot;相关资料-3&quot; tabindex=&quot;-1&quot;&gt;相关资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;项目开源地址：&lt;a href=&quot;https://github.com/zsviczian/obsidian-excalidraw-plugin&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;zsviczian/obsidian-excalidraw-plugin: A plugin to edit and view Excalidraw drawings in Obsidian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;项目文档：&lt;a href=&quot;https://excalidraw-obsidian.online/Welcome&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;欢迎 - Excalidraw --- Welcome - Excalidraw&lt;/a&gt; （建设中）&lt;/li&gt;
&lt;li&gt;（强烈推荐）&lt;a href=&quot;https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/excalidraw%E8%84%9A%E6%9C%AC-slideshow%E5%AE%8C%E7%BE%8E%E5%AE%9E%E7%8E%B0%E7%94%BB%E6%9D%BF%E5%B9%BB%E7%81%AF%E7%89%87%E6%BC%94%E7%A4%BA%E7%9A%84%E8%84%9A%E6%9C%AC/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;PKMer_Excalidraw 脚本：Slideshow 完美实现画板幻灯片演示的脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用教程-3&quot; tabindex=&quot;-1&quot;&gt;使用教程&lt;/h2&gt;
&lt;p&gt;具体教程见 pkmer 文章：&lt;a href=&quot;https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/excalidraw%E8%84%9A%E6%9C%AC-slideshow%E5%AE%8C%E7%BE%8E%E5%AE%9E%E7%8E%B0%E7%94%BB%E6%9D%BF%E5%B9%BB%E7%81%AF%E7%89%87%E6%BC%94%E7%A4%BA%E7%9A%84%E8%84%9A%E6%9C%AC/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;PKMer_Excalidraw 脚本：Slideshow 完美实现画板幻灯片演示的脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;需要先在 excalidraw 的脚本库中安装 &lt;code&gt;slideshow&lt;/code&gt; 脚本，然后可以通过箭头和 frames 的编号来控制幻灯片顺序。&lt;/p&gt;
&lt;h2 id=&quot;优点/推荐使用场景-3&quot; tabindex=&quot;-1&quot;&gt;优点/推荐使用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;excalidraw 有着 ob 里最强的画图能力，用它来做 PPT，内容丰富的上限极高&lt;/li&gt;
&lt;li&gt;frame 编号和箭头这两种方式来控制 PPT 的镜头运动，兼顾了简单出图与复杂运动轨迹的需求&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;缺点/局限性分析-3&quot; tabindex=&quot;-1&quot;&gt;缺点/局限性分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;excalidraw 相对重量级，对设备性能要求更高&lt;/li&gt;
&lt;li&gt;同白板一样，都需要根据文字内容再创作，不能直接转换&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;后话&quot; tabindex=&quot;-1&quot;&gt;后话&lt;/h1&gt;
&lt;p&gt;为什么坚持用 Ob 做 PPT？最初是因为工作电脑性能较低，且由于网络限制，难以使用现代化工具。相比老旧的 Office，Ob 简洁的风格反而更适合理工科的表达需求。此外，我日常习惯用 Ob 写工作笔记，用它制作 PPT 显得顺理成章。&lt;/p&gt;
&lt;p&gt;当然，用 Ob 制作 PPT 需要量力而行，明确目标。如果只是单纯追求好看效果，专业软件仍然是不二之选。若只是为了“玩”或者“炫技”，这套方法也有相当高的上限，世界也需要更多“无意义”的探索。&lt;/p&gt;
&lt;hr /&gt;
&lt;hr class=&quot;footnotes-sep&quot; /&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
&lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;严格意义上“PPT”指代的是微软公司的 PowerPoint 软件，而“幻灯片”才是这种方式的名称，但是由于 PowerPoint 其广泛使用，所以人们把“幻灯片”与“PPT”划上了等号。因为本文中会频繁出现 obsidian 软件自带的幻灯片插件，为了避免混淆二者，因此本文以“PPT” 指代严格意义上的“幻灯片”，而用“幻灯片”指代 obsidian 中的幻灯片插件。 &lt;a href=&quot;https://blog.qudange.top/#fnref1&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn2&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;这个项目继承自 &lt;code&gt;advanced slides&lt;/code&gt; 插件，原插件作者表示在盈利路径上和 ob 官方有矛盾，做插件赚不到钱，导致他决定停止发布插件的后续更新。 &lt;a href=&quot;https://blog.qudange.top/#fnref2&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Obsidian轻量级PPT教程/" //>
        </entry>
        <entry>
            <title>
                Obsidian插件测评-i18n-汉化插件、翻译词典编辑器、云端共享词典、内置沉浸式翻译
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/Obsidian插件测评/Obsidian插件测评-i18n-汉化插件、翻译词典编辑器、云端共享词典、内置沉浸式翻译/</id>
            <content type="html">
                &lt;h1 id=&quot;插件简介&quot; tabindex=&quot;-1&quot;&gt;插件简介&lt;/h1&gt;
&lt;p&gt;i18n 是一款用于翻译 Obsidian 插件的插件，入门用户可以一键下载其他用户分享的成品词典，进阶用户可以使用内置编辑器翻译插件，支持百度翻译与 ChatGPT ，同时也内置了沉浸式翻译用于应急，最后用户可以选择分享自己的词典，插件内置了贡献用户榜单，截止 2025 年 01 月 10 日，已翻译了近 300 款插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250112004224.png&quot; alt=&quot;assets/Pasted image 20250112004224.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用示例&quot; tabindex=&quot;-1&quot;&gt;使用示例&lt;/h2&gt;
&lt;h3 id=&quot;词典管理面板&quot; tabindex=&quot;-1&quot;&gt;词典管理面板&lt;/h3&gt;
&lt;p&gt;在这里可以提取、下载、注入或还原词典。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250110224304.png&quot; alt=&quot;assets/Pasted image 20250110224304.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;译文编辑器&quot; tabindex=&quot;-1&quot;&gt;译文编辑器&lt;/h3&gt;
&lt;p&gt;在这里可以自由编辑词典。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250110224703.png&quot; alt=&quot;assets/Pasted image 20250110224703.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;译文审核面板&quot; tabindex=&quot;-1&quot;&gt;译文审核面板&lt;/h3&gt;
&lt;p&gt;云端的插件都是由热心志愿者无偿维护的，每个词典均经过审核，保证新手可以开箱即用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250110224821.png&quot; alt=&quot;assets/Pasted image 20250110224821.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;沉浸式翻译&quot; tabindex=&quot;-1&quot;&gt;沉浸式翻译&lt;/h3&gt;
&lt;p&gt;如果某个插件还没有云端词典，也可以使用沉浸式翻译来机翻。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111000357.png&quot; alt=&quot;assets/Pasted image 20250111000357.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目情况&quot; tabindex=&quot;-1&quot;&gt;项目情况&lt;/h2&gt;
&lt;p&gt;是否上架官方市场：❌️&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/0011000000110010/obsidian-i18n&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;项目地址链接&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用教程&quot; tabindex=&quot;-1&quot;&gt;使用教程&lt;/h1&gt;
&lt;h2 id=&quot;概念定义&quot; tabindex=&quot;-1&quot;&gt;概念定义&lt;/h2&gt;
&lt;p&gt;这个部分我会讲解 i18n 名称的来历、它的翻译工作原理，如果只是想使用成品词典的朋友可以跳过本章。如果你不了解编程，但是想深度使用这个插件，我建议你阅读。&lt;/p&gt;
&lt;h3 id=&quot;名称含义&quot; tabindex=&quot;-1&quot;&gt;名称含义&lt;/h3&gt;
&lt;p&gt;i18n 是 internationalization 的缩写，意为“国际化”。为了避免概念混淆，本文中提到的 i18n（除特别说明外）均指代该插件。&lt;/p&gt;
&lt;h3 id=&quot;插件翻译原理&quot; tabindex=&quot;-1&quot;&gt;插件翻译原理&lt;/h3&gt;
&lt;p&gt;一个 Obsidian 插件一般由三个文件：&lt;code&gt;main.js&lt;/code&gt;、&lt;code&gt;manifest.json&lt;/code&gt;、&lt;code&gt;style.css&lt;/code&gt; 组成。&lt;/p&gt;
&lt;p&gt;它们的职责为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;main.js&lt;/code&gt;：插件的本体，所有插件的功能实现与文字都存放在此&lt;/li&gt;
&lt;li&gt;&lt;code&gt;manifest.json&lt;/code&gt;：插件的描述信息，如 id、名称、简介和版本号等信息都存放于此&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style.css&lt;/code&gt;：插件的样式，即控制其外观的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250110232450.png&quot; alt=&quot;assets/Pasted image 20250110232450.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;也就是说，插件显示在用户界面的所有文字信息通常存放于 &lt;code&gt;main.js&lt;/code&gt; 文件中。最基础的翻译方法是直接定位到对应文字，然后将其替换为翻译后的内容。&lt;/p&gt;
&lt;p&gt;但是最正统、优雅的翻译方式应该是在插件开发阶段，开发者把所有需要显示给用户的文字都设置为“变量”，然后再从语言文件中获取这个“变量”的值，这样只需要翻译这个语言文件即可。这是标准的软件翻译方法。&lt;/p&gt;
&lt;p&gt;但是 Obsidian 插件开发是由个人兴趣驱动的，不是所有的开发者都有意愿为自己的插件添加这样的功能。因此有的人会使用原始方法进行翻译，而 i18n 就是一款以 Obsidian 插件形式来完成原始方法的插件，它的原理很简单，就是查找并替换文本。不过它提供了一套工作流来完成查找、翻译、替换、分享、审核。&lt;/p&gt;
&lt;h3 id=&quot;i18n&quot; tabindex=&quot;-1&quot;&gt;i18n 工作原理&lt;/h3&gt;
&lt;h4 id=&quot;提取&quot; tabindex=&quot;-1&quot;&gt;提取&lt;/h4&gt;
&lt;p&gt;这里我们将所有会被用户看到的文本称为“UI 文本”，i18n 会使用正则提取 &lt;code&gt;main.js&lt;/code&gt; 中常见的 UI 文本，并且将其存放到待翻译插件目录下的 &lt;code&gt;lang&lt;/code&gt; 目录中的 &lt;code&gt;zh-cn.json&lt;/code&gt; 文件中（文件名由目标语言决定），这个时候我们只能得到一个由类似 &lt;code&gt;apple:apple&lt;/code&gt; 的文本组成的文件，我将其称为“词典”，这个时候它只说明我们有一个英文 UI 文本叫 &lt;code&gt;apple&lt;/code&gt;。前面的 &lt;code&gt;apple&lt;/code&gt; 是原文，而后面 &lt;code&gt;apple&lt;/code&gt; 所在就是译文的位置。（其实在 json 文件中，前面那个叫做“键（key）”，后面那个叫做“值（value）”）&lt;/p&gt;
&lt;h4 id=&quot;翻译&quot; tabindex=&quot;-1&quot;&gt;翻译&lt;/h4&gt;
&lt;p&gt;在上一步我们得到了一个待翻译的词典，这一步我们需要翻译这个词典。也就是说我们要把第二个 &lt;code&gt;apple&lt;/code&gt; 翻译为 &lt;code&gt;苹果&lt;/code&gt;，把一个词典中所有的“值”都翻译完之后，一个成品词典就诞生了，这个时候所有的“值”的集合就可以被称为译文，但是如何在全过程中称呼这个文件呢？用译文去指代一个刚刚被提取的文件似乎不严谨，因此我们就用“词典”来称呼它吧。&lt;/p&gt;
&lt;p&gt;为了方便翻译，i18n 也提供了机器翻译接口，包括百度翻译与兼容 OpenAI 格式的大语言模型接口。其中百度翻译 api 每个人都能申请到免费的，而兼容 OpenAI 格式则能让用户使用几乎所有的大语言模型 AI。&lt;/p&gt;
&lt;h4 id=&quot;注入/替换&quot; tabindex=&quot;-1&quot;&gt;注入/替换&lt;/h4&gt;
&lt;p&gt;当我们完成翻译后，原插件没有发生变化，我们需要根据“键”与“值”的关系，用我们翻译好的内容一一替换原文，这个过程被我称之为“注入”，i18n 中对应的按钮名称为“替换”。&lt;/p&gt;
&lt;h4 id=&quot;云端&quot; tabindex=&quot;-1&quot;&gt;云端&lt;/h4&gt;
&lt;p&gt;虽然我们已经尽可能的简化了翻译流程，但是依然需要用户具备一定的动手能力，因此我们设计了云端词典库，我们借用 Gitee 的 issue 区作为中转区，把用户提交的词典放到中转区，再由志愿者管理员手动检查词典是否有原则性错误（宥于精力、水平有限，只审核明显错误，不能控制翻译质量），审核通过后词典会被存放到 i18n 插件开源库中，新手用户可以在插件中下载对应插件的词典。我们对云端词库的预期只是“满足小白用户的、开箱即用的”，因此不要对它抱有过高期望，下载的词典也可以被二次编辑。&lt;/p&gt;
&lt;h2 id=&quot;新手入门：安装插件、下载云端词典并注入&quot; tabindex=&quot;-1&quot;&gt;新手入门：安装插件、下载云端词典并注入&lt;/h2&gt;
&lt;h3 id=&quot;gitee&quot; tabindex=&quot;-1&quot;&gt;插件安装方法一：Gitee 手动下载安装&lt;/h3&gt;
&lt;p&gt;打开项目地址： &lt;a href=&quot;https://gitee.com/zero--two/obsidian-i18n-translation&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;zero/obsidian-i18n-translation&lt;/a&gt; ，点击发行版下蓝色的版本号&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111144027.png&quot; alt=&quot;assets/Pasted image 20250111144027.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;下载 &lt;code&gt;main.js&lt;/code&gt;、&lt;code&gt;manifest.json&lt;/code&gt;、&lt;code&gt;style.css&lt;/code&gt; 这三个文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111144207.png&quot; alt=&quot;assets/Pasted image 20250111144207.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;再把文件复制到 Obsidian 库内的隐藏文件夹中，路径为 &lt;code&gt;Obsidian库文件夹/.obsidian/plugins/i18n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111144559.png&quot; alt=&quot;assets/Pasted image 20250111144559.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：也可以使用 brat 安装，GitHub 有同步的仓库，此方法不再赘述。&lt;/p&gt;
&lt;h3 id=&quot;pkmer&quot; tabindex=&quot;-1&quot;&gt;插件安装方法二：使用 pkmer 插件市场&lt;/h3&gt;
&lt;p&gt;详见 &lt;a href=&quot;https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pkmer-market/pkmer/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;PKMer_Obsidian 插件：PKMer 不需要魔法，完美解决 Obsidian 无法加载第三方插件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装 pkmer 之后，搜索 &lt;code&gt;i18n &lt;/code&gt; 即可安装。&lt;/p&gt;
&lt;h3 id=&quot;下载云端词典并注入&quot; tabindex=&quot;-1&quot;&gt;下载云端词典并注入&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开 i18n 设置，确认云端模式已打开 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111210446.png&quot; alt=&quot;assets/Pasted image 20250111210446.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;点击 Obsidian 左侧的 i18n 图标 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111180451.png&quot; alt=&quot;assets/Pasted image 20250111180451.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;如果本地不存在词典，且对应插件云端已有分享词典，你会在插件后面看到一个 &lt;code&gt;下载&lt;/code&gt; 按钮，如果云端没有词典，则没有下载按钮 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111210321.png&quot; alt=&quot;assets/Pasted image 20250111210321.png&quot; /&gt;
&lt;ul&gt;
&lt;li&gt;注：如果&lt;strong&gt;本地已有词典&lt;/strong&gt;，&lt;code&gt;下载&lt;/code&gt; 按钮也&lt;strong&gt;不会&lt;/strong&gt;出现，需要删除本地词典&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;下载&lt;/code&gt; 按钮后，会出现下载面板，点击 &lt;code&gt;保存&lt;/code&gt; 按钮即可 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111210013.png&quot; alt=&quot;assets/Pasted image 20250111210013.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;保存完成后，&lt;code&gt;提取&lt;/code&gt; 按钮会变成 &lt;code&gt;替换&lt;/code&gt; 按钮，点击 &lt;code&gt;替换&lt;/code&gt; 后对应插件就会被翻译，如果依然插件界面未翻译，则需要重启 Obsidian &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111210206.png&quot; alt=&quot;assets/Pasted image 20250111210206.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;style-settings&quot; tabindex=&quot;-1&quot;&gt;特殊情况：如何翻译 Style Settings 插件中的其他主题/插件&lt;/h4&gt;
&lt;p&gt;常常有人提问：“&lt;em&gt;为什么我注入了 Style Settings 插件的词典，里面内容依然是英文？&lt;/em&gt;”，因为这是一个特殊情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原理解析&lt;/strong&gt;：Style Settings 插件中显示的其他插件设置，自然不可能是 Style Settings 自身携带的，如果只是翻译 Style Settings 插件的 &lt;code&gt;main.js&lt;/code&gt;，里面的设置不会有任何变化，因为这些文本是其他插件作者在开发插件时根据 Style Settings 的规范，放在对应插件的 &lt;code&gt;style.css&lt;/code&gt; 中，因此我们真正需要翻译的是对应插件的 &lt;code&gt;style.css&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;下面讲解一下如何翻译某个插件/主题在 Style Settings 插件中的设置项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击 i18n 控制面板右上角的调色板符号 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111205642.png&quot; alt=&quot;assets/Pasted image 20250111205642.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;在这个 Style Settings 专属面板中按照普通插件的翻译流程操作即可 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111182207.png&quot; alt=&quot;assets/Pasted image 20250111182207.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;没有云端词典？使用沉浸式翻译来应急&quot; tabindex=&quot;-1&quot;&gt;没有云端词典？使用沉浸式翻译来应急&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;如果某个插件没有对应的云端词典，该怎么办呢？&lt;/em&gt; 为了解决这个问题，i18n 集成了知名浏览器插件 &lt;code&gt;沉浸式翻译&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;使用方法也很简单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 i18n 设置页面，切换到 &lt;code&gt;沉浸翻译&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;开启&lt;/code&gt; 按钮&lt;/li&gt;
&lt;li&gt;点击悬浮球使用沉浸式翻译，更多配置请参见沉浸式翻译的官方&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111205541.png&quot; alt=&quot;assets/Pasted image 20250111205541.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于 i18n 仅简单集成了沉浸式翻译的 SDK，因此存在部分功能无法正常使用的情况，包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法打开沉浸式翻译的网页设置页面，只能使用悬浮球的设置页面
&lt;ul&gt;
&lt;li&gt;因此无法配置自己的 api key&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果设置了 &lt;code&gt;永不翻译该网站&lt;/code&gt;，悬浮球会消失，无法通过开关设置调出，即便重装 i18n 插件也无法重新调出悬浮球&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果在我的强调下，你还是点击了 &lt;code&gt;永不翻译该网站&lt;/code&gt; 并且想再次调出悬浮球，可以在 Obsidian 的调试控制台里输入这段代码 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&quot;提取词典并翻译&quot; tabindex=&quot;-1&quot;&gt;提取词典并翻译&lt;/h2&gt;
&lt;h3 id=&quot;提取-1&quot; tabindex=&quot;-1&quot;&gt;提取&lt;/h3&gt;
&lt;p&gt;点击 &lt;code&gt;提取&lt;/code&gt; 按钮即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111205247.png&quot; alt=&quot;assets/Pasted image 20250111205247.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;：i18n 是通过正则表达式来匹配插件中的 UI 文本，但这种方法不是万能的。一般插件作者会使用形如 &lt;code&gt;.setName(&amp;quot;apple&amp;quot;)&lt;/code&gt; 的函数 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn2&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; ，因此我们可以用正则来匹配这个函数，其他同理。但是这种方法有几个缺陷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Obsidian 官方并没有规定 UI 文本的写法，因此有无限种写法，每种写法都要写一个正则匹配，因此总有未考虑的情况&lt;/li&gt;
&lt;li&gt;匹配到的函数括号中可能会嵌套函数，因此不能简单的把括号内的文字全部翻译&lt;/li&gt;
&lt;li&gt;部分作者会采用非通用的 UI 文本编写方式，无法匹配&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;手动翻译&quot; tabindex=&quot;-1&quot;&gt;手动翻译&lt;/h3&gt;
&lt;p&gt;编辑器打开按钮：&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111204238.png&quot; alt=&quot;assets/Pasted image 20250111204238.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;编辑器：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111205142.png&quot; alt=&quot;assets/Pasted image 20250111205142.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编辑完成后一定要保存&lt;/li&gt;
&lt;li&gt;正则匹配可能会产生很多不需要翻译的内容，如果你要上传到云端，请删除这些内容&lt;/li&gt;
&lt;li&gt;内置匹配的正则规则有限，如果还有没匹配到的，请打开对应的 &lt;code&gt;main.js&lt;/code&gt; 搜索文本（可以直接点编辑器内的 &lt;code&gt;源码&lt;/code&gt; 按钮一键打开）
&lt;ul&gt;
&lt;li&gt;推荐使用 vscode 来打开，它的搜索功能很好用&lt;/li&gt;
&lt;li&gt;只需要保证搜索到的文本是唯一的（不唯一就多复制一点前后内容），就可以把这段文本复制到新建框，再点击 &lt;code&gt;新建&lt;/code&gt; 按钮&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;翻译的时候要避免翻译变量、函数等内容。例如原文为：&lt;code&gt;&amp;quot;.createEl(&#92;&amp;quot;h1&#92;&amp;quot;, {&#92;n      text: &#92;&amp;quot;Delete the file and its all attachments - logs &#92;&amp;quot;&#92;n    })&amp;quot;&lt;/code&gt;， 译文可能被翻译为：&lt;code&gt;&amp;quot;.创造El(&#92;&amp;quot;h1&#92;&amp;quot;, {&#92;n      文本: &#92;&amp;quot;删除文件及其所有附件 - 日志&#92;&amp;quot;&#92;n    })&amp;quot;&lt;/code&gt;，但此处的 &lt;code&gt;.createEl&lt;/code&gt; 和 &lt;code&gt;text&lt;/code&gt; 不该被翻译。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;机器翻译&quot; tabindex=&quot;-1&quot;&gt;机器翻译&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;声明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;这个机器翻译功能挺烂的，建议先用一个简单插件练手，如果能接受它，再投入实际使用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;机器翻译可能导致词典错误：因为待翻译的内容可能包含函数名与变量，而机器翻译无法准确的区分它们，从而导致翻译错误，因此需要人工检查机器翻译得到的词典，所以强烈建议只把机器翻译作为一项不成熟的辅助手段&lt;/li&gt;
&lt;li&gt;机器翻译可能会卡住：如果词典过大，机器翻译需要很长时间，在过程中如果触发了 api 的频率限制，可能会导致翻译失败，因此不建议翻译过多条目的词典（如 pdf++ 这种重量级插件）&lt;/li&gt;
&lt;li&gt;目前机器翻译只支持未提取的插件，即机器翻译包括 &lt;code&gt;提取&lt;/code&gt; 与 &lt;code&gt;翻译&lt;/code&gt;（其实这一点不合理，但是忘了改……）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置接口（二选一即可）：
&lt;ul&gt;
&lt;li&gt;百度接口 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111223738.png&quot; alt=&quot;assets/Pasted image 20250111223738.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;OpenAI 接口 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111224228.png&quot; alt=&quot;assets/Pasted image 20250111224228.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;确保插件未提取词典，点击 &lt;code&gt;AI&lt;/code&gt; 按钮即可开始机器翻译 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111224456.png&quot; alt=&quot;assets/Pasted image 20250111224456.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;提交词典至云端&quot; tabindex=&quot;-1&quot;&gt;提交词典至云端&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;确保已开启 &lt;code&gt;共建云端&lt;/code&gt; 中的 &lt;code&gt;贡献者模式&lt;/code&gt;，如果不执行第 2 步，则使用集体账号署名&lt;/li&gt;
&lt;li&gt;（可选）如果你拥有 Gitee 账号，想保留自己的署名，同时也让自己的账号成为 i18n 的贡献者，则可以申请一个 Gitee 的个人令牌，确保个人令牌&lt;strong&gt;具有 issue 的权限即可&lt;/strong&gt;，再将个人令牌填入云端模式设置中的贡献者模式中 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111224925.png&quot; alt=&quot;assets/Pasted image 20250111224925.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;确保自己已经完成了一份词典，以下是对词典的要求：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;上传之前自己要先注入使用，确保插件不会因为词典崩溃，这一点非常重要&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果云端已有词典，应该在原有基础上修改&lt;/li&gt;
&lt;li&gt;删除所有未翻译的词条&lt;/li&gt;
&lt;li&gt;不改变原文的含义&lt;/li&gt;
&lt;li&gt;不翻译插件名称&lt;/li&gt;
&lt;li&gt;尽量不翻译特定术语，如 &lt;code&gt;dataviewjs&lt;/code&gt; 作为插件 &lt;code&gt;dataview&lt;/code&gt; 的延伸，最好保留原文&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确保无误后点击 &lt;code&gt;共享译文&lt;/code&gt; 按钮并根据提示确认 &lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/Obsidian%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%84/assets/Pasted%20image%2020250111225613.png&quot; alt=&quot;assets/Pasted image 20250111225613.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;等待插件提交，若成功提交，则会打开一个 Gitee issue 网页，管理员会尽快审核词典。（注：issue 中就是被压缩的词典，如果你需要在外部条件下解码，可以使用网页工具 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn3&quot; id=&quot;fnref3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt; 。若词典有存在问题，可能会被拒绝，因此如果你希望获得相关反馈，建议按照第 2 步配置个人令牌，这样 Gitee 会有提醒。）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;常见问题&quot; tabindex=&quot;-1&quot;&gt;常见问题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;手机/平板无法使用：插件不支持移动端，但是被翻译的插件复制到移动端可以继续使用&lt;/li&gt;
&lt;li&gt;没有下载按钮
&lt;ul&gt;
&lt;li&gt;原因有二：
&lt;ol&gt;
&lt;li&gt;没有打开云端模式&lt;/li&gt;
&lt;li&gt;本地存在词典（常见于新手下载后盲目堤点击了 &lt;code&gt;提取&lt;/code&gt; 按钮）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;插件列表为空/显示插件数量少于实际数量：本地存在格式错误的词典，比如 &lt;code&gt;zh-cn.json&lt;/code&gt; 中缺少了一个逗号&lt;/li&gt;
&lt;li&gt;注入词典后插件依然为原文：重启 OB 即可&lt;/li&gt;
&lt;li&gt;插件更新后翻译失效：正常现象，因为翻译原理就是替换了插件文件，更新后新的文件会覆盖掉已翻译的文件，重新注入即可。也可以在 i18n 中打开【本地模式】中的【智能更新】功能&lt;/li&gt;
&lt;li&gt;插件前面有一个 &lt;code&gt;已过期&lt;/code&gt; 标签/更新按钮点了时候还在：i18n 插件开发不完善的问题，不需要在意&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;闲谈&quot; tabindex=&quot;-1&quot;&gt;闲谈&lt;/h1&gt;
&lt;p&gt;其实我也算是 i18n 的开发者之一（只做了一点小小的工作，绝大部分工作由 02 完成）。虽然我本人可以接受英文界面，但是还是觉得用中文界面更容易进入心流，但苦于社区中没有优雅的插件翻译方法（那个时候基本都是大家手动翻译再分享翻译后的插件，导致汉化后的插件与市场内的插件分道扬镳），于是在半年前突然萌生了自己制作一款 Obsidian 插件来完成对其他插件的翻译。当时的我也意识到，采用修改源代码的方式来翻译插件的方式有诸多问题，因此我一开始就放弃这个思路，而是采用修改 DOM 元素的方法，但紧接着就陷入了困境，在查找资料的过程中，我在 Obsidian 中文论坛看到了 02 的帖子，惊讶于原来有人也在做类似的工作，虽然他选择了另一条道路，但是他已经做出了一个具有相当成熟度的作品，于是我联系上他，和他开始了无数次的讨论与修改。&lt;/p&gt;
&lt;p&gt;在这款插件发展的过程中，我们也一直在说“i18n 是一款充满了妥协的插件”，从它不优雅的实现方式，再到被 Obsidian 官方拒绝上架，到因为如何实现云端词库的审核与存储而重构了三次代码，再到被其他插件作者要求下架他的插件翻译。这绝对不是一条坦途。&lt;/p&gt;
&lt;h2 id=&quot;不优雅但是有用，但是被官方拒绝上架甚至被插件作者要求删除译文&quot; tabindex=&quot;-1&quot;&gt;不优雅但是有用，但是被官方拒绝上架甚至被插件作者要求删除译文&lt;/h2&gt;
&lt;p&gt;在“插件翻译原理”那章我已经提到了优雅的软件翻译方式，i18n 的实现方式无疑是不优雅的，直接替换源代码可能会引入未知的错误。我曾经在英文社区和 Obsidian 的官方人员 joethei&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn4&quot; id=&quot;fnref4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt; 以及几位优质插件的开发人员聊过此事 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn5&quot; id=&quot;fnref5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt; ，他们表示不可能接受修改插件源代码来实现翻译的方式。翻译只应该通过开发者提供的 i18n 框架实现（此处的 i18n 指国际化）。&lt;/p&gt;
&lt;p&gt;我表示理解，因为他们这是典型的程序员专业视角，他们说的没有任何错。但是期望插件开发者都有自觉去添加 i18n 框架是不现实，因为绝大部分插件开发都始于兴趣，终于热情熄灭，Obsidian 社区已经积累了 2000 余个插件，绝大部分插件没有提供 i18n 框架，现在没有，未来也不会有。&lt;/p&gt;
&lt;p&gt;当然“典型的程序员”这个时候会说，插件是开源的，想翻译就自己去提 PR。但是这就给翻译人员提出了更高的要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有翻译插件的热情&lt;/li&gt;
&lt;li&gt;能完成翻译工作&lt;/li&gt;
&lt;li&gt;具备一定的代码能力，会使用 GitHub 的 PR 协作功能&lt;/li&gt;
&lt;li&gt;插件原作者愿意审查的代码（不少几年不更新的插件，堆积着很多 issue，恐怕作者连账号都没有登录过）&lt;/li&gt;
&lt;li&gt;每次更新译文，都要重复步骤 1-4&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过分析，可以说在这样的困境下，除了处于生态位头部的插件，其他插件只能随缘地获得国际化支持。&lt;/p&gt;
&lt;p&gt;我也给官方提了建议——&lt;em&gt;官方提供接口，要求所有 UI 文本都采用统一方式来渲染，或者要求插件作者必须引入 i18n 框架&lt;/em&gt;，同样的建议我也在网上看到别人提过 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn6&quot; id=&quot;fnref6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt; ，但是 joethei 给出的回复是&lt;em&gt;他们可能会提供一些辅助函数，但是不会强制要求&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;可以说期待官方在国际化上有所作为是彻底落空了。当然我并非在此指责 Obsidian 官方，我完全能理解他们的选择，Obsidian 的商业方式注定他们只能采用小团队规模，因此国际化这种优先级更低的工作被搁置是很正常的。&lt;/p&gt;
&lt;p&gt;因为翻译插件和二次开发插件不同，翻译的插件作者署名依然是原作者，因此我们也担心会有人因为 i18n 翻译导致插件出错而去插件项目下报错，我们在插件运行前的用户协议中进行了严肃声明。即便如此，当我在 discord 发起了那场讨论后，tasks 插件的作者还是跑到插件项目地址下要求删除他的插件的译文 &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;https://blog.qudange.top/#fn7&quot; id=&quot;fnref7&quot;&gt;[7]&lt;/a&gt;&lt;/sup&gt;。这个事让我挺无语的，不过最后的发展还是好的，如果想吃瓜的可以去看原贴，此处就不再赘述。&lt;/p&gt;
&lt;h2 id=&quot;插件翻译的难点&quot; tabindex=&quot;-1&quot;&gt;插件翻译的难点&lt;/h2&gt;
&lt;p&gt;因为插件的 UI 文本不像一本小说有着清晰足够的上下文，加上插件作者的表达能力参差不齐，很多时候只有一个深入使用过此插件的用户才能做出足够好的翻译，因此我们希望通过互通有无来让大家都能用上优质的翻译，刚开始的时候为了快速填充云端词典，我制作了不少粗劣的机翻词典，但是随着大家的加入，词典的质量也越来越好。最后我也能用上别人分享的优质词典，这也是开源社区的魅力。&lt;/p&gt;
&lt;h2 id=&quot;云端词库建立的难点&quot; tabindex=&quot;-1&quot;&gt;云端词库建立的难点&lt;/h2&gt;
&lt;p&gt;为了确保云端词库是社区持有，如果未来开发者弃坑也能继续发展，我俩决定用 GitHub 作为存储库，但在云端词库的审核机制上，我们纠结了很久。&lt;/p&gt;
&lt;p&gt;有两种方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由管理员审核，每个插件的每个版本只保留一份，以确保词典的质量&lt;/li&gt;
&lt;li&gt;所有人都可以自由上传，通过用户的评分来对词典进行排名&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方案&lt;/th&gt;
&lt;th&gt;优点&lt;/th&gt;
&lt;th&gt;缺点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;管理员审核&lt;/td&gt;
&lt;td&gt;开箱即用，新手友好&lt;/td&gt;
&lt;td&gt;审核过程质量无法控制；未来社区枯竭后，云端难以为继&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自由上传&lt;/td&gt;
&lt;td&gt;无需审核降低人工成本；未来可持续&lt;/td&gt;
&lt;td&gt;可能存在大量无效、低质量词典，用户体验差&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我俩讨论了很多，最后还是想尽可能的照顾新手的体验，如果采用自由上传的方式，恐怕会让新手很晕。而后面我审核的时候拒绝了几百个无用词典的经历也证明了，如果开放自由上传，维护成本也不会小。&lt;/p&gt;
&lt;p&gt;目前采用 Gitee 作为云端词库，无法对单条翻译进行评论审核，同时用户发现某个翻译有改善空间也无法轻易提交建议，因此我曾经考虑过把云端词库的协作方式改为使用 crowdin 之类的 i18n 工具，都开始重构代码了，才发现存在一些系统性问题：crowdin 这类工具也是为了“优雅的翻译”而设计的，因此它们要求要有一个包含所有待译原文的词典，也就是说使用这类工具，不需要考虑“翻译的原文”从何而来，因为这本身就是软件作者应该提供的。而 Obsidian 插件根本没有这个东西，我们的原文都是译者逆向源代码找到的，而 crowdin 不提供上传原文的方法，只能项目管理员手动上传。这无法满足我们对审核权限划分的要求，因为如果每个人都能上传，就意味着每个人都要有管理员的权限，并且这个过程没有 api，还必须使用网页端。&lt;/p&gt;
&lt;p&gt;但这真的让我感到很遗憾，如果未来我能解决这个问题，我会考虑重构 i18n，依然采用 crowdin 的方案，因为这种方案能让任何能使用翻译软件的人就能参与到插件翻译中来。&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;const clearImmersiveTranslate = async () =&amp;gt; {
console.log(&#39;开始清理 Immersive Translate 相关数据...&#39;);

// 1. 清理 localStorage
const patterns = [
&#39;immersive&#39;,
&#39;translate&#39;,
&#39;userLanguage&#39;,
&#39;targetLanguage&#39;,
&#39;sourceLanguage&#39;,
&#39;neverTranslate&#39;,
&#39;alwaysTranslate&#39;,
&#39;translationService&#39;,
&#39;openai&#39;,
&#39;deepl&#39;,
&#39;google&#39;,
&#39;microsoft&#39;,
&#39;preferences&#39;,
&#39;config&#39;,
&#39;cache&#39;,
&#39;settings&#39;
];

const keysToRemove = Object.keys(localStorage).filter(key =&amp;gt;
patterns.some(pattern =&amp;gt; key.toLowerCase().includes(pattern.toLowerCase()))
);

console.log(&#39;找到需要清除的存储项：&#39;, keysToRemove);
keysToRemove.forEach(key =&amp;gt; {
localStorage.removeItem(key);
console.log(&#39;已清除 localStorage 项:&#39;, key);
});

// 2. 清理 window 对象上的配置
const windowKeysToDelete = Object.keys(window).filter(key =&amp;gt;
key.toLowerCase().includes(&#39;immersive&#39;) ||
key.toLowerCase().includes(&#39;translate&#39;)
);

windowKeysToDelete.forEach(key =&amp;gt; {
delete window[key];
console.log(&#39;已清除 window 属性:&#39;, key);
});

// 3. 清理 DOM 元素
const elementsToRemove = [
&#39;#immersive-translate-popup&#39;,
&#39;.imt-script&#39;,
&#39;[data-id*=&amp;quot;immersive-translate&amp;quot;]&#39;,
&#39;[class*=&amp;quot;immersive-translate&amp;quot;]&#39;,
&#39;[id*=&amp;quot;immersive-translate&amp;quot;]&#39;,
&#39;script[src*=&amp;quot;immersive-translate&amp;quot;]&#39;,
&#39;link[href*=&amp;quot;immersive-translate&amp;quot;]&#39;
];

elementsToRemove.forEach(selector =&amp;gt; {
document.querySelectorAll(selector).forEach(el =&amp;gt; {
el.remove();
console.log(&#39;已移除 DOM 元素:&#39;, selector);
});
});

// 4. 清理 IndexedDB（如果有）
try {
const databases = await window.indexedDB.databases();
const dbsToDelete = databases.filter(db =&amp;gt;
db.name &amp;amp;&amp;amp; (
db.name.includes(&#39;immersive&#39;) ||
db.name.includes(&#39;translate&#39;)
)
);

for (const db of dbsToDelete) {
if (db.name) {
window.indexedDB.deleteDatabase(db.name);
console.log(&#39;已删除数据库:&#39;, db.name);
}
}
} catch (error) {
console.log(&#39;清理 IndexedDB 时出错:&#39;, error);
}

// 5. 重置配置
window.immersiveTranslateConfig = {
pageRule: {
selectors: [&#39;.markdown-reading-view *&#39;],
excludeSelectors: [&#39;.markdown-reading-view .cm-inline-code&#39;]
},
analyticsConfig: {
enabled: false
},
translationService: &#39;google&#39;,
generalRule: {
autoShow: true,
alwaysShowIcons: true,
instantTranslate: true
},
translationTheme: &#39;none&#39;,
translationLanguagePattern: {
matches: [&#39;**/*&#39;]
}
};

console.log(&#39;已重置基本配置&#39;);

// 6. 重新加载翻译脚本
const script = document.createElement(&#39;script&#39;);script.classList.add(&#39;imt-script&#39;);script.async = true;
script.src = &#39;https://immersive-translate.owenyoung.com/immersive-translate.js&#39;;
script.onload = () =&amp;gt; {
console.log(&#39;翻译脚本重新加载成功&#39;);
};
script.onerror = (error) =&amp;gt; {
console.error(&#39;翻译脚本加载失败:&#39;, error);
};
document.body.appendChild(script);

console.log(&#39;清理完成，准备重新加载页面...&#39;);

// 7. 延迟重新加载页面
return new Promise(resolve =&amp;gt; {
setTimeout(() =&amp;gt; {
console.log(&#39;即将重新加载页面...&#39;);
resolve();
}, 1000);
});
};

// 执行清理
(async () =&amp;gt; {
try {
await clearImmersiveTranslate();
window.location.reload();
} catch (error) {
console.error(&#39;清理过程中出错:&#39;, error);
}
})();
&lt;/code&gt;&lt;/pre&gt;
&lt;hr class=&quot;footnotes-sep&quot; /&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
&lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;这是重新调出悬浮球的代码。 &lt;a href=&quot;https://blog.qudange.top/#fnref1&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn2&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;函数是不严谨的说法。 &lt;a href=&quot;https://blog.qudange.top/#fnref2&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn3&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://codebeautify.org/zlib-decompress-online&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Zlib Decompress Online to Zlib Decode Text&lt;/a&gt; &lt;a href=&quot;https://blog.qudange.top/#fnref3&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn4&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;joethei 负责插件审查和开发生态系统，据我观察，几乎所有插件都由他审核。 &lt;a href=&quot;https://blog.qudange.top/#fnref4&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn5&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;如果想查看此事的详细记录，可以查看 &lt;a href=&quot;https://github.com/0011000000110010/obsidian-i18n/discussions/19&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;关于这个插件无法上架的解释以及与官方人员的讨论记录obsidian-i18n · Discussion &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#19&quot;&gt;#19&lt;/a&gt;&lt;/a&gt; &lt;a href=&quot;https://blog.qudange.top/#fnref5&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn6&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://forum.obsidian.md/t/allow-users-to-translate-plugins/84437/1&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;允许用户翻译插件 - 功能存档 - Obsidian Forum --- Allow users to translate plugins - Feature archive - Obsidian Forum&lt;/a&gt; &lt;a href=&quot;https://blog.qudange.top/#fnref6&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn7&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/0011000000110010/obsidian-i18n/issues/18&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Remove all translations for obsidian-tasks-plugin - 删除所有 obsidian-tasks-plugin 的翻译文件。 · Issue &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#18&quot;&gt;#18&lt;/a&gt;&lt;/a&gt; &lt;a href=&quot;https://blog.qudange.top/#fnref7&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Obsidian插件测评/Obsidian插件测评-i18n-汉化插件、翻译词典编辑器、云端共享词典、内置沉浸式翻译/" //>
        </entry>
        <entry>
            <title>
                Obsidian插件测评-BetterPluginsManager-插件分组、标签管理，插件备注，延迟启动
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/Obsidian插件测评/Obsidian插件测评-BetterPluginsManager-插件分组、标签管理，插件备注，延迟启动/</id>
            <content type="html">
                &lt;h1 id=&quot;插件简介&quot; tabindex=&quot;-1&quot;&gt;插件简介&lt;/h1&gt;
&lt;p&gt;Better Plugins Manager (BPM)是一款 Obsidian 插件管理工具，功能包括：插件分组、标签管理、备注和延迟启动，提升插件管理效率和用户体验。&lt;/p&gt;
&lt;h2 id=&quot;使用示例&quot; tabindex=&quot;-1&quot;&gt;使用示例&lt;/h2&gt;
&lt;h3 id=&quot;and-amp&quot; tabindex=&quot;-1&quot;&gt;插件分组&amp;amp;延迟启动&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109111415.png&quot; alt=&quot;assets/Pasted image 20250109111415.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;标签管理&quot; tabindex=&quot;-1&quot;&gt;标签管理&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109111841.png&quot; alt=&quot;assets/Pasted image 20250109111841.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;插件备注&quot; tabindex=&quot;-1&quot;&gt;插件备注&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109112029.png&quot; alt=&quot;assets/Pasted image 20250109112029.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目情况&quot; tabindex=&quot;-1&quot;&gt;项目情况&lt;/h2&gt;
&lt;p&gt;是否上架官方市场：✅️&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/0011000000110010/obsidian-manager&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;项目地址链接&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用教程&quot; tabindex=&quot;-1&quot;&gt;使用教程&lt;/h1&gt;
&lt;p&gt;在OB插件市场中搜索安装，然后点击OB左侧的 &lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109113033.png&quot; alt=&quot;assets/Pasted image 20250109113033.png&quot; /&gt; 图标即可启动管理页面。&lt;/p&gt;
&lt;p&gt;在管理页面里可以完成以下工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置分组&lt;/li&gt;
&lt;li&gt;分配标签&lt;/li&gt;
&lt;li&gt;自定义插件名称与描述&lt;/li&gt;
&lt;li&gt;设置插件的启动延迟时间&lt;/li&gt;
&lt;li&gt;筛选插件：支持按分组、标签、名称筛选&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;管理页面各部件使用说明请参照下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/betterpluginmanager%E5%9B%BE%E8%A7%A3.png&quot; alt=&quot;assets/betterpluginmanager图解.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;因为插件的操作逻辑很简单，没必要再把图中的说明复述一遍，不过我要强调几个重点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首次使用此插件时，建议复制当前库，以便在副本中测试插件功能，确保无误后再在主力库中启用（或者说首次使用任何插件时，都推荐这样做）&lt;/li&gt;
&lt;li&gt;使用本插件管理 Obsidian 插件后，请避免使用 Obsidian 自带的插件管理器开关插件，以免引发未知错误&lt;/li&gt;
&lt;li&gt;一键开关功能仅针对当前视图中的插件生效。通过分组或标签筛选，可以批量开关特定插件（也就是说如果你没有开启任何筛选功能的话，一键开关插件就是把你的OB中的所有插件一键开关，&lt;strong&gt;目前0.0.4版本的插件描述有误，请以本文为准&lt;/strong&gt;）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果需要调整分组、标签和延迟，则需要前往BPM的设置页面中添加。（可选）点击取色工具来自定义元素的颜色，然后输入id（推荐使用纯英文）和名称，点击加号即可添加。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;添加分组：&lt;br /&gt;
&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109132739.png&quot; alt=&quot;assets/Pasted image 20250109132739.png&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加标签：&lt;br /&gt;
&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109132811.png&quot; alt=&quot;assets/Pasted image 20250109132811.png&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加延迟：&lt;br /&gt;
&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/Obsidian/assets/Pasted%20image%2020250109132831.png&quot; alt=&quot;assets/Pasted image 20250109132831.png&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;闲谈&quot; tabindex=&quot;-1&quot;&gt;闲谈&lt;/h1&gt;
&lt;p&gt;有一段时间我一直想优化我的Obsidian启动速度，一个常用的方案就是让一部分插件在Obsidian启动后再启动。于是我尝试了很多方案，一开始我使用templater脚本来实现插件延迟启动，但是这种方案依赖于代码，不方便随时修改，然后我使用了 &lt;a href=&quot;https://github.com/Mocca101/obsidian-plugin-groups&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;PluginGroups&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/alangrainger/obsidian-lazy-plugins&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;LazyPlugins&lt;/a&gt;，前者已经停更两年，并且分组操作窗口小而不直观，后者专注于插件的延迟启动，但在我使用的时候有奇怪的bug。&lt;/p&gt;
&lt;p&gt;直到我朋友02开发了这款插件，几乎能满足我的所有需求。直观的插件分类管理，可视化的操作，多组别延迟启动。因此我想把它推荐给你们。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Obsidian插件测评/Obsidian插件测评-BetterPluginsManager-插件分组、标签管理，插件备注，延迟启动/" //>
        </entry>
        <entry>
            <title>
                Obsidian技巧之用maoxian插件剪藏网络文章，同时把图片下载到本地
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/Obsidian技巧之用maoxian插件剪藏网络文章，同时把图片下载到本地/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;今天在学习隐写术的时候看到一篇挺有价值的文章，本来想用 ob 官方的剪藏工具保存下来，但是发现官方工具到现在还不能把网络图片下载下来，这对于剪藏防丢失这个目的来说，这种级别就是不可用的，于是还是换工具了，调研了一下，发现 maoxian 可能是最适合我的。&lt;/p&gt;
&lt;p&gt;maoxian 的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在浏览器环境下下载图片，可以使用浏览器的代理、cookie 等环境信息，做到所见即可得&lt;/li&gt;
&lt;li&gt;开源&lt;/li&gt;
&lt;li&gt;文件保存的名称、内容格式、路径高度可自定义&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;maoxian-web-clipper&quot; tabindex=&quot;-1&quot;&gt;maoxian web clipper 配置过程记录&lt;/h1&gt;
&lt;p&gt;Obsidian 库： &lt;code&gt;C:&#92;Users&#92;62300&#92;Documents&#92;livesync&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;网摘入口：&lt;code&gt;C:&#92;Users&#92;62300&#92;Documents&#92;livesync&#92;201-文章摘录&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;浏览器默认下载地址：&lt;code&gt;C:&#92;Users&#92;62300&#92;Downloads&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;maoxian 根目录：&lt;code&gt;maoxian摘录&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;你需要根据电脑的用户名、obsidian 库名称、剪藏存放的文件夹来替换部分内容。&lt;/p&gt;
&lt;p&gt;创建软链接（路径有中文就必须要有引号）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mklink /D &amp;quot;C:&#92;Users&#92;62300&#92;Downloads&#92;maoxian摘录&amp;quot; &amp;quot;C:&#92;Users&#92;62300&#92;Documents&#92;livesync&#92;201-文章摘录&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;调整 maoxian 的设置，由于内容过多，我直接把我的配置文件贴在文章末尾，详见 &lt;a class=&quot;internal-link&quot; target=&quot;&quot; data-note-icon=&quot;&quot; href=&quot;https://blog.qudange.top/Obsidian/Obsidian%E6%8A%80%E5%B7%A7%E4%B9%8B%E7%94%A8maoxian%E6%8F%92%E4%BB%B6%E5%89%AA%E8%97%8F%E7%BD%91%E7%BB%9C%E6%96%87%E7%AB%A0%EF%BC%8C%E5%90%8C%E6%97%B6%E6%8A%8A%E5%9B%BE%E7%89%87%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/#maoxian&quot;&gt;Obsidian技巧之用maoxian插件剪藏网络文章，同时把图片下载到本地#我的maoxian配置文件&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;maoxian&quot; tabindex=&quot;-1&quot;&gt;我的 maoxian 配置文件&lt;/h1&gt;
&lt;p&gt;使用方法：保存为 json 文件后到 maoxian 的备份中导入&lt;/p&gt;
&lt;p&gt;[fold]&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;data&amp;quot;: {
    &amp;quot;assistant.default-tag-status&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;assistant.public-plan.default.20240502&amp;quot;: [
      {
        &amp;quot;actions&amp;quot;: [
          {
            &amp;quot;hide&amp;quot;: [
              &amp;quot;div#toc&amp;quot;,
              &amp;quot;table.infobox&amp;quot;,
              &amp;quot;span.mw-editsection&amp;quot;,
              &amp;quot;table.navbox&amp;quot;,
              &amp;quot;div.thumb&amp;quot;,
              &amp;quot;div.dablink&amp;quot;,
              &amp;quot;table.metadata&amp;quot;
            ]
          },
          {
            &amp;quot;pick&amp;quot;: &amp;quot;div.mw-parser-output&amp;quot;
          }
        ],
        &amp;quot;excludePattern&amp;quot;: &amp;quot;https://*.m.wikipedia.org/*/&amp;quot;,
        &amp;quot;name&amp;quot;: &amp;quot;wikipedia.org&amp;quot;,
        &amp;quot;pattern&amp;quot;: &amp;quot;https://*.wikipedia.org/wiki/*&amp;quot;,
        &amp;quot;tags&amp;quot;: [
          &amp;quot;knowledge&amp;quot;,
          &amp;quot;wiki&amp;quot;
        ],
        &amp;quot;version&amp;quot;: 20240502
      },
      {
        &amp;quot;actions&amp;quot;: [
          {
            &amp;quot;hide&amp;quot;: [
              &amp;quot;.page-actions-menu&amp;quot;,
              &amp;quot;#toc&amp;quot;,
              &amp;quot;.mw-editsection&amp;quot;,
              &amp;quot;h2 &amp;gt; div.mw-ui-icon&amp;quot;,
              &amp;quot;table.box-Unreferenced&amp;quot;,
              &amp;quot;table.box-More_citations_needed&amp;quot;
            ]
          },
          {
            &amp;quot;chAttr&amp;quot;: {
              &amp;quot;attr&amp;quot;: &amp;quot;style&amp;quot;,
              &amp;quot;pick&amp;quot;: &amp;quot;h2.section-heading&amp;quot;,
              &amp;quot;sep&amp;quot;: &amp;quot;;&amp;quot;,
              &amp;quot;type&amp;quot;: &amp;quot;split2list.add&amp;quot;,
              &amp;quot;value&amp;quot;: &amp;quot;width: 100%&amp;quot;
            }
          }
        ],
        &amp;quot;contributors&amp;quot;: [
          &amp;quot;Altair Wei (author)&amp;quot;
        ],
        &amp;quot;name&amp;quot;: &amp;quot;Wikipedia Mobile View&amp;quot;,
        &amp;quot;pattern&amp;quot;: &amp;quot;https://*.m.wikipedia.org/*/&amp;quot;,
        &amp;quot;tags&amp;quot;: [
          &amp;quot;knowledge&amp;quot;,
          &amp;quot;wiki&amp;quot;
        ],
        &amp;quot;version&amp;quot;: 20240502
      },
      {
        &amp;quot;actions&amp;quot;: [
          {
            &amp;quot;hide&amp;quot;: [
              &amp;quot;.avatar&amp;quot;,
              &amp;quot;.avatar-parent-child&amp;quot;,
              &amp;quot;.inline-comment-form-actions&amp;quot;,
              &amp;quot;.flex-items-center.d-sm-flex.d-none&amp;quot;,
              &amp;quot;.d-inline-block&amp;quot;
            ]
          },
          {
            &amp;quot;pick&amp;quot;: [
              &amp;quot;.js-discussion&amp;quot;,
              &amp;quot;.markdown-body&amp;quot;
            ]
          }
        ],
        &amp;quot;contributors&amp;quot;: [
          &amp;quot;yzqzss (author)&amp;quot;
        ],
        &amp;quot;name&amp;quot;: &amp;quot;Github&amp;quot;,
        &amp;quot;pattern&amp;quot;: &amp;quot;https://github.com/&amp;quot;,
        &amp;quot;tags&amp;quot;: [
          &amp;quot;IT&amp;quot;,
          &amp;quot;geek&amp;quot;,
          &amp;quot;git&amp;quot;
        ],
        &amp;quot;version&amp;quot;: 20240502
      },
      {
        &amp;quot;actions&amp;quot;: [
          {
            &amp;quot;pick&amp;quot;: &amp;quot;#bodyContent&amp;quot;
          }
        ],
        &amp;quot;contributors&amp;quot;: [
          &amp;quot;Mika&amp;quot;
        ],
        &amp;quot;name&amp;quot;: &amp;quot;ArchWiki&amp;quot;,
        &amp;quot;pattern&amp;quot;: &amp;quot;https://wiki.archlinux.org/title/*&amp;quot;,
        &amp;quot;tags&amp;quot;: [
          &amp;quot;IT&amp;quot;,
          &amp;quot;wiki&amp;quot;,
          &amp;quot;doc&amp;quot;
        ],
        &amp;quot;version&amp;quot;: 20240502
      }
    ],
    &amp;quot;assistant.public-plan.default.latest&amp;quot;: &amp;quot;assistant.public-plan.default.20240502&amp;quot;,
    &amp;quot;assistant.public-plan.default.text&amp;quot;: &amp;quot;[&#92;n  {&#92;n    &#92;&amp;quot;name&#92;&amp;quot;: &#92;&amp;quot;wikipedia.org&#92;&amp;quot;,&#92;n    &#92;&amp;quot;pattern&#92;&amp;quot;: &#92;&amp;quot;https://*.wikipedia.org/wiki/*&#92;&amp;quot;,&#92;n    &#92;&amp;quot;excludePattern&#92;&amp;quot;: &#92;&amp;quot;https://*.m.wikipedia.org/*/&#92;&amp;quot;,&#92;n    &#92;&amp;quot;version&#92;&amp;quot;: 20240502,&#92;n    &#92;&amp;quot;actions&#92;&amp;quot;: [&#92;n      {&#92;n        &#92;&amp;quot;hide&#92;&amp;quot;: [&#92;n          &#92;&amp;quot;div#toc&#92;&amp;quot;,&#92;n          &#92;&amp;quot;table.infobox&#92;&amp;quot;,&#92;n          &#92;&amp;quot;span.mw-editsection&#92;&amp;quot;,&#92;n          &#92;&amp;quot;table.navbox&#92;&amp;quot;,&#92;n          &#92;&amp;quot;div.thumb&#92;&amp;quot;,&#92;n          &#92;&amp;quot;div.dablink&#92;&amp;quot;,&#92;n          &#92;&amp;quot;table.metadata&#92;&amp;quot;&#92;n        ]&#92;n      },&#92;n      {&#92;n        &#92;&amp;quot;pick&#92;&amp;quot;: &#92;&amp;quot;div.mw-parser-output&#92;&amp;quot;&#92;n      }&#92;n    ],&#92;n    &#92;&amp;quot;tags&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;knowledge&#92;&amp;quot;,&#92;n      &#92;&amp;quot;wiki&#92;&amp;quot;&#92;n    ]&#92;n  },&#92;n  {&#92;n    &#92;&amp;quot;name&#92;&amp;quot;: &#92;&amp;quot;Wikipedia Mobile View&#92;&amp;quot;,&#92;n    &#92;&amp;quot;pattern&#92;&amp;quot;: &#92;&amp;quot;https://*.m.wikipedia.org/*/&#92;&amp;quot;,&#92;n    &#92;&amp;quot;version&#92;&amp;quot;: 20240502,&#92;n    &#92;&amp;quot;actions&#92;&amp;quot;: [&#92;n      {&#92;n        &#92;&amp;quot;hide&#92;&amp;quot;: [&#92;n          &#92;&amp;quot;.page-actions-menu&#92;&amp;quot;,&#92;n          &#92;&amp;quot;#toc&#92;&amp;quot;,&#92;n          &#92;&amp;quot;.mw-editsection&#92;&amp;quot;,&#92;n          &#92;&amp;quot;h2 &amp;gt; div.mw-ui-icon&#92;&amp;quot;,&#92;n          &#92;&amp;quot;table.box-Unreferenced&#92;&amp;quot;,&#92;n          &#92;&amp;quot;table.box-More_citations_needed&#92;&amp;quot;&#92;n        ]&#92;n      },&#92;n      {&#92;n        &#92;&amp;quot;chAttr&#92;&amp;quot;: {&#92;n          &#92;&amp;quot;type&#92;&amp;quot;: &#92;&amp;quot;split2list.add&#92;&amp;quot;,&#92;n          &#92;&amp;quot;pick&#92;&amp;quot;: &#92;&amp;quot;h2.section-heading&#92;&amp;quot;,&#92;n          &#92;&amp;quot;attr&#92;&amp;quot;: &#92;&amp;quot;style&#92;&amp;quot;,&#92;n          &#92;&amp;quot;value&#92;&amp;quot;: &#92;&amp;quot;width: 100%&#92;&amp;quot;,&#92;n          &#92;&amp;quot;sep&#92;&amp;quot;: &#92;&amp;quot;;&#92;&amp;quot;&#92;n        }&#92;n      }&#92;n    ],&#92;n    &#92;&amp;quot;tags&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;knowledge&#92;&amp;quot;,&#92;n      &#92;&amp;quot;wiki&#92;&amp;quot;&#92;n    ],&#92;n    &#92;&amp;quot;contributors&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;Altair Wei (author)&#92;&amp;quot;&#92;n    ]&#92;n  },&#92;n  {&#92;n    &#92;&amp;quot;name&#92;&amp;quot;: &#92;&amp;quot;Github&#92;&amp;quot;,&#92;n    &#92;&amp;quot;pattern&#92;&amp;quot;: &#92;&amp;quot;https://github.com/&#92;&amp;quot;,&#92;n    &#92;&amp;quot;version&#92;&amp;quot;: 20240502,&#92;n    &#92;&amp;quot;actions&#92;&amp;quot;: [&#92;n      {&#92;n        &#92;&amp;quot;hide&#92;&amp;quot;: [&#92;n          &#92;&amp;quot;.avatar&#92;&amp;quot;,&#92;n          &#92;&amp;quot;.avatar-parent-child&#92;&amp;quot;,&#92;n          &#92;&amp;quot;.inline-comment-form-actions&#92;&amp;quot;,&#92;n          &#92;&amp;quot;.flex-items-center.d-sm-flex.d-none&#92;&amp;quot;,&#92;n          &#92;&amp;quot;.d-inline-block&#92;&amp;quot;&#92;n        ]&#92;n      },&#92;n      {&#92;n        &#92;&amp;quot;pick&#92;&amp;quot;: [&#92;n          &#92;&amp;quot;.js-discussion&#92;&amp;quot;,&#92;n          &#92;&amp;quot;.markdown-body&#92;&amp;quot;&#92;n        ]&#92;n      }&#92;n    ],&#92;n    &#92;&amp;quot;tags&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;IT&#92;&amp;quot;,&#92;n      &#92;&amp;quot;geek&#92;&amp;quot;,&#92;n      &#92;&amp;quot;git&#92;&amp;quot;&#92;n    ],&#92;n    &#92;&amp;quot;contributors&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;yzqzss (author)&#92;&amp;quot;&#92;n    ]&#92;n  },&#92;n  {&#92;n    &#92;&amp;quot;name&#92;&amp;quot;: &#92;&amp;quot;ArchWiki&#92;&amp;quot;,&#92;n    &#92;&amp;quot;pattern&#92;&amp;quot;: &#92;&amp;quot;https://wiki.archlinux.org/title/*&#92;&amp;quot;,&#92;n    &#92;&amp;quot;version&#92;&amp;quot;: 20240502,&#92;n    &#92;&amp;quot;actions&#92;&amp;quot;: [&#92;n      {&#92;n        &#92;&amp;quot;pick&#92;&amp;quot;: &#92;&amp;quot;#bodyContent&#92;&amp;quot;&#92;n      }&#92;n    ],&#92;n    &#92;&amp;quot;tags&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;IT&#92;&amp;quot;,&#92;n      &#92;&amp;quot;wiki&#92;&amp;quot;,&#92;n      &#92;&amp;quot;doc&#92;&amp;quot;&#92;n    ],&#92;n    &#92;&amp;quot;contributors&#92;&amp;quot;: [&#92;n      &#92;&amp;quot;Mika&#92;&amp;quot;&#92;n    ]&#92;n  }&#92;n]&amp;quot;,
    &amp;quot;assistant.public-plan.pointers&amp;quot;: [
      &amp;quot;assistant.public-plan.default.20240502&amp;quot;
    ],
    &amp;quot;assistant.public-plan.subscription-urls&amp;quot;: [
      &amp;quot;https://mika-cn.github.io/maoxian-web-clipper/assistant/plans/default/index.json&amp;quot;
    ],
    &amp;quot;assistant.public-plan.subscriptions&amp;quot;: [
      {
        &amp;quot;description&amp;quot;: &amp;quot;Default channel hosts plans that relative to international websites&amp;quot;,
        &amp;quot;latestVersion&amp;quot;: 20240502,
        &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
        &amp;quot;size&amp;quot;: 4,
        &amp;quot;updateUrl&amp;quot;: &amp;quot;https://mika-cn.github.io/maoxian-web-clipper/assistant/plans/default/20240502.json&amp;quot;,
        &amp;quot;url&amp;quot;: &amp;quot;https://mika-cn.github.io/maoxian-web-clipper/assistant/plans/default/index.json&amp;quot;
      }
    ],
    &amp;quot;config&amp;quot;: {
      &amp;quot;allowFileSchemeAccess&amp;quot;: true,
      &amp;quot;assetFileName&amp;quot;: &amp;quot;$TIME-INTSEC-$MD5URL$EXT&amp;quot;,
      &amp;quot;assetFolder&amp;quot;: &amp;quot;$ROOT-FOLDER/assets&amp;quot;,
      &amp;quot;assistantEnabled&amp;quot;: false,
      &amp;quot;autoInputLastCategory&amp;quot;: true,
      &amp;quot;autoInputLastTags&amp;quot;: true,
      &amp;quot;autoRefreshHistory&amp;quot;: false,
      &amp;quot;autoRunContentScripts&amp;quot;: false,
      &amp;quot;autoUpdatePublicPlan&amp;quot;: false,
      &amp;quot;autogenerateClippingJs&amp;quot;: false,
      &amp;quot;backupAssistantData&amp;quot;: true,
      &amp;quot;backupHistoryPageConfig&amp;quot;: true,
      &amp;quot;backupSelectionData&amp;quot;: true,
      &amp;quot;backupSettingPageConfig&amp;quot;: true,
      &amp;quot;clippingFolderName&amp;quot;: &amp;quot;$YYYY-$MM-$DD-$TIME-INTSEC&amp;quot;,
      &amp;quot;clippingHandler&amp;quot;: &amp;quot;Browser&amp;quot;,
      &amp;quot;clippingJsPath&amp;quot;: &amp;quot;$STORAGE-PATH/history/clippings.js&amp;quot;,
      &amp;quot;communicateWithThirdParty&amp;quot;: false,
      &amp;quot;defaultCategory&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;frameFileFolder&amp;quot;: &amp;quot;$ROOT-FOLDER/frames&amp;quot;,
      &amp;quot;frameFileName&amp;quot;: &amp;quot;$TIME-INTSEC-$MD5URL.frame.html&amp;quot;,
      &amp;quot;handlerBrowserEnabled&amp;quot;: true,
      &amp;quot;handlerNativeAppEnabled&amp;quot;: false,
      &amp;quot;handlerWizNotePlusEnabled&amp;quot;: false,
      &amp;quot;htmlCaptureApplet&amp;quot;: &amp;quot;remove&amp;quot;,
      &amp;quot;htmlCaptureAudio&amp;quot;: &amp;quot;remove&amp;quot;,
      &amp;quot;htmlCaptureCssImage&amp;quot;: &amp;quot;remove&amp;quot;,
      &amp;quot;htmlCaptureCssRules&amp;quot;: &amp;quot;saveUsed&amp;quot;,
      &amp;quot;htmlCaptureEmbed&amp;quot;: &amp;quot;saveImage&amp;quot;,
      &amp;quot;htmlCaptureIcon&amp;quot;: &amp;quot;remove&amp;quot;,
      &amp;quot;htmlCaptureImage&amp;quot;: &amp;quot;saveAll&amp;quot;,
      &amp;quot;htmlCaptureObject&amp;quot;: &amp;quot;saveImage&amp;quot;,
      &amp;quot;htmlCaptureVideo&amp;quot;: &amp;quot;remove&amp;quot;,
      &amp;quot;htmlCaptureWebFont&amp;quot;: &amp;quot;remove&amp;quot;,
      &amp;quot;htmlCompressCss&amp;quot;: false,
      &amp;quot;htmlCustomBodyBgCssEnabled&amp;quot;: false,
      &amp;quot;htmlCustomBodyBgCssValue&amp;quot;: &amp;quot;#000000&amp;quot;,
      &amp;quot;htmlEmbedFilter&amp;quot;: &amp;quot;&amp;lt;images&amp;gt;&amp;quot;,
      &amp;quot;htmlObjectFilter&amp;quot;: &amp;quot;&amp;lt;images&amp;gt;&amp;quot;,
      &amp;quot;htmlSaveClippingInformation&amp;quot;: false,
      &amp;quot;htmlWebFontFilterList&amp;quot;: &amp;quot;woff2|woff|otf|ttf&amp;quot;,
      &amp;quot;infoFileFolder&amp;quot;: &amp;quot;$CLIPPING-PATH&amp;quot;,
      &amp;quot;infoFileName&amp;quot;: &amp;quot;index.json&amp;quot;,
      &amp;quot;mainFileFolder&amp;quot;: &amp;quot;$ROOT-FOLDER&amp;quot;,
      &amp;quot;mainFileName&amp;quot;: &amp;quot;$TITLE.$FORMAT&amp;quot;,
      &amp;quot;markdownOptionBulletListMarker&amp;quot;: &amp;quot;-&amp;quot;,
      &amp;quot;markdownOptionCodeBlockStyle&amp;quot;: &amp;quot;fenced&amp;quot;,
      &amp;quot;markdownOptionEmDelimiter&amp;quot;: &amp;quot;*&amp;quot;,
      &amp;quot;markdownOptionFence&amp;quot;: &amp;quot;```&amp;quot;,
      &amp;quot;markdownOptionFormulaBlockWrapper&amp;quot;: &amp;quot;padSameLine&amp;quot;,
      &amp;quot;markdownOptionHeadingStyle&amp;quot;: &amp;quot;atx&amp;quot;,
      &amp;quot;markdownOptionHr&amp;quot;: &amp;quot;- - -&amp;quot;,
      &amp;quot;markdownOptionLinkReferenceStyle&amp;quot;: &amp;quot;full&amp;quot;,
      &amp;quot;markdownOptionLinkStyle&amp;quot;: &amp;quot;inlined&amp;quot;,
      &amp;quot;markdownOptionPreformattedCode&amp;quot;: false,
      &amp;quot;markdownOptionStrongDelimiter&amp;quot;: &amp;quot;**&amp;quot;,
      &amp;quot;markdownTemplate&amp;quot;: &amp;quot;&#92;n{{content}}&#92;n&amp;quot;,
      &amp;quot;mouseModeEnabled&amp;quot;: true,
      &amp;quot;offlinePageHandler&amp;quot;: &amp;quot;Browser&amp;quot;,
      &amp;quot;refreshHistoryHandler&amp;quot;: &amp;quot;NativeApp&amp;quot;,
      &amp;quot;rememberSelection&amp;quot;: false,
      &amp;quot;requestCache&amp;quot;: &amp;quot;default&amp;quot;,
      &amp;quot;requestCacheCss&amp;quot;: true,
      &amp;quot;requestCacheImage&amp;quot;: true,
      &amp;quot;requestCacheWebFont&amp;quot;: false,
      &amp;quot;requestCredentials&amp;quot;: &amp;quot;same-origin&amp;quot;,
      &amp;quot;requestMaxTries&amp;quot;: 3,
      &amp;quot;requestReferrerPolicy&amp;quot;: &amp;quot;strict-origin-when-cross-origin&amp;quot;,
      &amp;quot;requestTimeout&amp;quot;: 300,
      &amp;quot;rootFolder&amp;quot;: &amp;quot;maoxian摘录&amp;quot;,
      &amp;quot;saveDomainAsTag&amp;quot;: false,
      &amp;quot;saveFormat&amp;quot;: &amp;quot;md&amp;quot;,
      &amp;quot;saveInfoFile&amp;quot;: false,
      &amp;quot;saveTitleFile&amp;quot;: false,
      &amp;quot;selectSaveFormatOnMenus&amp;quot;: false,
      &amp;quot;shortcutSlot0&amp;quot;: &amp;quot;_openLastClipping&amp;quot;,
      &amp;quot;shortcutSlot1&amp;quot;: &amp;quot;_clipAsDefault&amp;quot;,
      &amp;quot;shortcutSlot2&amp;quot;: &amp;quot;_clipAsHTML&amp;quot;,
      &amp;quot;shortcutSlot3&amp;quot;: &amp;quot;_clipAsMarkdown&amp;quot;,
      &amp;quot;shortcutSlot4&amp;quot;: &amp;quot;_doNothing&amp;quot;,
      &amp;quot;shortcutSlot5&amp;quot;: &amp;quot;_doNothing&amp;quot;,
      &amp;quot;shortcutSlot6&amp;quot;: &amp;quot;_doNothing&amp;quot;,
      &amp;quot;shortcutSlot7&amp;quot;: &amp;quot;_doNothing&amp;quot;,
      &amp;quot;shortcutSlot8&amp;quot;: &amp;quot;_doNothing&amp;quot;,
      &amp;quot;shortcutSlot9&amp;quot;: &amp;quot;_doNothing&amp;quot;,
      &amp;quot;titleFileFolder&amp;quot;: &amp;quot;$CLIPPING-PATH&amp;quot;,
      &amp;quot;titleFileName&amp;quot;: &amp;quot;a-title_$TITLE&amp;quot;,
      &amp;quot;userCommandsText&amp;quot;: &amp;quot;{&#92;n  &#92;&amp;quot;doNothing&#92;&amp;quot;: {&#92;&amp;quot;exec&#92;&amp;quot;: &#92;&amp;quot;doNothing&#92;&amp;quot;}&#92;n}&amp;quot;,
      &amp;quot;version&amp;quot;: &amp;quot;2.16&amp;quot;
    },
    &amp;quot;history.page.cache.enableAdvancedSearchMode&amp;quot;: false,
    &amp;quot;history.page.cache.enableConfirmMode&amp;quot;: true,
    &amp;quot;history.page.cache.localstorage.migrated&amp;quot;: true,
    &amp;quot;history.page.cache.search.keyword&amp;quot;: &amp;quot;&amp;quot;
  },
  &amp;quot;backupAt&amp;quot;: &amp;quot;2024-12-17 16:25:24&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Obsidian技巧之用maoxian插件剪藏网络文章，同时把图片下载到本地/" //>
        </entry>
        <entry>
            <title>
                Obsidian实现复制时自动上传图片到图床
                
            </title>
            <updated>2025-10-03T09:43:52Z</updated>
            <id>https://blog.qudange.top/Obsidian/Obsidian实现复制时自动上传图片到图床/</id>
            <content type="html">
                &lt;h1 id=&quot;obsidian&quot; tabindex=&quot;-1&quot;&gt;Obsidian 实现复制时自动上传图片到图床&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://forum-zh.obsidian.md/t/topic/34059/8&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;【QuickAdd脚本】带图复制-自动上传图片到图床 - 经验分享 - Obsidian 中文论坛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我新开一个库可以用，但是在主力库里就不行，报错为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/105-%E6%9E%81%E5%AE%A2/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7/assets/Pasted%20image%2020240808164552.png&quot; alt=&quot;assets/Pasted image 20240808164552.png&quot; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;QuickAdd: (ERROR) failed to run user script 带
图复制.Error:
The “path&amp;quot; argument must be of type string.
Received undlefined
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个问题很奇怪，我在新开的空白 ob 库里没有遇见，但是在主力库就有这个问题。&lt;/p&gt;
&lt;p&gt;怎么排查问题？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尝试删除 js 脚本后再执行命令，看看是不是脚本的问题——删除后报错找不到脚本，看来不是这个问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后我想为什么空白库是对的，多半是插件或者设置的问题，然后我把脚本发给 kimi，kimi 分析到一个关键点，就是文件路径。&lt;/p&gt;
&lt;p&gt;于是我发现问题了：试用的时候发现一个问题：&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;内部链接类型&lt;/code&gt; 设置为 &lt;code&gt;基于当前笔记的相对路径&lt;/code&gt;，脚本会报错&lt;br /&gt;
&lt;code&gt;QuickAdd: (ERROR) failed to run user script 带图 复制.Error: The “path&amp;quot; argument must be of type string. Received undefined&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;采用绝对路径也会有同样问题。改为尽量短路径就正常了。&lt;/p&gt;
&lt;p&gt;用 chatgpt 修复这个 bug（还得是 chatgpt 哇），修复版的脚本为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;const path = require(&#39;path&#39;);
const quickAddApi = app.plugins.plugins.quickadd.api;
const { editor, file, containerEl } = app.workspace.activeEditor;
const url = &amp;quot;http://127.0.0.1:36677/upload&amp;quot;;

module.exports = async () =&amp;gt; {
  const files = app.vault.getFiles();
  let selection = &amp;quot;&amp;quot;;
  let content = &amp;quot;&amp;quot;;
  selection = editor.getSelection();
  console.log(&amp;quot;Selected text:&amp;quot;, selection);

  for (let line of selection.split(&amp;quot;&#92;n&amp;quot;)) {
    let embed = &amp;quot;&amp;quot;;
    if (line) {
      embed = matchSelectionEmbed(line);
    }
    console.log(&amp;quot;Matched embed:&amp;quot;, embed);

    if (embed &amp;amp;&amp;amp; /&#92;.(png|jpg|jpeg|gif|bmp)$/.test(embed)) {
      let wikiPath = getFilePath(files, embed); // 匹配Wiki链接
      if (!wikiPath) {
        new Notice(`❌无法找到文件: ${embed}`);
        console.log(`❌无法找到文件: ${embed}`);
        continue;
      }

      // 获取绝对路径
      const imgPath = app.vault.adapter.getFullPath(wikiPath);
      console.log(&amp;quot;Image path:&amp;quot;, imgPath);

      const data = await uploadFiles([imgPath], url);
      if (data.success) {
        const imgWiki = `![[${embed}]]`;
        const imgLink = `![${embed}](${data.result})`;
        line = line.replace(imgWiki, imgLink);
      } else {
        new Notice(`❌上传 ${path.basename(imgPath)} 图片失败`);
        console.log(`❌上传 ${path.basename(imgPath)} 图片失败`);
      }
    }
    content += line + &amp;quot;&#92;n&amp;quot;;
  }
  
  console.log(&amp;quot;Final content:&amp;quot;, content);
  copyToClipboard(content)
  new Notice(`✅复制成功`);
};

// 获取文件路径函数
function getFilePath(files, baseName) {
  let matchingFiles = files.filter(f =&amp;gt; {
    const fullPath = f.path;
    console.log(`Comparing ${fullPath} with ${baseName}`);
    return fullPath.endsWith(baseName);
  });
  
  if (matchingFiles.length === 0) {
    console.log(`No files matched for: ${baseName}`);
    return undefined;
  }

  return matchingFiles[0].path;
}

function matchSelectionEmbed(text) {
  const regex = /!&#92;[&#92;[?([^&#92;]]*?)(&#92;|.*)?&#92;]&#92;]?&#92;(?([^)&#92;n]*)&#92;)?/;
  const matches = text.match(regex);
  if (!matches) return;
  if (matches[3]) return decodeURIComponent(matches[3]);
  if (matches[1]) return decodeURIComponent(matches[1]);
}

async function uploadFiles(imagePathList, url) {
  const response = await requestUrl({
    url: url,
    method: &amp;quot;POST&amp;quot;,
    headers: { &amp;quot;Content-Type&amp;quot;: &amp;quot;application/json&amp;quot; },
    body: JSON.stringify({ list: imagePathList }),
  });
  const data = response.json; // 直接访问 `json` 属性，而不是调用 `json()` 方法
  return data;
};

function copyToClipboard(extrTexts) {
  const txtArea = document.createElement(&#39;textarea&#39;);
  txtArea.value = extrTexts;
  document.body.appendChild(txtArea);
  txtArea.select();
  if (document.execCommand(&#39;copy&#39;)) {
      console.log(&#39;copy to clipboard.&#39;);
  } else {
      console.log(&#39;fail to copy.&#39;);
  }
  document.body.removeChild(txtArea);
}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;使用方法&quot; tabindex=&quot;-1&quot;&gt;使用方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装插件 quickadd&lt;/li&gt;
&lt;li&gt;在 quickadd 中设置脚本存放目录 &lt;code&gt;Template Folder Path&lt;/code&gt;，然后在对应目录下新建 &lt;code&gt;带图复制.js&lt;/code&gt;，把代码粘贴进去&lt;/li&gt;
&lt;li&gt;新建一个宏，选择刚刚新建的脚本&lt;/li&gt;
&lt;li&gt;安装 piclist，配置好图床&lt;/li&gt;
&lt;li&gt;在 obsidian 中选中要分享的文本，其中需要包含要上传的图片，然后 ctrl+p 使用脚本&lt;/li&gt;
&lt;li&gt;粘贴即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;github&quot; tabindex=&quot;-1&quot;&gt;直接把图片上传到 github&lt;/h1&gt;
&lt;p&gt;用 github publisher 插件能把图片上传到 github，但是图片在文章中的格式是 &lt;code&gt;[[]]&lt;/code&gt; 的 wiki 链接，因此我们需要通过正则的方式来转换格式。&lt;/p&gt;
&lt;p&gt;参考这篇文章 &lt;a href=&quot;https://blog.csdn.net/shinigami2/article/details/128516807&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;obsidian图片链接转换成markdown语法，不关闭wiki链接_obsidian图片显示变成链接-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同时上面这个方法还可以解决这个问题：obsidian 粘贴进来的图片名字会自动带空格，如 &lt;code&gt;Pasted image 20240806221817.png&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最后发布后就能看到在 github 是可以正常查看图片了，但是为了同步到其他平台，可以批量的在图片路径前面加上 &lt;code&gt;https://github.com/dangehub/github2wp/blob/main/_posts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;方法也很简单，就是搜索 &lt;code&gt;assets/&lt;/code&gt;，然后替换为 &lt;code&gt;https://github.com/dangehub/github2wp/blob/main/_posts/assets/&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;但是为什么同步到 wordpress 的文章里图片没有了？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同步到 wp 的是 html 代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;https://github.com/dangehub/github2wp/blob/main/_posts/assets/Pasted%20image%2020240806214536.png&amp;quot; /&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;直接访问这个链接是对的，但是这段 html 代码不能正常工作。&lt;/p&gt;
&lt;p&gt;比如放到 obsidian 中：&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://github.com/dangehub/github2wp/blob/main/_posts/assets/Pasted%20image%2020240806214536.png&quot; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;上面的分隔线中就是这段 html 代码，无法显示图像。为什么？&lt;/p&gt;
&lt;p&gt;去调试台看了下，报错 &lt;code&gt;（失败）net::ERR_BLOCKED_BY_ORB&lt;/code&gt;，&lt;s&gt;这是跨域问题&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;但是都没人说 github 的图片会限制跨域，检查之后发现 &lt;code&gt;https://github.com/dangehub/github2wp/blob/b85405e3ef0c15a3caf57a038a545e0842d43996/_posts/assets/Pasted%20image%2020240806214536.png&lt;/code&gt; 指向的不是图片本身，&lt;code&gt;https://github.com/dangehub/github2wp/blob/b85405e3ef0c15a3caf57a038a545e0842d43996/_posts/assets/Pasted%20image%2020240806214536.png?raw=true&lt;/code&gt; 才是图片本身，替换为这个链接就好了。&lt;/p&gt;
&lt;p&gt;即用 &lt;code&gt;png?raw=true&lt;/code&gt; 替换 &lt;code&gt;png&lt;/code&gt;&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Obsidian实现复制时自动上传图片到图床/" //>
        </entry>
        <entry>
            <title>
                用css让obsidian中的扫描黑白文档融入笔记背景
                
            </title>
            <updated>2025-01-06T00:00:00Z</updated>
            <id>https://blog.qudange.top/Obsidian/用css让obsidian中的扫描黑白文档融入笔记背景/</id>
            <content type="html">
                &lt;p&gt;从&lt;a href=&quot;https://discord.com/channels/686053708261228577/1283153363864911982/1283153363864911982&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;• Discord | &amp;quot;Diff geom notes :D&amp;quot; | Obsidian Members Group (OMG)&lt;/a&gt;学习到的小技巧&lt;/p&gt;
&lt;p&gt;新建一个css文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.has-scan img {
    mix-blend-mode : multiply
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在笔记属性中添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
cssclasses: has-scan
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后就可以在笔记的&lt;code&gt;阅读视图&lt;/code&gt;下看到会跟随obsidian主题背景变化的图片了。&lt;/p&gt;
&lt;p&gt;据作者说如果需要在&lt;code&gt;实时视图&lt;/code&gt;中生效（但是在我这里没有生效， 原因未知），可以把css改为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.has-scan .internal-embed.media-embed.image-embed.is-loaded {
    background: var(--background-primary);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面是效果展示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;未启用效果&lt;/th&gt;
&lt;th&gt;启用后效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020250106211727.png&quot; alt=&quot;assets/Pasted image 20250106211727.png&quot; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020250106211742.png&quot; alt=&quot;assets/Pasted image 20250106211742.png&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这种方式特别适合扫描产生的黑白线稿图片。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/用css让obsidian中的扫描黑白文档融入笔记背景/" //>
        </entry>
        <entry>
            <title>
                我维护了一个obsidian示例库，分享了我的obsidian工作流
                
            </title>
            <updated>2024-12-16T00:00:00Z</updated>
            <id>https://blog.qudange.top/Obsidian/我维护了一个obsidian示例库，分享了我的obsidian工作流/</id>
            <content type="html">
                &lt;p&gt;我使用obsidian也有很长时间了，有时候也有朋友会问我，你是如何使用obsidian的，于是我制作了这个示例库，里面有我的一些常用插件与脚本，如果你还没有总结出独属于你的obsidian工作流，或许它会有一点价值。&lt;/p&gt;
&lt;p&gt;使用方法也很简单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开网址：&lt;a href=&quot;https://github.com/dangehub/aqu_ob_share&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;dangehub/aqu_ob_share: Share my Obsidian techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;按图下载示例库&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020241216193415.png&quot; alt=&quot;assets/Pasted image 20241216193415.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;解压此压缩包后，在obsidian中打开它&lt;/li&gt;
&lt;li&gt;具体细节请见库中&lt;code&gt;README.md&lt;/code&gt;，也就是用obsidian打开它之后根目录的那篇笔记。&lt;/li&gt;
&lt;/ol&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/我维护了一个obsidian示例库，分享了我的obsidian工作流/" //>
        </entry>
        <entry>
            <title>
                口播剪辑工作流探索
                
            </title>
            <updated>2024-10-16T00:00:00Z</updated>
            <id>https://blog.qudange.top/多媒体制作/口播剪辑工作流探索/</id>
            <content type="html">
                &lt;p&gt;在产品介绍、课程录制类型的视频制作中，有一个绕不开的问题就是如何让视频更紧凑。要解决这个问题，无非两条路：前期保证一次成型或者后期剪辑。&lt;/p&gt;
&lt;p&gt;如果想节省后期功夫，前期就要写好逐字稿，并且保证实际录制时不能出现太多差错，诸如无意义的停顿和“嗯、啊、哦、呃、然后”等口头词的频繁出现。这对前期的准备工作量与演讲者的演讲能力提出了较高的要求。&lt;/p&gt;
&lt;p&gt;如果前期粗糙制作，后期的工作量就会增大。后期需要将这些没有意义的部分全部剪辑掉，完全依赖水磨功夫。因此我想找到一个能极大节省这种水磨功夫的工具。&lt;/p&gt;
&lt;p&gt;剪映有一个很好用的功能叫智能剪口播，能做到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;转录字幕&lt;/li&gt;
&lt;li&gt;自动识别无意义的口头词与停顿&lt;/li&gt;
&lt;li&gt;一键剪辑掉上述无意义内容&lt;/li&gt;
&lt;li&gt;选择任意长度的字幕删除后，剪辑掉对应的视频片段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前全网我只知道剪映有这个功能，其他软件大多只在自动剪辑停顿（即气口）这个层面，还无法做到剪辑口头词。&lt;/p&gt;
&lt;p&gt;所以我在寻找能做到类似效果的开源项目，我找到两个项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mli/autocut&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;mli/autocut: 用文本编辑器剪视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HaujetZhao/QuickCut&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;HaujetZhao/QuickCut: Your most handy video processing software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AutoCut能通过字幕的时间戳来反向剪辑视频，不过原项目没有图形化界面，可以去fork的这个项目：&lt;a href=&quot;https://github.com/zcf0508/autocut-client&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;zcf0508/autocut-client: AutoCut Client&lt;/a&gt; 下载打包好的程序。&lt;/p&gt;
&lt;p&gt;QuickCut这个项目有一个比较有意思的功能，叫 &lt;code&gt;辅助字幕自动剪辑&lt;/code&gt;，大概的工作原理是在前期录制的时候如果有一段出错了，当时就马上反应过来，然后在录制时说出对应的关键词进行标记，比如录了2分钟，发现有问题，就说一句 &lt;code&gt;删除&lt;/code&gt;，然后再说2分钟，再说 &lt;code&gt;保留&lt;/code&gt;，这样就会把第一个2分钟的片段剪辑掉。具体的效果展示可以参见&lt;a href=&quot;https://www.bilibili.com/video/BV18T4y1E7FF?t=245.2&amp;amp;p=7&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;作者的视频&lt;/a&gt;，不过这个功能的弊端也很明显：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;前期录制的时候要能判断哪些需要被删除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于下意义的停顿和与语气词无效&lt;/p&gt;
&lt;p&gt;但是上述的项目也只是基于whisper的句级剪辑，无法复刻剪映那种根据单字来剪辑视频的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不过我也看到有人和我有同样的想法：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mli/autocut/issues/84&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;请问有没有选项可以做到一字一断呢 · Issue &lt;a class=&quot;tag&quot; onclick=&quot;toggleTagSearch(this)&quot; data-content=&quot;#84&quot;&gt;#84&lt;/a&gt; · mli/autocut&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同时也有网友找到了可能有帮助的项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/linto-ai/whisper-timestamped&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;linto-ai/whisper-timestamped：具有字级时间戳和置信度的多语言自动语音识别 --- linto-ai/whisper-timestamped: Multilingual Automatic Speech Recognition with word-level timestamps and confidence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/m-bain/whisperX&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;m-bain/whisperX：WhisperX：带有字级时间戳的自动语音识别（和二值化） --- m-bain/whisperX: WhisperX: Automatic Speech Recognition with Word-level Timestamps (&amp;amp; Diarization)&lt;/a&gt;&lt;br /&gt;
不过既没有集成，也没有图形界面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前来看，成熟的工具可能只有剪映。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/多媒体制作/口播剪辑工作流探索/" //>
        </entry>
        <entry>
            <title>
                Anyblock插件入门
                
            </title>
            <updated>2024-10-03T00:00:00Z</updated>
            <id>https://blog.qudange.top/Obsidian/Anyblock插件入门/</id>
            <content type="html">
                &lt;h1 id=&quot;插件简介&quot; tabindex=&quot;-1&quot;&gt;插件简介&lt;/h1&gt;
&lt;p&gt;Anyblock是一个【无语法、可扩展、灵活强大、多平台】 的 Markdown 块扩展渲染插件。能实现无语法入侵的前提下，为obsidian实现更多渲染效果，例如表格、折叠、滚动、思维导图等。&lt;/p&gt;
&lt;h1 id=&quot;官方文档&quot; tabindex=&quot;-1&quot;&gt;官方文档&lt;/h1&gt;
&lt;p&gt;作者的博客： &lt;a href=&quot;https://linczero.github.io/MdNote_Public/ProductDoc/AnyBlock/README.show.html&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;README | Linc 的小站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者自荐的帖子：&lt;a href=&quot;https://forum-zh.obsidian.md/t/topic/38352&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;列表转表格、树目录、思维导图、时间线、表格合并 —— Any Block V3（Ob/Md-it/VuePress/VitePress通用） - 经验分享 - Obsidian 中文论坛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;插件的开源地址：&lt;a href=&quot;https://github.com/LincZero/obsidian-any-block&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;LincZero/obsidian-any-block.&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用说明&quot; tabindex=&quot;-1&quot;&gt;使用说明&lt;/h1&gt;
&lt;p&gt;使用info语法召唤说明文档，如果你想看到渲染后的效果，应该在安装插件后，输入下面这段文字：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info]
- 这是any block的文档
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后应该会渲染出下面的效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020241003193747.png&quot; alt=&quot;assets/Pasted image 20241003193747.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;各效果器展示&quot; tabindex=&quot;-1&quot;&gt;各效果器展示&lt;/h2&gt;
&lt;p&gt;我只会在这里展示我常用的效果，更多内容参见插件自身的文档。&lt;/p&gt;
&lt;h3 id=&quot;文件树&quot; tabindex=&quot;-1&quot;&gt;文件树&lt;/h3&gt;
&lt;h4 id=&quot;技巧 ：&quot; tabindex=&quot;-1&quot;&gt;技巧 ：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;分隔左右侧的逗号是中文逗号&lt;/li&gt;
&lt;li&gt;逗号后有一个空格&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;源代码 ：&quot; tabindex=&quot;-1&quot;&gt;源代码 ：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[list2dt]

- vue-demo/
  - build/， 项目构建(webpack)相关代码
  - config/， 配置目录，包括端口号等。我们初学可以使用默认的
  - node_modules/， npm 加载的项目依赖模块
  - src/， 这里是我们要开发的目录
    - assets/， 放置一些图片，如logo等
    - components， 目录里面放了一个组件文件，可以不用
    - App.vue， 项目入口文件，我们也可以直接将组件写这里，而不使用 components 目录
    - main.js， 项目的核心文件。
  - static/， 静态资源目录，如图片、字体等
  - test/， 初始测试目录，可删除
  - .eslintignore
  - .gitignore， git配置
  - .index.html， 首页入口文件，你可以添加一些 meta 信息或统计代码啥的
  - package.json， 项目配置文件
  - READED.md， 项目的说明文档，markdown 格式&amp;lt;br&amp;gt;手动换行测试&amp;lt;br&amp;gt;自动换行测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试k
  - ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;效果展示 ：&quot; tabindex=&quot;-1&quot;&gt;效果展示 ：&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020241003193848.png&quot; alt=&quot;assets/Pasted image 20241003193848.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;超出折叠&quot; tabindex=&quot;-1&quot;&gt;超出折叠&lt;/h3&gt;
&lt;h4 id=&quot;300&quot; tabindex=&quot;-1&quot;&gt;技巧 ：使用(300)这样的参数控制显示范围&lt;/h4&gt;
&lt;h4 id=&quot;源代码：&quot; tabindex=&quot;-1&quot;&gt;源代码：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[overfold(300)]
- 1
- 2
- 3
- 4
- 5
- 6
- 7
- 8
- 9
- 10
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;img-src-img-user-107-e6-88-91-e7-9-a-84-e5-88-9-b-e4-bd-9-c-e6-96-87-e5-ad-97-e5-8-d-9-a-e5-ae-a2-e5-8-f-91-e5-b8-83-obsidian-assets-pasted-20image-2020241003193954-png-alt-assets-pasted-image-20241003193954-png&quot; tabindex=&quot;-1&quot;&gt;效果展示：&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020241003193954.png&quot; alt=&quot;assets/Pasted image 20241003193954.png&quot; /&gt;&lt;/h4&gt;
&lt;h3 id=&quot;滚动&quot; tabindex=&quot;-1&quot;&gt;滚动&lt;/h3&gt;
&lt;h4 id=&quot;300-1&quot; tabindex=&quot;-1&quot;&gt;技巧：滚动也适用(300)这样的长度控制参数&lt;/h4&gt;
&lt;h4 id=&quot;源代码：-1&quot; tabindex=&quot;-1&quot;&gt;源代码：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[scroll(300)]

- 1
- 2
- 3
- 4
- 5
- 6
- 7
- 8
- 9
- 10
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;img-src-img-user-107-e6-88-91-e7-9-a-84-e5-88-9-b-e4-bd-9-c-e6-96-87-e5-ad-97-e5-8-d-9-a-e5-ae-a2-e5-8-f-91-e5-b8-83-obsidian-assets-pasted-20image-2020241003194039-png-alt-assets-pasted-image-20241003194039-png&quot; tabindex=&quot;-1&quot;&gt;效果展示：&lt;img src=&quot;https://blog.qudange.top/img/user/107-%E6%88%91%E7%9A%84%E5%88%9B%E4%BD%9C/%E6%96%87%E5%AD%97/%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83/Obsidian/assets/Pasted%20image%2020241003194039.png&quot; alt=&quot;assets/Pasted image 20241003194039.png&quot; /&gt;&lt;/h4&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/Anyblock插件入门/" //>
        </entry>
        <entry>
            <title>
                把Obsidian发布为网页的各种方式探索
                
            </title>
            <updated>2024-08-26T00:00:00Z</updated>
            <id>https://blog.qudange.top/Obsidian/把Obsidian发布为网页的各种方式探索/</id>
            <content type="html">
                &lt;h1 id=&quot;obsidian&quot; tabindex=&quot;-1&quot;&gt;Obsidian发布方式汇总&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方式汇总&lt;/th&gt;
&lt;th&gt;优点&lt;/th&gt;
&lt;th&gt;缺点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;官方publish&lt;/td&gt;
&lt;td&gt;官方支持，稳定&lt;/td&gt;
&lt;td&gt;要花钱，数据非私有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;digital garden&lt;/td&gt;
&lt;td&gt;更新稳定，支持功能多&lt;/td&gt;
&lt;td&gt;静态页面，无法即时渲染&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quartz框架&lt;/td&gt;
&lt;td&gt;开发文档全面，可以自行&lt;/td&gt;
&lt;td&gt;静态页面，无法即时渲染&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perlite&lt;/td&gt;
&lt;td&gt;实时渲染，无需等待&lt;/td&gt;
&lt;td&gt;不支持dataview excalidraw等插件功能，需要服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对于不想折腾的用户来说，只有一种方案：花钱买官方的publish。本文不再讨论这种方法。&lt;/p&gt;
&lt;p&gt;其实目前主流的Obsidian发布方案就是两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过后端支持实现实时渲染，只需要把ob的md源码上传就能马上看到最终效果&lt;/li&gt;
&lt;li&gt;通过渲染器把md源码编译成一个静态网页，然后把静态网页文件托管到某个平台，好处是网页加载快，缺点是每次增删改笔记都要重新编译，往往需要等待数分钟才能看到新的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此如果发布前能保证已经完成了最终稿，那么静态发布是很好的选择。但是如果发布后还需要频繁修改，最好采用可即时编辑的工具。&lt;/p&gt;
&lt;h1 id=&quot;静态页面类&quot; tabindex=&quot;-1&quot;&gt;静态页面类&lt;/h1&gt;
&lt;p&gt;如果你想要找一个能免费且私有数据的发布obsidian笔记的方案，这可能是最好也是唯一的选择。&lt;/p&gt;
&lt;p&gt;可以简单的把静态页面的发布方式理解为即食食品，只需要拿到这个“静态页面”就可以开袋即食，与之相对的，非静态页面的方法，需要服务器进行渲染操作，因此一般是很难找到支持非静态页面的、大公司提供的、免费的方案。&lt;/p&gt;
&lt;p&gt;其实静态页面发布博客的方法浩如星海，较为出名如Jekyll、Hugo、Hexo、Vuepress、Docsdify都是很成熟且有较多主题可以选择的，不过考虑到我们要发布obsidian笔记，当然需要支持obsidian的wiki链接功能，因此之后不再考虑这些没有针对obsidian优化的框架。&lt;/p&gt;
&lt;h2 id=&quot;digital-garden&quot; tabindex=&quot;-1&quot;&gt;Digital Garden插件&lt;/h2&gt;
&lt;p&gt;项目地址：此插件已上架官方市场。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更新勤快，后续有支持&lt;/li&gt;
&lt;li&gt;功能多样
&lt;ul&gt;
&lt;li&gt;支持导入ob主题&lt;/li&gt;
&lt;li&gt;支持excalidraw&lt;/li&gt;
&lt;li&gt;支持dataview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依赖vercel（其实是可以使用github action的，不过需要一定动手能力）&lt;/li&gt;
&lt;li&gt;发布文章需要填写frontmatter，体验不够丝滑（可以使用模板来优化流程）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;quartz&quot; tabindex=&quot;-1&quot;&gt;Quartz框架&lt;/h2&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/jackyzha0/quartz&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;jackyzha0/quartz: 🌱 a fast, batteries-included static-site generator that transforms Markdown content into fully functional websites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原生美观程度是比digital garden高&lt;/li&gt;
&lt;li&gt;原生支持i18n，如果你需要发布多言语版本的文章，这点很重要&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不支持excalidraw&lt;/li&gt;
&lt;li&gt;不支持dataview&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;obcsapi&quot; tabindex=&quot;-1&quot;&gt;Obcsapi+对象存储&lt;/h2&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/kkbt0/obcsapi-go&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;kkbt0/obcsapi-go: 基于 WebDAV，S3 存储或 CouchDb 的后端 API ，Obsidian 笔记的 API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此方案来自和&lt;a href=&quot;https://www.ftls.xyz/posts/2024-12-09-hugo-obsidian-wenku/?atk_comment=155&amp;amp;atk_notify_key=GCFXN#:~:text=%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%A1%AE%E5%AE%9E,%E5%8F%AF%E8%83%BD%E8%BF%9B%E8%A1%8C%E4%BC%98%E5%8C%96%E3%80%82&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;和恐咖兵糖的聊天&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;obcsapi在对象存储模式下可以把渲染好的页面放在对象存储中，obsidian 额外生成一个索引并同步&lt;/p&gt;
&lt;h1 id=&quot;实时渲染类&quot; tabindex=&quot;-1&quot;&gt;实时渲染类&lt;/h1&gt;
&lt;h2 id=&quot;perlite&quot; tabindex=&quot;-1&quot;&gt;Perlite&lt;/h2&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/secure-77/Perlite&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;secure-77/Perlite: A web-based markdown viewer optimized for Obsidian&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实时，无需渲染&lt;/li&gt;
&lt;li&gt;可以直接把整个库复制进去，保留原库文件树&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持的功能较少
&lt;ul&gt;
&lt;li&gt;html标签不支持&lt;/li&gt;
&lt;li&gt;canvas不支持&lt;/li&gt;
&lt;li&gt;task语法不支持&lt;/li&gt;
&lt;li&gt;todo语法不支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;上次更新是7个月之前，疑似停更，支持力度更小&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;obcsapi-publish&quot; tabindex=&quot;-1&quot;&gt;Obcsapi-publish功能&lt;/h2&gt;
&lt;p&gt;obcsapi自带一个简易的publish页面，可以把指定目录的下笔记暴露在公开网络上。不过这个功能我并没有成功启动，暂时先记在这里。&lt;/p&gt;
&lt;p&gt;据说能配合lua脚本。&lt;/p&gt;
&lt;h1 id=&quot;采用第三方服务&quot; tabindex=&quot;-1&quot;&gt;采用第三方服务&lt;/h1&gt;
&lt;p&gt;如果能接受把上述两种方案的幕后工作交与第三方进行，我们也可以使用一些方案，但是请注意，你使用其他人提供的免费服务，可能面临对方突然停止服务或数据丢失（如果发布后本地不再留档）的风险，因此我只建议将这些方式作为临时发布方案。&lt;/p&gt;
&lt;p&gt;已上架官方市场的插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share Note&lt;/li&gt;
&lt;li&gt;Obsius Publish&lt;/li&gt;
&lt;li&gt;Friday&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你想探索那些没有上架官方市场的插件，可以在github搜索obsidian，然后去topics里面查看，印象中前5页就有好几个发布用的项目。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/Obsidian/把Obsidian发布为网页的各种方式探索/" //>
        </entry>
        <entry>
            <title>
                密码管理器：从bitwarden迁移到keepass
                
            </title>
            <updated>2024-04-24T00:00:00Z</updated>
            <id>https://blog.qudange.top/自托管折腾/密码管理器：从bitwarden迁移到keepass/</id>
            <content type="html">
                &lt;h1 id=&quot;bitwarden-keepass&quot; tabindex=&quot;-1&quot;&gt;bitwarden到keepass的迁移&lt;/h1&gt;
&lt;p&gt;bitwarden和keepass同为开源的支持自托管的密码管理器，keepass可以做到无服务端，因此我决定将我的密码库迁移到keepass，但是bitwarden直接导出的备份文件是不能把附件和totp等导入到keepass的，因此我们需要借助第三方项目来完成。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://hub.docker.com/r/rogsme/bitwarden-to-keepass#&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;https://hub.docker.com/r/rogsme/bitwarden-to-keepass#&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;本项目在github上也有python版本，但是我更喜欢用docker解决这种有运行环境的东西。&lt;/p&gt;
&lt;p&gt;这里我采用windows的docker desktop，需要注意是本地文件挂载的写法&lt;/p&gt;
&lt;p&gt;下面附上我的启动命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -it -e BITWARDEN_URL=&amp;quot;https://bitwarden.your.com/&amp;quot; -v C:&#92;Users&#92;username&#92;Documents&#92;keepass:/exports rogsme/bitwarden-to-keepass
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;code&gt;BITWARDEN_URL&lt;/code&gt;是自托管的项目地址，如果不设置这个环境变量，则是从官方项目获取。&lt;/p&gt;
&lt;p&gt;启动docker后，需要手动输入新建keepass的密码、bitwarden的邮箱、bw的密码，然后等待完成后，就可以在挂载的目录下找到对应的kpdb文件，导入到keepass即可。&lt;/p&gt;
&lt;h1 id=&quot;多平台客户端的选择&quot; tabindex=&quot;-1&quot;&gt;多平台客户端的选择&lt;/h1&gt;
&lt;p&gt;迁移之后就要考虑如何使用了，如何选择客户端，我主要参考了下面这篇文章。&lt;/p&gt;
&lt;p&gt;下表转自文章 &lt;a href=&quot;https://client.sspai.com/prime/story/opensource-password-managers-compared#!&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;不只为了省钱：开源密码管理器可用性报告&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;平台&lt;/th&gt;
&lt;th&gt;推荐客户端&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows/Linux&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fkeepassxc.org%2F&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassXC&lt;/a&gt; (开源免费，Qt 框架)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fgithub.com%2Fstrongbox-password-safe%2FStrongbox&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Strongbox&lt;/a&gt; (开源，高级功能 €15/年或 €60 买断)&lt;br /&gt;&lt;br /&gt;KeePassXC&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fgithub.com%2Fkeepassium%2FKeePassium&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassium&lt;/a&gt; (开源，高级功能 $20/年或 $80 买断)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;td&gt;Strongbox&lt;br /&gt;&lt;br /&gt;KeePassium&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fgithub.com%2FPhilippC%2Fkeepass2android&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Keepass2Android&lt;/a&gt; (开源免费)&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fgithub.com%2FKunzisoft%2FKeePassDX&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassDX&lt;/a&gt; (开源免费，有&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdatasafety%3Fid%3Dcom.kunzisoft.keepass.pro&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;捐赠版&lt;/a&gt;，$10 买断)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;浏览器&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fstrongbox.reamaze.com%2Fkb%2Fautofill%2Fare-there-any-browser-plugins-for-strongbox&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Strongbox 自带&lt;/a&gt; (Chromium、Firefox 和 Safari)&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc-browser&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassXC-Browser&lt;/a&gt; (Chromium 和 Firefox)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;命令行&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://client.sspai.com/link?target=https%3A%2F%2Fkeepassxc.org%2Fdocs%2FKeePassXC_UserGuide%23_command_line_tool&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassXC 自带&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;安卓端&quot; tabindex=&quot;-1&quot;&gt;安卓端&lt;/h2&gt;
&lt;p&gt;我对比了Keepass2Android和KeePassDX，前者界面比较古老，后者界面更好看，但是只有k2a支持多种云服务，而kpdx只支持本地文件（并且作者声明这是他的选择，为了更安全），云同步得自己用第三方软件实现。&lt;/p&gt;
&lt;p&gt;最后我选择使用了&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.kunzisoft.keepass.free&amp;amp;hl=en&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassDX&lt;/a&gt;，然后采用&lt;a href=&quot;https://play.google.com/store/apps/details?id=dk.tacit.android.foldersync.lite&amp;amp;hl=en&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;Foldersync app&lt;/a&gt;实现同步，云盘使用我自己搭建的webdav。&lt;/p&gt;
&lt;h2 id=&quot;win&quot; tabindex=&quot;-1&quot;&gt;win端&lt;/h2&gt;
&lt;p&gt;最后我选择了KeePassXC这个客户端，因为它也比较好看，功能也全面。不过它有一个缺点：中英文混排时，部分英文字母会变的很奇怪。&lt;/p&gt;
&lt;p&gt;桌面：&lt;a href=&quot;https://keepassxc.org/&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;KeePassXC Password Manager&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;浏览器装对应插件&lt;/p&gt;
&lt;h1 id=&quot;云同步的实现和备份&quot; tabindex=&quot;-1&quot;&gt;云同步的实现和备份&lt;/h1&gt;
&lt;h2 id=&quot;obcsapi-webdav&quot; tabindex=&quot;-1&quot;&gt;采用Obcsapi的webdav&lt;/h2&gt;
&lt;h2 id=&quot;obcsapi-onedrive&quot; tabindex=&quot;-1&quot;&gt;将obcsapi同步到onedrive&lt;/h2&gt;
&lt;p&gt;目录1:/mnt/onedrive&lt;br /&gt;
目录2:/data/compose/obcsapi&lt;/p&gt;
&lt;p&gt;&lt;s&gt;然后写个脚本，一直保活在后台监控&lt;/s&gt; &lt;font color=&quot;#ff0000&quot;&gt;此方法已被废弃。&lt;/font&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

  

# 源目录和目标目录

SOURCE_DIR=&amp;quot;/data/compose/obcsapi&amp;quot;

DESTINATION_DIR=&amp;quot;/mnt/onedrive/obcsapi&amp;quot;

  

# 从源目录到目标目录的同步

rsync -av --delete &amp;quot;$SOURCE_DIR/&amp;quot; &amp;quot;$DESTINATION_DIR/&amp;quot;

  

# 从目标目录到源目录的同步

rsync -av --delete &amp;quot;$DESTINATION_DIR/&amp;quot; &amp;quot;$SOURCE_DIR/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在采用的备份方法是定期压缩并同步到onedrive，使用1panel自带的备份工具。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/自托管折腾/密码管理器：从bitwarden迁移到keepass/" //>
        </entry>
        <entry>
            <title>
                在wordpress通过RSS来备份任何平台的信息，打造个人媒体枢纽
                
            </title>
            <updated>2024-04-24T00:00:00Z</updated>
            <id>https://blog.qudange.top/自托管折腾/在wordpress通过RSS来备份任何平台的信息，打造个人媒体枢纽/</id>
            <content type="html">
                &lt;h1 id=&quot;前言&quot; tabindex=&quot;-1&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;当年微博还是一个新兴事物，也并非现在新浪微博的缩写，而是microblog的中文名，而microblog顾名思义就是比blog/博客更轻量级的东西。&lt;/p&gt;
&lt;p&gt;在书写微博的时候，用户可以更没有压力，不用像写文章一样字斟句酌，而是可以用更口头化的、更肆意的字句来浇胸中块垒。&lt;/p&gt;
&lt;p&gt;记忆中，新浪博客曾经在个人文字媒体平台中占据了统治地位，而后它又推出了新浪轻博客，再然后才是新浪微博（那时候腾讯还有一个腾讯微博……）&lt;/p&gt;
&lt;p&gt;就在新浪微博飞速发展的时候，新浪悄无声息的关闭了新浪轻博客。而我在其中写的很多笔记都再也找不回来了。&lt;/p&gt;
&lt;p&gt;从那之后，我就对所有云托管类产品都产生了深深的不信任感。但是螳臂岂能当车，我们不得不承认大公司的产品在细节的雕琢上往往比个人产品更好，而且普通群众也很难承担各种服务的托管费用。因此我们大多数时候还是在使用这些产品。但是这些产品往往宽入严出，一旦进去了，就很难无损的把自己的作品再搬运出来。因此最好的办法就是在这些平台发布的时候，同时进行备份操作。&lt;/p&gt;
&lt;p&gt;今天我想探讨的就是如何在无压力使用各大平台的同时，完成数据的备份，为了体验的流畅性，这个备份一定要无感。也就是说我们只需要延续日常的使用，不需要每次手动进行任何额外的操作就能完成备份。&lt;/p&gt;
&lt;p&gt;在我长期的探索中，总结出了一套行之有效的办法：使用RSS抓取各平台信息，使用wordpress作为枢纽导入这些信息。&lt;/p&gt;
&lt;h1 id=&quot;rss&quot; tabindex=&quot;-1&quot;&gt;借助RSS同步全平台&lt;/h1&gt;
&lt;p&gt;同步多平台的核心原理是利用RSS抓取不同平台自己账号发布的内容，以实现备份全平台的信息。&lt;/p&gt;
&lt;p&gt;其中部分平台自带RSS，可以直接进入导入环节。&lt;/p&gt;
&lt;p&gt;但是也有很多平台是不提供RSS的，这个时候就需要使用其他工具，这里我一般采用RSShub来转换不支持RSS的网站。包括但不限于网易云音乐动态、新浪微博、酷安动态、Bilibili动态。&lt;/p&gt;
&lt;p&gt;RSShub的配置不再赘述，见官方文档即可。&lt;/p&gt;
&lt;p&gt;下面让我们看看具体如何导入RSS到wordpress。&lt;/p&gt;
&lt;h2 id=&quot;feedzy&quot; tabindex=&quot;-1&quot;&gt;Feedzy插件实现（已废弃）&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;Feedzy&lt;/code&gt;插件，注意两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;rss链接最后跟上&lt;code&gt;/?feed_author=1&lt;/code&gt;，最后的数字是&lt;code&gt;wordpress user ID&lt;/code&gt;，这样可以指定这个rss的作者是谁，1就是我的admin账号。如果不加的话，所有rss搬运过来会变成空用户，还得手动修改作者。&lt;/li&gt;
&lt;li&gt;发布时间选择&lt;code&gt;item_date&lt;/code&gt;，这样rss的搬运内容会和原平台的发布时间同步，比如2024-04-23在wp搬运了一条2024-02-02的，就会变成在wp的2-2发布，而不是4-23，这样可以防止时间乱序。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;font color=&quot;#ff0000&quot;&gt;因为这个插件又要花钱，还有一些bug，不如下面那个插件，因此已放弃使用。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;a-href-https-github-com-etruel-wpematico-target-blank-class-external-link-wpematico-a&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/etruel/wpematico&quot; target=&quot;_blank&quot; class=&quot;external-link&quot;&gt;wpematico&lt;/a&gt;插件实现&lt;/h2&gt;
&lt;p&gt;设置的简易流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;Feed URL&lt;/code&gt;添加要同步的平台rss链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Campaign选项&lt;/code&gt;中勾选&lt;code&gt;使用Feed项目的时间&lt;/code&gt;与其子选项&lt;code&gt;强制项日期&lt;/code&gt;，这一条是为了让wordperss中的发布时间由原贴时间控制，而不是rss导入的时间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;作者&lt;/code&gt;设置为自己wordpress的用户&lt;/li&gt;
&lt;li&gt;设置计划任务&lt;/li&gt;
&lt;li&gt;文章模板建议如下设置，这样可以表示这是来自某某平台的同步备份贴，也能提供原链接地址，便于后续溯源。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;{content}
&amp;lt;a href=&amp;quot;{permalink}&amp;quot;&amp;gt;跳转源&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;wordpress&quot; tabindex=&quot;-1&quot;&gt;把wordpress接入联邦宇宙，实现关注功能&lt;/h1&gt;
&lt;p&gt;简单来说，联邦宇宙是一种通用协议，可以让Mastodon、Misskey等新兴的去中心化的微博平台互相链接，它使得不同平台互相关注成为了可能，而不是像传统的twitter/新浪微博/facebook等，只能在自家平台中互相关注。&lt;/p&gt;
&lt;p&gt;为了实现这个效果，我们需要安装几个插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ActivityPub：让wordpress可以与联邦宇宙通信&lt;/li&gt;
&lt;li&gt;Enable Mastodon Apps：允许通过 Mastodon 客户端访问您的 WordPress&lt;/li&gt;
&lt;li&gt;Friends：使wordpress可以关注其他联邦宇宙的对象&lt;/li&gt;
&lt;li&gt;Friends Mastodon-like Interface：friends的拓展插件，其实是一个仿mastodon的主题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在安装完以上插件后，你的wordpress就可以当做一个mastodon来使用了。&lt;/p&gt;

            </content>
            <link href="https://blog.qudange.top/自托管折腾/在wordpress通过RSS来备份任何平台的信息，打造个人媒体枢纽/" //>
        </entry>
</feed>

